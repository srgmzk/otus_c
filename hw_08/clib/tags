!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mos/disk2/c_shit/otus_c/hw_08/clib/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
$(BINS)	Makefile	/^$(BINS): $(SRC) $(MAKEFILES) $(OBJS)$/;"	t
$(MAKEFILES)	Makefile	/^$(MAKEFILES):$/;"	t
%.o	Makefile	/^%.o: %.c$/;"	t
.DEFAULT_GOAL	test/cache/Makefile	/^.DEFAULT_GOAL := test$/;"	m
.DEFAULT_GOAL	test/package/Makefile	/^.DEFAULT_GOAL := test$/;"	m
0	clib.json	/^    "src\/clib-configure.c",$/;"	s	array:src
0	deps/asprintf/package.json	/^  "keywords": ["asprintf", "sprintf", "alloc", "string"],$/;"	s	array:keywords
0	deps/asprintf/package.json	/^  "src": ["asprintf.h", "asprintf.c"]$/;"	s	array:src
0	deps/assertion-macros/package.json	/^  "keywords": [ "assert", "assertions" ],$/;"	s	array:keywords
0	deps/assertion-macros/package.json	/^  "src": [ "assertion-macros.h" ]$/;"	s	array:src
0	deps/case/package.json	/^    "src\/case.c",$/;"	s	array:src
0	deps/case/package.json	/^    "string",$/;"	s	array:keywords
0	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
0	deps/commander/clib.json	/^  "src": ["src\/commander.h", "src\/commander.c"]$/;"	s	array:src
0	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
0	deps/commander/package.json	/^  "src": ["src\/commander.h", "src\/commander.c"]$/;"	s	array:src
0	deps/console-colors/package.json	/^    "console-colors.c",$/;"	s	array:src
0	deps/console-colors/package.json	/^  "keywords": [ "console", "color" ],$/;"	s	array:keywords
0	deps/copy/clib.json	/^    "dir",$/;"	s	array:keywords
0	deps/copy/clib.json	/^    "src\/copy.c",$/;"	s	array:src
0	deps/copy/package.json	/^    "dir",$/;"	s	array:keywords
0	deps/copy/package.json	/^    "src\/copy.c",$/;"	s	array:src
0	deps/debug/package.json	/^  "src": ["debug.h", "debug.c"],$/;"	s	array:src
0	deps/describe/package.json	/^  "keywords": [ "testing", "bdd", "assert", "describe" ],$/;"	s	array:keywords
0	deps/describe/package.json	/^  "src": [ "describe.h" ],$/;"	s	array:src
0	deps/fs/clib.json	/^    "fs",$/;"	s	array:keywords
0	deps/fs/clib.json	/^    "fs.h",$/;"	s	array:src
0	deps/fs/package.json	/^    "fs"$/;"	s	array:keywords
0	deps/fs/package.json	/^  "src": ["fs.h", "fs.c"],$/;"	s	array:src
0	deps/gumbo-get-element-by-id/package.json	/^    "src\/get-element-by-id.c",$/;"	s	array:src
0	deps/gumbo-get-elements-by-tag-name/package.json	/^    "src\/get-elements-by-tag-name.c",$/;"	s	array:src
0	deps/gumbo-parser/package.json	/^    "parse",$/;"	s	array:keywords
0	deps/gumbo-parser/package.json	/^    "src\/attribute.c",$/;"	s	array:src
0	deps/gumbo-text-content/package.json	/^    "src\/gumbo-text-content.c",$/;"	s	array:src
0	deps/hash/clib.json	/^  "keywords": ["hash", "khash", "container"],$/;"	s	array:keywords
0	deps/hash/clib.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	s	array:src
0	deps/hash/package.json	/^  "keywords": ["hash", "khash", "container"],$/;"	s	array:keywords
0	deps/hash/package.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	s	array:src
0	deps/http-get/clib.json	/^    "http",$/;"	s	array:keywords
0	deps/http-get/clib.json	/^    "src\/http-get.c",$/;"	s	array:src
0	deps/list/package.json	/^    "src\/list_iterator.c",$/;"	s	array:src
0	deps/list/package.json	/^  "keywords": ["list", "structure"],$/;"	s	array:keywords
0	deps/logger/clib.json	/^  "src": ["logger.h"],$/;"	s	array:src
0	deps/logger/package.json	/^  "src": ["logger.h"],$/;"	s	array:src
0	deps/mkdirp/package.json	/^    "mkdir",$/;"	s	array:keywords
0	deps/mkdirp/package.json	/^    "src\/mkdirp.c",$/;"	s	array:src
0	deps/occurrences/package.json	/^    "occurrences.c",$/;"	s	array:src
0	deps/occurrences/package.json	/^  "keywords": [ "string", "occurrences", "count" ],$/;"	s	array:keywords
0	deps/parse-repo/package.json	/^    "src\/parse-repo.c",$/;"	s	array:src
0	deps/parse-repo/package.json	/^  "keywords": [ "parse", "GitHub", "repo" ],$/;"	s	array:keywords
0	deps/parson/clib.json	/^    "parson.c",$/;"	s	array:src
0	deps/parson/clib.json	/^  "keywords": [ "json", "parser" ],$/;"	s	array:keywords
0	deps/parson/package.json	/^    "parson.c",$/;"	s	array:src
0	deps/parson/package.json	/^  "keywords": [ "json", "parser" ],$/;"	s	array:keywords
0	deps/path-join/package.json	/^    "path",$/;"	s	array:keywords
0	deps/path-join/package.json	/^    "src\/path-join.c",$/;"	s	array:src
0	deps/path-normalize/package.json	/^    "path",$/;"	s	array:keywords
0	deps/path-normalize/package.json	/^    "src\/path-normalize.c",$/;"	s	array:src
0	deps/rimraf/package.json	/^    "src\/rimraf.c",$/;"	s	array:src
0	deps/rimraf/package.json	/^  "keywords": [ "rm", "rimraf", "unlink" ],$/;"	s	array:keywords
0	deps/str-concat/clib.json	/^    "src\/str-concat.c",$/;"	s	array:src
0	deps/str-concat/clib.json	/^  "keywords": [ "string", "concat" ],$/;"	s	array:keywords
0	deps/str-concat/package.json	/^    "src\/str-concat.c",$/;"	s	array:src
0	deps/str-concat/package.json	/^  "keywords": [ "string", "concat" ],$/;"	s	array:keywords
0	deps/str-ends-with/package.json	/^    "src\/str-ends-with.c",$/;"	s	array:src
0	deps/str-ends-with/package.json	/^  "keywords": [ "string" ],$/;"	s	array:keywords
0	deps/str-flatten/package.json	/^    "src\/str-flatten.c",$/;"	s	array:src
0	deps/str-flatten/package.json	/^  "keywords": [ "string", "flatten", "join" ],$/;"	s	array:keywords
0	deps/str-replace/package.json	/^    "src\/str-replace.c",$/;"	s	array:src
0	deps/str-replace/package.json	/^  "keywords": [ "string", "replace" ],$/;"	s	array:keywords
0	deps/str-starts-with/package.json	/^    "src\/str-starts-with.c",$/;"	s	array:src
0	deps/str-starts-with/package.json	/^  "keywords": [ "string" ],$/;"	s	array:keywords
0	deps/strdup/clib.json	/^    "strdup.c",$/;"	s	array:src
0	deps/strdup/clib.json	/^  "keywords": [ "string", "copy" ],$/;"	s	array:keywords
0	deps/strdup/package.json	/^    "strdup.c",$/;"	s	array:src
0	deps/strdup/package.json	/^  "keywords": [ "string", "copy" ],$/;"	s	array:keywords
0	deps/substr/package.json	/^    "src\/substr.c",$/;"	s	array:src
0	deps/substr/package.json	/^  "keywords": [ "substr", "substring", "string" ],$/;"	s	array:keywords
0	deps/tempdir/package.json	/^  "keywords": ["temp", "tempdir"],$/;"	s	array:keywords
0	deps/tempdir/package.json	/^  "src": ["tempdir.h", "tempdir.c"],$/;"	s	array:src
0	deps/tinydir/package.json	/^    "dir",$/;"	s	array:keywords
0	deps/tinydir/package.json	/^    "tinydir.h"$/;"	s	array:src
0	deps/trim/package.json	/^    "src\/trim.c",$/;"	s	array:src
0	deps/trim/package.json	/^    "string",$/;"	s	array:keywords
0	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
0	deps/which/clib.json	/^  "src": ["src\/which.c", "src\/which.h"],$/;"	s	array:src
0	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
0	deps/which/package.json	/^  "src": ["src\/which.c", "src\/which.h"],$/;"	s	array:src
0	deps/wiki-registry/package.json	/^    "src\/wiki-registry.c",$/;"	s	array:src
0	deps/wiki-registry/package.json	/^  "keywords": [ "registry", "github", "wiki" ],$/;"	s	array:keywords
0	deps/wildcardcmp/clib.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	s	array:keywords
0	deps/wildcardcmp/clib.json	/^  "src": ["wildcardcmp.c", "wildcardcmp.h"]$/;"	s	array:src
0	deps/wildcardcmp/package.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	s	array:keywords
0	deps/wildcardcmp/package.json	/^  "src": ["wildcardcmp.c", "wildcardcmp.h"]$/;"	s	array:src
0.0.1 / 2010-01-03	History.md	/^0.0.1 \/ 2010-01-03$/;"	c
0.0.2 / 2012-10-30	History.md	/^0.0.2 \/ 2012-10-30$/;"	c
0.0.3 / 2012-11-20	History.md	/^0.0.3 \/ 2012-11-20$/;"	c
0.1.0 / 2013-10-11	History.md	/^0.1.0 \/ 2013-10-11$/;"	c
0.2.0 / 2013-12-19	History.md	/^0.2.0 \/ 2013-12-19$/;"	c
1	clib.json	/^    "src\/clib-init.c",$/;"	s	array:src
1	deps/asprintf/package.json	/^  "keywords": ["asprintf", "sprintf", "alloc", "string"],$/;"	s	array:keywords
1	deps/asprintf/package.json	/^  "src": ["asprintf.h", "asprintf.c"]$/;"	s	array:src
1	deps/assertion-macros/package.json	/^  "keywords": [ "assert", "assertions" ],$/;"	s	array:keywords
1	deps/case/package.json	/^    "src\/case.h"$/;"	s	array:src
1	deps/case/package.json	/^    "uppercase",$/;"	s	array:keywords
1	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
1	deps/commander/clib.json	/^  "src": ["src\/commander.h", "src\/commander.c"]$/;"	s	array:src
1	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
1	deps/commander/package.json	/^  "src": ["src\/commander.h", "src\/commander.c"]$/;"	s	array:src
1	deps/console-colors/package.json	/^    "console-colors.h"$/;"	s	array:src
1	deps/console-colors/package.json	/^  "keywords": [ "console", "color" ],$/;"	s	array:keywords
1	deps/copy/clib.json	/^    "directory",$/;"	s	array:keywords
1	deps/copy/clib.json	/^    "src\/copy.h"$/;"	s	array:src
1	deps/copy/package.json	/^    "directory",$/;"	s	array:keywords
1	deps/copy/package.json	/^    "src\/copy.h"$/;"	s	array:src
1	deps/debug/package.json	/^  "src": ["debug.h", "debug.c"],$/;"	s	array:src
1	deps/describe/package.json	/^  "keywords": [ "testing", "bdd", "assert", "describe" ],$/;"	s	array:keywords
1	deps/fs/clib.json	/^    "filesystem",$/;"	s	array:keywords
1	deps/fs/clib.json	/^    "fs.c"$/;"	s	array:src
1	deps/fs/package.json	/^  "src": ["fs.h", "fs.c"],$/;"	s	array:src
1	deps/gumbo-get-element-by-id/package.json	/^    "src\/get-element-by-id.h"$/;"	s	array:src
1	deps/gumbo-get-elements-by-tag-name/package.json	/^    "src\/get-elements-by-tag-name.h"$/;"	s	array:src
1	deps/gumbo-parser/package.json	/^    "html",$/;"	s	array:keywords
1	deps/gumbo-parser/package.json	/^    "src\/attribute.h",$/;"	s	array:src
1	deps/gumbo-text-content/package.json	/^    "src\/gumbo-text-content.h"$/;"	s	array:src
1	deps/hash/clib.json	/^  "keywords": ["hash", "khash", "container"],$/;"	s	array:keywords
1	deps/hash/clib.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	s	array:src
1	deps/hash/package.json	/^  "keywords": ["hash", "khash", "container"],$/;"	s	array:keywords
1	deps/hash/package.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	s	array:src
1	deps/http-get/clib.json	/^    "curl",$/;"	s	array:keywords
1	deps/http-get/clib.json	/^    "src\/http-get.h"$/;"	s	array:src
1	deps/list/package.json	/^    "src\/list.c",$/;"	s	array:src
1	deps/list/package.json	/^  "keywords": ["list", "structure"],$/;"	s	array:keywords
1	deps/mkdirp/package.json	/^    "mkdirp"$/;"	s	array:keywords
1	deps/mkdirp/package.json	/^    "src\/mkdirp.h"$/;"	s	array:src
1	deps/occurrences/package.json	/^    "occurrences.h"$/;"	s	array:src
1	deps/occurrences/package.json	/^  "keywords": [ "string", "occurrences", "count" ],$/;"	s	array:keywords
1	deps/parse-repo/package.json	/^    "src\/parse-repo.h"$/;"	s	array:src
1	deps/parse-repo/package.json	/^  "keywords": [ "parse", "GitHub", "repo" ],$/;"	s	array:keywords
1	deps/parson/clib.json	/^    "parson.h"$/;"	s	array:src
1	deps/parson/clib.json	/^  "keywords": [ "json", "parser" ],$/;"	s	array:keywords
1	deps/parson/package.json	/^    "parson.h"$/;"	s	array:src
1	deps/parson/package.json	/^  "keywords": [ "json", "parser" ],$/;"	s	array:keywords
1	deps/path-join/package.json	/^    "join",$/;"	s	array:keywords
1	deps/path-join/package.json	/^    "src\/path-join.h"$/;"	s	array:src
1	deps/path-normalize/package.json	/^    "directory",$/;"	s	array:keywords
1	deps/path-normalize/package.json	/^    "src\/path-normalize.h"$/;"	s	array:src
1	deps/rimraf/package.json	/^    "src\/rimraf.h"$/;"	s	array:src
1	deps/rimraf/package.json	/^  "keywords": [ "rm", "rimraf", "unlink" ],$/;"	s	array:keywords
1	deps/str-concat/clib.json	/^    "src\/str-concat.h"$/;"	s	array:src
1	deps/str-concat/clib.json	/^  "keywords": [ "string", "concat" ],$/;"	s	array:keywords
1	deps/str-concat/package.json	/^    "src\/str-concat.h"$/;"	s	array:src
1	deps/str-concat/package.json	/^  "keywords": [ "string", "concat" ],$/;"	s	array:keywords
1	deps/str-ends-with/package.json	/^    "src\/str-ends-with.h"$/;"	s	array:src
1	deps/str-flatten/package.json	/^    "src\/str-flatten.h"$/;"	s	array:src
1	deps/str-flatten/package.json	/^  "keywords": [ "string", "flatten", "join" ],$/;"	s	array:keywords
1	deps/str-replace/package.json	/^    "src\/str-replace.h"$/;"	s	array:src
1	deps/str-replace/package.json	/^  "keywords": [ "string", "replace" ],$/;"	s	array:keywords
1	deps/str-starts-with/package.json	/^    "src\/str-starts-with.h"$/;"	s	array:src
1	deps/strdup/clib.json	/^    "strdup.h"$/;"	s	array:src
1	deps/strdup/clib.json	/^  "keywords": [ "string", "copy" ],$/;"	s	array:keywords
1	deps/strdup/package.json	/^    "strdup.h"$/;"	s	array:src
1	deps/strdup/package.json	/^  "keywords": [ "string", "copy" ],$/;"	s	array:keywords
1	deps/substr/package.json	/^    "src\/substr.h"$/;"	s	array:src
1	deps/substr/package.json	/^  "keywords": [ "substr", "substring", "string" ],$/;"	s	array:keywords
1	deps/tempdir/package.json	/^  "keywords": ["temp", "tempdir"],$/;"	s	array:keywords
1	deps/tempdir/package.json	/^  "src": ["tempdir.h", "tempdir.c"],$/;"	s	array:src
1	deps/tinydir/package.json	/^    "directory",$/;"	s	array:keywords
1	deps/trim/package.json	/^    "src\/trim.h"$/;"	s	array:src
1	deps/trim/package.json	/^    "trim",$/;"	s	array:keywords
1	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
1	deps/which/clib.json	/^  "src": ["src\/which.c", "src\/which.h"],$/;"	s	array:src
1	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
1	deps/which/package.json	/^  "src": ["src\/which.c", "src\/which.h"],$/;"	s	array:src
1	deps/wiki-registry/package.json	/^    "src\/wiki-registry.h"$/;"	s	array:src
1	deps/wiki-registry/package.json	/^  "keywords": [ "registry", "github", "wiki" ],$/;"	s	array:keywords
1	deps/wildcardcmp/clib.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	s	array:keywords
1	deps/wildcardcmp/clib.json	/^  "src": ["wildcardcmp.c", "wildcardcmp.h"]$/;"	s	array:src
1	deps/wildcardcmp/package.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	s	array:keywords
1	deps/wildcardcmp/package.json	/^  "src": ["wildcardcmp.c", "wildcardcmp.h"]$/;"	s	array:src
1.0.0 / 2014-02-24	History.md	/^1.0.0 \/ 2014-02-24$/;"	c
1.0.1 / 2014-02-26	History.md	/^1.0.1 \/ 2014-02-26$/;"	c
1.1.0 / 2014-03-10	History.md	/^1.1.0 \/ 2014-03-10$/;"	c
1.1.1 / 2014-03-10	History.md	/^1.1.1 \/ 2014-03-10$/;"	c
1.1.2 / 2014-03-17	History.md	/^1.1.2 \/ 2014-03-17$/;"	c
1.1.3 / 2014-03-26	History.md	/^1.1.3 \/ 2014-03-26$/;"	c
1.1.4 / 2014-03-26	History.md	/^1.1.4 \/ 2014-03-26$/;"	c
1.1.5 / 2014-05-06	History.md	/^1.1.5 \/ 2014-05-06$/;"	c
1.1.6 / 2014-05-16	History.md	/^1.1.6 \/ 2014-05-16$/;"	c
1.2.0 / 2014-05-23	History.md	/^1.2.0 \/ 2014-05-23$/;"	c
1.2.1 / 2014-06-28	History.md	/^1.2.1 \/ 2014-06-28$/;"	c
1.2.2 / 2014-07-03	History.md	/^1.2.2 \/ 2014-07-03$/;"	c
1.2.3 / 2014-10-24	History.md	/^1.2.3 \/ 2014-10-24$/;"	c
1.2.4 / 2014-11-21	History.md	/^1.2.4 \/ 2014-11-21$/;"	c
1.3.0 / 2014-12-01	History.md	/^1.3.0 \/ 2014-12-01$/;"	c
1.4.0 / 2014-12-01	History.md	/^1.4.0 \/ 2014-12-01$/;"	c
1.4.1 / 2014-12-15	History.md	/^1.4.1 \/ 2014-12-15$/;"	c
1.4.2 / 2015-01-06	History.md	/^1.4.2 \/ 2015-01-06$/;"	c
1.5.0 / 2015-11-17	History.md	/^1.5.0 \/ 2015-11-17$/;"	c
1.6.0 / 2016-01-17	History.md	/^1.6.0 \/ 2016-01-17$/;"	c
1.7.0 / 2016-01-17	History.md	/^1.7.0 \/ 2016-01-17$/;"	c
1.8.0 / 2016-11-02	History.md	/^1.8.0 \/ 2016-11-02$/;"	c
1.8.1 / 2017-08-21	History.md	/^1.8.1 \/ 2017-08-21$/;"	c
10	deps/gumbo-parser/package.json	/^    "src\/string_buffer.c",$/;"	s	array:src
11	deps/gumbo-parser/package.json	/^    "src\/string_buffer.h",$/;"	s	array:src
12	deps/gumbo-parser/package.json	/^    "src\/string_piece.c",$/;"	s	array:src
13	deps/gumbo-parser/package.json	/^    "src\/string_piece.h",$/;"	s	array:src
14	deps/gumbo-parser/package.json	/^    "src\/tag.c",$/;"	s	array:src
15	deps/gumbo-parser/package.json	/^    "src\/token_type.h",$/;"	s	array:src
16	deps/gumbo-parser/package.json	/^    "src\/tokenizer.c",$/;"	s	array:src
17	deps/gumbo-parser/package.json	/^    "src\/tokenizer.h",$/;"	s	array:src
18	deps/gumbo-parser/package.json	/^    "src\/tokenizer_states.h",$/;"	s	array:src
19	deps/gumbo-parser/package.json	/^    "src\/utf8.c",$/;"	s	array:src
2	clib.json	/^    "src\/clib-install.c",$/;"	s	array:src
2	deps/asprintf/package.json	/^  "keywords": ["asprintf", "sprintf", "alloc", "string"],$/;"	s	array:keywords
2	deps/case/package.json	/^    "lowercase"$/;"	s	array:keywords
2	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
2	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
2	deps/copy/clib.json	/^    "file",$/;"	s	array:keywords
2	deps/copy/package.json	/^    "file",$/;"	s	array:keywords
2	deps/describe/package.json	/^  "keywords": [ "testing", "bdd", "assert", "describe" ],$/;"	s	array:keywords
2	deps/fs/clib.json	/^    "file",$/;"	s	array:keywords
2	deps/gumbo-parser/package.json	/^    "html5",$/;"	s	array:keywords
2	deps/gumbo-parser/package.json	/^    "src\/char_ref.c",$/;"	s	array:src
2	deps/hash/clib.json	/^  "keywords": ["hash", "khash", "container"],$/;"	s	array:keywords
2	deps/hash/clib.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	s	array:src
2	deps/hash/package.json	/^  "keywords": ["hash", "khash", "container"],$/;"	s	array:keywords
2	deps/hash/package.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	s	array:src
2	deps/http-get/clib.json	/^    "get",$/;"	s	array:keywords
2	deps/list/package.json	/^    "src\/list_node.c",$/;"	s	array:src
2	deps/occurrences/package.json	/^  "keywords": [ "string", "occurrences", "count" ],$/;"	s	array:keywords
2	deps/parse-repo/package.json	/^  "keywords": [ "parse", "GitHub", "repo" ],$/;"	s	array:keywords
2	deps/path-join/package.json	/^    "directory",$/;"	s	array:keywords
2	deps/path-normalize/package.json	/^    "normalize"$/;"	s	array:keywords
2	deps/rimraf/package.json	/^  "keywords": [ "rm", "rimraf", "unlink" ],$/;"	s	array:keywords
2	deps/str-flatten/package.json	/^  "keywords": [ "string", "flatten", "join" ],$/;"	s	array:keywords
2	deps/substr/package.json	/^  "keywords": [ "substr", "substring", "string" ],$/;"	s	array:keywords
2	deps/tinydir/package.json	/^    "file",$/;"	s	array:keywords
2	deps/trim/package.json	/^    "trim left",$/;"	s	array:keywords
2	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
2	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
2	deps/wiki-registry/package.json	/^  "keywords": [ "registry", "github", "wiki" ],$/;"	s	array:keywords
2	deps/wildcardcmp/clib.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	s	array:keywords
2	deps/wildcardcmp/package.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	s	array:keywords
2.2.0 / 2020-08-25	History.md	/^2.2.0 \/ 2020-08-25$/;"	c
20	deps/gumbo-parser/package.json	/^    "src\/utf8.h",$/;"	s	array:src
21	deps/gumbo-parser/package.json	/^    "src\/util.c",$/;"	s	array:src
22	deps/gumbo-parser/package.json	/^    "src\/util.h",$/;"	s	array:src
23	deps/gumbo-parser/package.json	/^    "src\/vector.c",$/;"	s	array:src
24	deps/gumbo-parser/package.json	/^    "src\/vector.h"$/;"	s	array:src
3	clib.json	/^    "src\/clib-search.c",$/;"	s	array:src
3	deps/asprintf/package.json	/^  "keywords": ["asprintf", "sprintf", "alloc", "string"],$/;"	s	array:keywords
3	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
3	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
3	deps/copy/clib.json	/^    "copy",$/;"	s	array:keywords
3	deps/copy/package.json	/^    "copy",$/;"	s	array:keywords
3	deps/describe/package.json	/^  "keywords": [ "testing", "bdd", "assert", "describe" ],$/;"	s	array:keywords
3	deps/fs/clib.json	/^    "system"$/;"	s	array:keywords
3	deps/gumbo-parser/package.json	/^    "clib"$/;"	s	array:keywords
3	deps/gumbo-parser/package.json	/^    "src\/char_ref.h",$/;"	s	array:src
3	deps/http-get/clib.json	/^    "download"$/;"	s	array:keywords
3	deps/list/package.json	/^    "src\/list.h"$/;"	s	array:src
3	deps/path-join/package.json	/^    "file"$/;"	s	array:keywords
3	deps/tinydir/package.json	/^    "reader",$/;"	s	array:keywords
3	deps/trim/package.json	/^    "trim right"$/;"	s	array:keywords
3	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
3	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
4	clib.json	/^    "src\/clib.c",$/;"	s	array:src
4	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
4	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
4	deps/copy/clib.json	/^    "recursive"$/;"	s	array:keywords
4	deps/copy/package.json	/^    "recursive"$/;"	s	array:keywords
4	deps/gumbo-parser/package.json	/^    "src\/error.c",$/;"	s	array:src
4	deps/tinydir/package.json	/^    "filesystem"$/;"	s	array:keywords
4	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
4	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
5	clib.json	/^    "src\/version.h",$/;"	s	array:src
5	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
5	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	s	array:keywords
5	deps/gumbo-parser/package.json	/^    "src\/error.h",$/;"	s	array:src
5	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
5	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
6	clib.json	/^    "Makefile"$/;"	s	array:src
6	deps/gumbo-parser/package.json	/^    "src\/gumbo.h",$/;"	s	array:src
6	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
6	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	s	array:keywords
7	deps/gumbo-parser/package.json	/^    "src\/insertion_mode.h",$/;"	s	array:src
8	deps/gumbo-parser/package.json	/^    "src\/parser.c",$/;"	s	array:src
9	deps/gumbo-parser/package.json	/^    "src\/parser.h",$/;"	s	array:src
AC_VERSION_KHASH_H	deps/hash/khash.h	/^#define AC_VERSION_KHASH_H /;"	d
ALL_SRC	Makefile	/^ALL_SRC = $(wildcard src\/*.c src\/*.h src\/common\/*.c src\/common\/*.h)$/;"	m
APPEND_INDENT	deps/parson/parson.c	/^#define APPEND_INDENT(/;"	d	file:
APPEND_STRING	deps/parson/parson.c	/^#define APPEND_STRING(/;"	d	file:
ARRAY_MAX_CAPACITY	deps/parson/parson.c	/^#define ARRAY_MAX_CAPACITY /;"	d	file:
ASPRINTF_H	deps/asprintf/asprintf.h	/^#define ASPRINTF_H /;"	d
ASSERTION_MACROS_H	deps/assertion-macros/assertion-macros.h	/^#define ASSERTION_MACROS_H /;"	d
AUTODEPS	Makefile	/^AUTODEPS:= $(patsubst %.c,%.d, $(DEPS)) $(patsubst %.c,%.d, $(SRC))$/;"	m
AVOID_UNUSED_VARIABLE_WARNING	deps/gumbo-parser/parser.c	/^#define AVOID_UNUSED_VARIABLE_WARNING(/;"	d	file:
About	Readme.md	/^## About$/;"	s	chapter:clib(1)
Articles	Readme.md	/^## Articles$/;"	s	chapter:clib(1)
BASE_CACHE_PATTERN	src/common/clib-cache.c	/^#define BASE_CACHE_PATTERN /;"	d	file:
BASE_DIR	src/common/clib-cache.c	/^#define BASE_DIR /;"	d	file:
BG	deps/console-colors/console-colors.c	/^static const WORD BG[] = {$/;"	v	typeref:typename:const WORD[]	file:
BINS	Makefile	/^	BINS := $(addsuffix .exe,$(BINS))$/;"	m
BINS	Makefile	/^BINS = clib clib-install clib-search clib-init clib-configure clib-build clib-update clib-upgrad/;"	m
CASE_H	deps/case/case.h	/^#define CASE_H$/;"	d
CASE_IS_SEP	deps/case/case.c	/^#define CASE_IS_SEP(/;"	d	file:
CASE_MODIFIER	deps/case/case.c	/^#define CASE_MODIFIER /;"	d	file:
CC	Makefile	/^CC     ?= cc$/;"	m
CC	test/cache/Makefile	/^CC ?= cc$/;"	m
CC	test/package/Makefile	/^CC ?= cc$/;"	m
CC_BG_BLACK	deps/console-colors/console-colors.h	/^    CC_BG_BLACK        = 1  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_BLUE	deps/console-colors/console-colors.h	/^    CC_BG_BLUE         = 13 << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_CYAN	deps/console-colors/console-colors.h	/^    CC_BG_CYAN         = 15 << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_BLUE	deps/console-colors/console-colors.h	/^    CC_BG_DARK_BLUE    = 5  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_CYAN	deps/console-colors/console-colors.h	/^    CC_BG_DARK_CYAN    = 7  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_GRAY	deps/console-colors/console-colors.h	/^    CC_BG_DARK_GRAY    = 9  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_GREEN	deps/console-colors/console-colors.h	/^    CC_BG_DARK_GREEN   = 3  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_MAGENTA	deps/console-colors/console-colors.h	/^    CC_BG_DARK_MAGENTA = 6  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_RED	deps/console-colors/console-colors.h	/^    CC_BG_DARK_RED     = 2  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_DARK_YELLOW	deps/console-colors/console-colors.h	/^    CC_BG_DARK_YELLOW  = 4  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_GRAY	deps/console-colors/console-colors.h	/^    CC_BG_GRAY         = 8  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_GREEN	deps/console-colors/console-colors.h	/^    CC_BG_GREEN        = 11 << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_MAGENTA	deps/console-colors/console-colors.h	/^    CC_BG_MAGENTA      = 14 << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_NONE	deps/console-colors/console-colors.h	/^    CC_BG_NONE         = 0  << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_RED	deps/console-colors/console-colors.h	/^    CC_BG_RED          = 10 << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_BG_WHITE	deps/console-colors/console-colors.h	/^    CC_BG_WHITE        = 16 << CC_COLOR_BITS$/;"	e	enum:__anonfcc941690103
CC_BG_YELLOW	deps/console-colors/console-colors.h	/^    CC_BG_YELLOW       = 12 << CC_COLOR_BITS,$/;"	e	enum:__anonfcc941690103
CC_COLOR_BITS	deps/console-colors/console-colors.h	/^#define CC_COLOR_BITS /;"	d
CC_FG_BLACK	deps/console-colors/console-colors.h	/^    CC_FG_BLACK        = 1  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_BLUE	deps/console-colors/console-colors.h	/^    CC_FG_BLUE         = 13 << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_CYAN	deps/console-colors/console-colors.h	/^    CC_FG_CYAN         = 15 << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_BLUE	deps/console-colors/console-colors.h	/^    CC_FG_DARK_BLUE    = 5  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_CYAN	deps/console-colors/console-colors.h	/^    CC_FG_DARK_CYAN    = 7  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_GRAY	deps/console-colors/console-colors.h	/^    CC_FG_DARK_GRAY    = 9  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_GREEN	deps/console-colors/console-colors.h	/^    CC_FG_DARK_GREEN   = 3  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_MAGENTA	deps/console-colors/console-colors.h	/^    CC_FG_DARK_MAGENTA = 6  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_RED	deps/console-colors/console-colors.h	/^    CC_FG_DARK_RED     = 2  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_DARK_YELLOW	deps/console-colors/console-colors.h	/^    CC_FG_DARK_YELLOW  = 4  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_GRAY	deps/console-colors/console-colors.h	/^    CC_FG_GRAY         = 8  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_GREEN	deps/console-colors/console-colors.h	/^    CC_FG_GREEN        = 11 << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_MAGENTA	deps/console-colors/console-colors.h	/^    CC_FG_MAGENTA      = 14 << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_NONE	deps/console-colors/console-colors.h	/^    CC_FG_NONE         = 0  << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_RED	deps/console-colors/console-colors.h	/^    CC_FG_RED          = 10 << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_WHITE	deps/console-colors/console-colors.h	/^    CC_FG_WHITE        = 16 << 0,$/;"	e	enum:__anonfcc941690103
CC_FG_YELLOW	deps/console-colors/console-colors.h	/^    CC_FG_YELLOW       = 12 << 0,$/;"	e	enum:__anonfcc941690103
CHAR_REF	deps/gumbo-parser/char_ref.c	/^#define CHAR_REF(/;"	d	file:
CLIB_CACHE_H	src/common/clib-cache.h	/^#define CLIB_CACHE_H$/;"	d
CLIB_LOGGER_FMT	deps/logger/logger.h	/^#  define CLIB_LOGGER_FMT /;"	d
CLIB_LOGGER_H	deps/logger/logger.h	/^#define CLIB_LOGGER_H /;"	d
CLIB_PACKAGE_CACHE_TIME	src/clib-build.c	/^#define CLIB_PACKAGE_CACHE_TIME /;"	d	file:
CLIB_PACKAGE_CACHE_TIME	src/clib-configure.c	/^#define CLIB_PACKAGE_CACHE_TIME /;"	d	file:
CLIB_PACKAGE_CACHE_TIME	src/clib-install.c	/^#define CLIB_PACKAGE_CACHE_TIME /;"	d	file:
CLIB_PACKAGE_CACHE_TIME	src/clib-update.c	/^#define CLIB_PACKAGE_CACHE_TIME /;"	d	file:
CLIB_PACKAGE_CACHE_TIME	src/clib-upgrade.c	/^#define CLIB_PACKAGE_CACHE_TIME /;"	d	file:
CLIB_PACKAGE_H	src/common/clib-package.h	/^#define CLIB_PACKAGE_H /;"	d
CLIB_SEARCH_CACHE_TIME	src/clib-search.c	/^#define CLIB_SEARCH_CACHE_TIME /;"	d	file:
CLIB_VERSION	src/version.h	/^#define CLIB_VERSION /;"	d
CLIB_WIKI_URL	src/clib-search.c	/^#define CLIB_WIKI_URL /;"	d	file:
COMMANDER_H	deps/commander/commander.h	/^#define COMMANDER_H$/;"	d
COMMANDER_MAX_ARGS	deps/commander/commander.h	/^#define COMMANDER_MAX_ARGS /;"	d
COMMANDER_MAX_OPTIONS	deps/commander/commander.h	/^#define COMMANDER_MAX_OPTIONS /;"	d
COMMON_LVB_GRID_HORIZONTAL	deps/console-colors/console-colors.h	/^#define COMMON_LVB_GRID_HORIZONTAL /;"	d
COMMON_LVB_GRID_LVERTICAL	deps/console-colors/console-colors.h	/^#define COMMON_LVB_GRID_LVERTICAL /;"	d
COMMON_LVB_GRID_RVERTICAL	deps/console-colors/console-colors.h	/^#define COMMON_LVB_GRID_RVERTICAL /;"	d
COMMON_LVB_LEADING_BYTE	deps/console-colors/console-colors.h	/^#define COMMON_LVB_LEADING_BYTE /;"	d
COMMON_LVB_REVERSE_VIDEO	deps/console-colors/console-colors.h	/^#define COMMON_LVB_REVERSE_VIDEO /;"	d
COMMON_LVB_TRAILING_BYTE	deps/console-colors/console-colors.h	/^#define COMMON_LVB_TRAILING_BYTE /;"	d
COMMON_LVB_UNDERSCORE	deps/console-colors/console-colors.h	/^#define COMMON_LVB_UNDERSCORE /;"	d
COMMON_SRC	Makefile	/^COMMON_SRC = $(wildcard src\/common\/*.c)$/;"	m
COMPARE	src/clib-search.c	/^#define COMPARE(/;"	d	file:
CONSOLE_COLORS_CONSOLE_COLORS_H_	deps/console-colors/console-colors.h	/^#define CONSOLE_COLORS_CONSOLE_COLORS_H_$/;"	d
COPY_DIR_H	deps/copy/copy.h	/^#define COPY_DIR_H$/;"	d
CP	Makefile	/^CP      = cp -f$/;"	m
CharReplacement	deps/gumbo-parser/char_ref.c	/^} CharReplacement;$/;"	t	typeref:struct:__anona0e2c48e0208	file:
Clib Examples and Best Practice	BEST_PRACTICE.md	/^# Clib Examples and Best Practice$/;"	c
Constellation/console-colors.c	clib.json	/^    "Constellation\/console-colors.c": "1.0.1",$/;"	s	object:dependencies
Constellation/console-colors.c	deps/describe/package.json	/^    "Constellation\/console-colors.c": "1.0.1"$/;"	s	object:dependencies
Constellation/console-colors.c	deps/logger/clib.json	/^    "Constellation\/console-colors.c": "1.0.1"$/;"	s	object:dependencies
Constellation/console-colors.c	deps/logger/package.json	/^    "Constellation\/console-colors.c": "1.0.1"$/;"	s	object:dependencies
Contributing	Readme.md	/^## Contributing$/;"	s	chapter:clib(1)
DEBUG_H	deps/debug/debug.h	/^#define DEBUG_H /;"	d
DECLARE_ONE_ELEMENT_GUMBO_VECTOR	deps/gumbo-parser/parser.c	/^#define DECLARE_ONE_ELEMENT_GUMBO_VECTOR(/;"	d	file:
DEFAULT_MAKE_CHECK_TARGET	src/clib-build.c	/^#define DEFAULT_MAKE_CHECK_TARGET /;"	d	file:
DEFAULT_MAKE_CLEAN_TARGET	src/clib-build.c	/^#define DEFAULT_MAKE_CLEAN_TARGET /;"	d	file:
DEFAULT_REPO_OWNER	src/common/clib-package.c	/^#define DEFAULT_REPO_OWNER /;"	d	file:
DEFAULT_REPO_VERSION	src/common/clib-package.c	/^#define DEFAULT_REPO_VERSION /;"	d	file:
DELIMITER	deps/debug/debug.c	/^#define DELIMITER /;"	d	file:
DEPS	Makefile	/^DEPS = $(filter-out $(ODEPS), $(SDEPS))$/;"	m
DESCRIBE_FAIL	deps/describe/describe.h	/^#define DESCRIBE_FAIL /;"	d
DESCRIBE_H	deps/describe/describe.h	/^#define DESCRIBE_H /;"	d
DESCRIBE_OK	deps/describe/describe.h	/^#define DESCRIBE_OK /;"	d
DESCRIBE_VERSION	deps/describe/describe.h	/^#define DESCRIBE_VERSION /;"	d
DOUBLE_SERIALIZATION_FORMAT	deps/parson/parson.c	/^#define DOUBLE_SERIALIZATION_FORMAT /;"	d	file:
EOF	test/install-deps-from-package-json.sh	/^cat > package.json << EOF$/;"	h
E_FORMAT	src/common/clib-package.c	/^#define E_FORMAT(/;"	d	file:
Example Makefile	BEST_PRACTICE.md	/^### Example Makefile$/;"	S	section:Clib Examples and Best Practice""How to use installed libraries for your project
Example package.json for executable project	BEST_PRACTICE.md	/^### Example package.json for executable project$/;"	S	section:Clib Examples and Best Practice""How to use installed libraries for your project
Example package.json for libraries	BEST_PRACTICE.md	/^### Example package.json for libraries$/;"	S	section:Clib Examples and Best Practice""Making your own libraries
Examples	Readme.md	/^## Examples$/;"	s	chapter:clib(1)
ExtractBackground	deps/console-colors/console-colors.c	/^static WORD ExtractBackground(WORD attributes) {$/;"	f	typeref:typename:WORD	file:
ExtractForeground	deps/console-colors/console-colors.c	/^static WORD ExtractForeground(WORD attributes) {$/;"	f	typeref:typename:WORD	file:
ExtractOthers	deps/console-colors/console-colors.c	/^static WORD ExtractOthers(WORD attributes) {$/;"	f	typeref:typename:WORD	file:
FG	deps/console-colors/console-colors.c	/^static const WORD FG[] = {$/;"	v	typeref:typename:const WORD[]	file:
FMT	deps/debug/debug.c	/^#define FMT /;"	d	file:
FREE	src/common/clib-package.c	/^#define FREE(/;"	d	file:
FS_H	deps/fs/fs.h	/^#define FS_H /;"	d
FS_OPEN_READ	deps/fs/fs.h	/^#define FS_OPEN_READ /;"	d
FS_OPEN_READWRITE	deps/fs/fs.h	/^#define FS_OPEN_READWRITE /;"	d
FS_OPEN_WRITE	deps/fs/fs.h	/^#define FS_OPEN_WRITE /;"	d
GET_JSON_CACHE	src/common/clib-cache.c	/^#define GET_JSON_CACHE(/;"	d	file:
GET_PKG_CACHE	src/common/clib-cache.c	/^#define GET_PKG_CACHE(/;"	d	file:
GITHUB_CONTENT_URL	src/common/clib-package.c	/^#define GITHUB_CONTENT_URL /;"	d	file:
GITHUB_CONTENT_URL_WITH_TOKEN	src/common/clib-package.c	/^#define GITHUB_CONTENT_URL_WITH_TOKEN /;"	d	file:
GUMBO_ATTRIBUTE_H_	deps/gumbo-parser/attribute.h	/^#define GUMBO_ATTRIBUTE_H_$/;"	d
GUMBO_ATTR_NAMESPACE_NONE	deps/gumbo-parser/gumbo.h	/^  GUMBO_ATTR_NAMESPACE_NONE,$/;"	e	enum:__anonc68e32330503
GUMBO_ATTR_NAMESPACE_XLINK	deps/gumbo-parser/gumbo.h	/^  GUMBO_ATTR_NAMESPACE_XLINK,$/;"	e	enum:__anonc68e32330503
GUMBO_ATTR_NAMESPACE_XML	deps/gumbo-parser/gumbo.h	/^  GUMBO_ATTR_NAMESPACE_XML,$/;"	e	enum:__anonc68e32330503
GUMBO_ATTR_NAMESPACE_XMLNS	deps/gumbo-parser/gumbo.h	/^  GUMBO_ATTR_NAMESPACE_XMLNS,$/;"	e	enum:__anonc68e32330503
GUMBO_CHAR_REF_H_	deps/gumbo-parser/char_ref.h	/^#define GUMBO_CHAR_REF_H_$/;"	d
GUMBO_DOCTYPE_LIMITED_QUIRKS	deps/gumbo-parser/gumbo.h	/^  GUMBO_DOCTYPE_LIMITED_QUIRKS$/;"	e	enum:__anonc68e32330803
GUMBO_DOCTYPE_NO_QUIRKS	deps/gumbo-parser/gumbo.h	/^  GUMBO_DOCTYPE_NO_QUIRKS,$/;"	e	enum:__anonc68e32330803
GUMBO_DOCTYPE_QUIRKS	deps/gumbo-parser/gumbo.h	/^  GUMBO_DOCTYPE_QUIRKS,$/;"	e	enum:__anonc68e32330803
GUMBO_ERROR_H_	deps/gumbo-parser/error.h	/^#define GUMBO_ERROR_H_$/;"	d
GUMBO_ERR_ATTR_AFTER_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_AFTER_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_AFTER_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_AFTER_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_DOUBLE_QUOTE_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_DOUBLE_QUOTE_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_NAME_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_NAME_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_NAME_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_NAME_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_SINGLE_QUOTE_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_SINGLE_QUOTE_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_UNQUOTED_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_UNQUOTED_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_UNQUOTED_EQUALS	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_UNQUOTED_EQUALS,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_ATTR_UNQUOTED_RIGHT_BRACKET	deps/gumbo-parser/error.h	/^  GUMBO_ERR_ATTR_UNQUOTED_RIGHT_BRACKET,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_CLOSE_TAG_EMPTY	deps/gumbo-parser/error.h	/^  GUMBO_ERR_CLOSE_TAG_EMPTY,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_CLOSE_TAG_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_CLOSE_TAG_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_CLOSE_TAG_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_CLOSE_TAG_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_COMMENT_BANG_AFTER_DOUBLE_DASH	deps/gumbo-parser/error.h	/^  GUMBO_ERR_COMMENT_BANG_AFTER_DOUBLE_DASH,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_COMMENT_DASH_AFTER_DOUBLE_DASH	deps/gumbo-parser/error.h	/^  GUMBO_ERR_COMMENT_DASH_AFTER_DOUBLE_DASH,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_COMMENT_END_BANG_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_COMMENT_END_BANG_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_COMMENT_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_COMMENT_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_COMMENT_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_COMMENT_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_COMMENT_SPACE_AFTER_DOUBLE_DASH	deps/gumbo-parser/error.h	/^  GUMBO_ERR_COMMENT_SPACE_AFTER_DOUBLE_DASH,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DASHES_OR_DOCTYPE	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DASHES_OR_DOCTYPE,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DOCTYPE_END	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DOCTYPE_END,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DOCTYPE_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DOCTYPE_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DOCTYPE_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DOCTYPE_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DOCTYPE_RIGHT_BRACKET	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DOCTYPE_RIGHT_BRACKET,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DOCTYPE_SPACE	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DOCTYPE_SPACE,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DOCTYPE_SPACE_OR_RIGHT_BRACKET	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DOCTYPE_SPACE_OR_RIGHT_BRACKET,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_DUPLICATE_ATTR	deps/gumbo-parser/error.h	/^  GUMBO_ERR_DUPLICATE_ATTR,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_NAMED_CHAR_REF_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_NAMED_CHAR_REF_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_NAMED_CHAR_REF_WITHOUT_SEMICOLON	deps/gumbo-parser/error.h	/^  GUMBO_ERR_NAMED_CHAR_REF_WITHOUT_SEMICOLON,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_NUMERIC_CHAR_REF_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_NUMERIC_CHAR_REF_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_NUMERIC_CHAR_REF_NO_DIGITS	deps/gumbo-parser/error.h	/^  GUMBO_ERR_NUMERIC_CHAR_REF_NO_DIGITS,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_NUMERIC_CHAR_REF_WITHOUT_SEMICOLON	deps/gumbo-parser/error.h	/^  GUMBO_ERR_NUMERIC_CHAR_REF_WITHOUT_SEMICOLON,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_PARSER	deps/gumbo-parser/error.h	/^  GUMBO_ERR_PARSER,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_SCRIPT_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_SCRIPT_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_SOLIDUS_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_SOLIDUS_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_SOLIDUS_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_SOLIDUS_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_TAG_EOF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TAG_EOF,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_TAG_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TAG_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_TAG_STARTS_WITH_QUESTION	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TAG_STARTS_WITH_QUESTION,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_TOKENIZER_ATTR_NAME	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_ATTR_NAME,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_ATTR_VALUE	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_ATTR_VALUE,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_CDATA	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_CDATA,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_CHAR_REF	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_CHAR_REF,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_COMMENT	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_COMMENT,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_DATA	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_DATA,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_DOCTYPE	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_DOCTYPE,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_MARKUP_DECLARATION	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_MARKUP_DECLARATION,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_PLAINTEXT	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_PLAINTEXT,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_RAWTEXT	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_RAWTEXT,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_RCDATA	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_RCDATA,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_SCRIPT	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_SCRIPT,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_SELF_CLOSING_TAG	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_SELF_CLOSING_TAG,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_TOKENIZER_TAG	deps/gumbo-parser/error.h	/^  GUMBO_ERR_TOKENIZER_TAG,$/;"	e	enum:__anon25fbe7030203
GUMBO_ERR_UNACKNOWLEDGED_SELF_CLOSING_TAG	deps/gumbo-parser/error.h	/^  GUMBO_ERR_UNACKNOWLEDGED_SELF_CLOSING_TAG,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_UTF8_INVALID	deps/gumbo-parser/error.h	/^  GUMBO_ERR_UTF8_INVALID,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_UTF8_NULL	deps/gumbo-parser/error.h	/^  GUMBO_ERR_UTF8_NULL,$/;"	e	enum:__anon25fbe7030103
GUMBO_ERR_UTF8_TRUNCATED	deps/gumbo-parser/error.h	/^  GUMBO_ERR_UTF8_TRUNCATED,$/;"	e	enum:__anon25fbe7030103
GUMBO_GET_ELEMENTS_BY_TAG_NAME_H	deps/gumbo-get-elements-by-tag-name/get-elements-by-tag-name.h	/^#define GUMBO_GET_ELEMENTS_BY_TAG_NAME_H /;"	d
GUMBO_GET_ELEMENT_BY_ID	deps/gumbo-get-element-by-id/get-element-by-id.h	/^#define GUMBO_GET_ELEMENT_BY_ID /;"	d
GUMBO_GUMBO_H_	deps/gumbo-parser/gumbo.h	/^#define GUMBO_GUMBO_H_$/;"	d
GUMBO_INSERTION_ADOPTION_AGENCY_CLONED	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_ADOPTION_AGENCY_CLONED = 1 << 8,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_ADOPTION_AGENCY_MOVED	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_ADOPTION_AGENCY_MOVED = 1 << 9,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_BY_PARSER	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_BY_PARSER = 1 << 0,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_CONVERTED_FROM_END_TAG	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_CONVERTED_FROM_END_TAG = 1 << 4,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_FOSTER_PARENTED	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_FOSTER_PARENTED = 1 << 10,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_FROM_IMAGE	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_FROM_IMAGE = 1 << 6,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_FROM_ISINDEX	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_FROM_ISINDEX = 1 << 5,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_IMPLICIT_END_TAG	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_IMPLICIT_END_TAG = 1 << 1,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_IMPLIED	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_IMPLIED = 1 << 3,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_MODE_AFTER_AFTER_BODY	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_AFTER_AFTER_BODY,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_AFTER_AFTER_FRAMESET	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_AFTER_AFTER_FRAMESET$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_AFTER_BODY	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_AFTER_BODY,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_AFTER_FRAMESET	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_AFTER_FRAMESET,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_AFTER_HEAD	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_AFTER_HEAD,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_BEFORE_HEAD	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_BEFORE_HEAD,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_BEFORE_HTML	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_BEFORE_HTML,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_H_	deps/gumbo-parser/insertion_mode.h	/^#define GUMBO_INSERTION_MODE_H_$/;"	d
GUMBO_INSERTION_MODE_INITIAL	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_INITIAL,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_BODY	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_BODY,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_CAPTION	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_CAPTION,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_CELL	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_CELL,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_COLUMN_GROUP	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_COLUMN_GROUP,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_FRAMESET	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_FRAMESET,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_HEAD	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_HEAD,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_HEAD_NOSCRIPT	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_HEAD_NOSCRIPT,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_ROW	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_ROW,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_SELECT	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_SELECT,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_SELECT_IN_TABLE	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_SELECT_IN_TABLE,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_TABLE	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_TABLE,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_TABLE_BODY	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_TABLE_BODY,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_TABLE_TEXT	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_TABLE_TEXT,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_IN_TEMPLATE	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_IN_TEMPLATE,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_MODE_TEXT	deps/gumbo-parser/insertion_mode.h	/^  GUMBO_INSERTION_MODE_TEXT,$/;"	e	enum:__anon8382d0780103
GUMBO_INSERTION_NORMAL	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_NORMAL = 0,$/;"	e	enum:__anonc68e32330a03
GUMBO_INSERTION_RECONSTRUCTED_FORMATTING_ELEMENT	deps/gumbo-parser/gumbo.h	/^  GUMBO_INSERTION_RECONSTRUCTED_FORMATTING_ELEMENT = 1 << 7,$/;"	e	enum:__anonc68e32330a03
GUMBO_LEX_AFTER_ATTR_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_ATTR_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_AFTER_ATTR_VALUE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_ATTR_VALUE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_AFTER_DOCTYPE_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_DOCTYPE_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_AFTER_DOCTYPE_PUBLIC_ID	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_DOCTYPE_PUBLIC_ID,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_AFTER_DOCTYPE_PUBLIC_KEYWORD	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_DOCTYPE_PUBLIC_KEYWORD,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_AFTER_DOCTYPE_SYSTEM_ID	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_DOCTYPE_SYSTEM_ID,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_AFTER_DOCTYPE_SYSTEM_KEYWORD	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_AFTER_DOCTYPE_SYSTEM_KEYWORD,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_ATTR_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_ATTR_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_ATTR_VALUE_DOUBLE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_ATTR_VALUE_DOUBLE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_ATTR_VALUE_SINGLE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_ATTR_VALUE_SINGLE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_ATTR_VALUE_UNQUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_ATTR_VALUE_UNQUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BEFORE_ATTR_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BEFORE_ATTR_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BEFORE_ATTR_VALUE	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BEFORE_ATTR_VALUE,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BEFORE_DOCTYPE_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BEFORE_DOCTYPE_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BEFORE_DOCTYPE_PUBLIC_ID	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BEFORE_DOCTYPE_PUBLIC_ID,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BEFORE_DOCTYPE_SYSTEM_ID	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BEFORE_DOCTYPE_SYSTEM_ID,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BETWEEN_DOCTYPE_PUBLIC_SYSTEM_ID	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BETWEEN_DOCTYPE_PUBLIC_SYSTEM_ID,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BOGUS_COMMENT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BOGUS_COMMENT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_BOGUS_DOCTYPE	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_BOGUS_DOCTYPE,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_CDATA	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_CDATA$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_CHAR_REF_IN_ATTR_VALUE	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_CHAR_REF_IN_ATTR_VALUE,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_CHAR_REF_IN_DATA	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_CHAR_REF_IN_DATA,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_CHAR_REF_IN_RCDATA	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_CHAR_REF_IN_RCDATA,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_COMMENT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_COMMENT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_COMMENT_END	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_COMMENT_END,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_COMMENT_END_BANG	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_COMMENT_END_BANG,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_COMMENT_END_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_COMMENT_END_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_COMMENT_START	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_COMMENT_START,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_COMMENT_START_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_COMMENT_START_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DATA	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DATA,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DOCTYPE	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DOCTYPE,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DOCTYPE_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DOCTYPE_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DOCTYPE_PUBLIC_ID_DOUBLE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DOCTYPE_PUBLIC_ID_DOUBLE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DOCTYPE_PUBLIC_ID_SINGLE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DOCTYPE_PUBLIC_ID_SINGLE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DOCTYPE_SYSTEM_ID_DOUBLE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DOCTYPE_SYSTEM_ID_DOUBLE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_DOCTYPE_SYSTEM_ID_SINGLE_QUOTED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_DOCTYPE_SYSTEM_ID_SINGLE_QUOTED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_END_TAG_OPEN	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_END_TAG_OPEN,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_MARKUP_DECLARATION	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_MARKUP_DECLARATION,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_PLAINTEXT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_PLAINTEXT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RAWTEXT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RAWTEXT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RAWTEXT_END_TAG_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RAWTEXT_END_TAG_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RAWTEXT_END_TAG_OPEN	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RAWTEXT_END_TAG_OPEN,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RAWTEXT_LT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RAWTEXT_LT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RCDATA	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RCDATA,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RCDATA_END_TAG_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RCDATA_END_TAG_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RCDATA_END_TAG_OPEN	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RCDATA_END_TAG_OPEN,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_RCDATA_LT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_RCDATA_LT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_DASH_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_DASH_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_END	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_END,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_LT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_LT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_START	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_DOUBLE_ESCAPED_START,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_END_TAG_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_END_TAG_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_END_TAG_OPEN	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_END_TAG_OPEN,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_DASH_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_DASH_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_END_TAG_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_END_TAG_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_END_TAG_OPEN	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_END_TAG_OPEN,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_LT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_LT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_START	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_START,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_ESCAPED_START_DASH	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_ESCAPED_START_DASH,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SCRIPT_LT	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SCRIPT_LT,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_SELF_CLOSING_START_TAG	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_SELF_CLOSING_START_TAG,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_TAG_NAME	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_TAG_NAME,$/;"	e	enum:__anona4d78de70103
GUMBO_LEX_TAG_OPEN	deps/gumbo-parser/tokenizer_states.h	/^  GUMBO_LEX_TAG_OPEN,$/;"	e	enum:__anona4d78de70103
GUMBO_NAMESPACE_HTML	deps/gumbo-parser/gumbo.h	/^  GUMBO_NAMESPACE_HTML,$/;"	e	enum:__anonc68e32330903
GUMBO_NAMESPACE_MATHML	deps/gumbo-parser/gumbo.h	/^  GUMBO_NAMESPACE_MATHML$/;"	e	enum:__anonc68e32330903
GUMBO_NAMESPACE_SVG	deps/gumbo-parser/gumbo.h	/^  GUMBO_NAMESPACE_SVG,$/;"	e	enum:__anonc68e32330903
GUMBO_NODE_CDATA	deps/gumbo-parser/gumbo.h	/^  GUMBO_NODE_CDATA,$/;"	e	enum:__anonc68e32330703
GUMBO_NODE_COMMENT	deps/gumbo-parser/gumbo.h	/^  GUMBO_NODE_COMMENT,$/;"	e	enum:__anonc68e32330703
GUMBO_NODE_DOCUMENT	deps/gumbo-parser/gumbo.h	/^  GUMBO_NODE_DOCUMENT,$/;"	e	enum:__anonc68e32330703
GUMBO_NODE_ELEMENT	deps/gumbo-parser/gumbo.h	/^  GUMBO_NODE_ELEMENT,$/;"	e	enum:__anonc68e32330703
GUMBO_NODE_TEXT	deps/gumbo-parser/gumbo.h	/^  GUMBO_NODE_TEXT,$/;"	e	enum:__anonc68e32330703
GUMBO_NODE_WHITESPACE	deps/gumbo-parser/gumbo.h	/^  GUMBO_NODE_WHITESPACE$/;"	e	enum:__anonc68e32330703
GUMBO_PARSER_H_	deps/gumbo-parser/parser.h	/^#define GUMBO_PARSER_H_$/;"	d
GUMBO_STRING	deps/gumbo-parser/parser.c	/^#define GUMBO_STRING(/;"	d	file:
GUMBO_STRING_BUFFER_H_	deps/gumbo-parser/string_buffer.h	/^#define GUMBO_STRING_BUFFER_H_$/;"	d
GUMBO_STRING_PIECE_H_	deps/gumbo-parser/string_piece.h	/^#define GUMBO_STRING_PIECE_H_$/;"	d
GUMBO_TAG_A	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_A,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ABBR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ABBR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ACRONYM	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ACRONYM,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ADDRESS	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ADDRESS,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ANNOTATION_XML	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ANNOTATION_XML,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_APPLET	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_APPLET,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_AREA	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_AREA,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ARTICLE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ARTICLE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ASIDE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ASIDE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_AUDIO	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_AUDIO,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_B	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_B,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BASE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BASE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BASEFONT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BASEFONT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BDI	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BDI,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BDO	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BDO,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BGSOUND	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BGSOUND,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BIG	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BIG,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BLINK	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BLINK,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BLOCKQUOTE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BLOCKQUOTE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BODY	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BODY,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_BUTTON	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_BUTTON,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_CANVAS	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_CANVAS,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_CAPTION	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_CAPTION,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_CENTER	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_CENTER,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_CITE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_CITE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_CODE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_CODE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_COL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_COL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_COLGROUP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_COLGROUP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DATA	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DATA,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DATALIST	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DATALIST,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DD	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DD,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DEL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DEL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DESC	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DESC,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DETAILS	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DETAILS,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DFN	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DFN,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DIR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DIR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DIV	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DIV,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_DT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_DT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_EM	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_EM,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_EMBED	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_EMBED,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FIELDSET	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FIELDSET,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FIGCAPTION	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FIGCAPTION,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FIGURE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FIGURE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FONT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FONT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FOOTER	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FOOTER,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FOREIGNOBJECT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FOREIGNOBJECT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FORM	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FORM,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FRAME	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FRAME,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_FRAMESET	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_FRAMESET,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_H1	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_H1,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_H2	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_H2,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_H3	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_H3,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_H4	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_H4,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_H5	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_H5,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_H6	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_H6,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_HEAD	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_HEAD,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_HEADER	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_HEADER,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_HGROUP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_HGROUP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_HR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_HR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_HTML	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_HTML,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_I	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_I,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_IFRAME	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_IFRAME,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_IMAGE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_IMAGE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_IMG	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_IMG,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_INPUT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_INPUT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_INS	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_INS,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_ISINDEX	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_ISINDEX,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_KBD	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_KBD,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_KEYGEN	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_KEYGEN,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_LABEL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_LABEL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_LAST	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_LAST,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_LEGEND	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_LEGEND,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_LI	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_LI,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_LINK	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_LINK,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_LISTING	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_LISTING,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MAIN	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MAIN,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MALIGNMARK	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MALIGNMARK,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MAP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MAP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MARK	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MARK,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MARQUEE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MARQUEE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MATH	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MATH,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MENU	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MENU,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MENUITEM	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MENUITEM,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_META	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_META,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_METER	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_METER,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MGLYPH	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MGLYPH,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MI	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MI,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MN	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MN,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MO	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MO,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MS	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MS,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MTEXT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MTEXT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_MULTICOL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_MULTICOL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_NAV	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_NAV,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_NEXTID	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_NEXTID,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_NOBR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_NOBR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_NOEMBED	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_NOEMBED,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_NOFRAMES	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_NOFRAMES,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_NOSCRIPT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_NOSCRIPT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_OBJECT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_OBJECT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_OL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_OL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_OPTGROUP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_OPTGROUP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_OPTION	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_OPTION,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_OUTPUT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_OUTPUT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_P	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_P,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_PARAM	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_PARAM,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_PLAINTEXT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_PLAINTEXT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_PRE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_PRE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_PROGRESS	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_PROGRESS,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_Q	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_Q,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_RB	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_RB,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_RP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_RP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_RT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_RT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_RUBY	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_RUBY,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_S	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_S,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SAMP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SAMP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SCRIPT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SCRIPT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SECTION	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SECTION,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SELECT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SELECT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SMALL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SMALL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SOURCE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SOURCE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SPACER	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SPACER,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SPAN	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SPAN,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_STRIKE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_STRIKE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_STRONG	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_STRONG,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_STYLE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_STYLE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SUB	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SUB,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SUMMARY	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SUMMARY,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SUP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SUP,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_SVG	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_SVG,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TABLE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TABLE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TBODY	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TBODY,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TD	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TD,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TEMPLATE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TEMPLATE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TEXTAREA	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TEXTAREA,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TFOOT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TFOOT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TH	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TH,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_THEAD	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_THEAD,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TIME	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TIME,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TITLE	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TITLE,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TRACK	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TRACK,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_TT	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_TT,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_U	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_U,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_UL	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_UL,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_UNKNOWN	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_UNKNOWN,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_VAR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_VAR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_VIDEO	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_VIDEO,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_WBR	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_WBR,$/;"	e	enum:__anonc68e32330403
GUMBO_TAG_XMP	deps/gumbo-parser/gumbo.h	/^  GUMBO_TAG_XMP,$/;"	e	enum:__anonc68e32330403
GUMBO_TEXT_CONTENT_H	deps/gumbo-text-content/gumbo-text-content.h	/^#define GUMBO_TEXT_CONTENT_H /;"	d
GUMBO_TEXT_CONTENT_MAX	deps/gumbo-text-content/gumbo-text-content.c	/^#define GUMBO_TEXT_CONTENT_MAX /;"	d	file:
GUMBO_TOKENIZER_H_	deps/gumbo-parser/tokenizer.h	/^#define GUMBO_TOKENIZER_H_$/;"	d
GUMBO_TOKENIZER_STATES_H_	deps/gumbo-parser/tokenizer_states.h	/^#define GUMBO_TOKENIZER_STATES_H_$/;"	d
GUMBO_TOKEN_CHARACTER	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_CHARACTER,$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_COMMENT	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_COMMENT,$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_DOCTYPE	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_DOCTYPE,$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_END_TAG	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_END_TAG,$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_EOF	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_EOF$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_NULL	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_NULL,$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_START_TAG	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_START_TAG,$/;"	e	enum:__anonce32a03b0103
GUMBO_TOKEN_TYPE_H_	deps/gumbo-parser/token_type.h	/^#define GUMBO_TOKEN_TYPE_H_$/;"	d
GUMBO_TOKEN_WHITESPACE	deps/gumbo-parser/token_type.h	/^  GUMBO_TOKEN_WHITESPACE,$/;"	e	enum:__anonce32a03b0103
GUMBO_UTF8_H_	deps/gumbo-parser/utf8.h	/^#define GUMBO_UTF8_H_$/;"	d
GUMBO_UTIL_H_	deps/gumbo-parser/util.h	/^#define GUMBO_UTIL_H_$/;"	d
GUMBO_VECTOR_H_	deps/gumbo-parser/vector.h	/^#define GUMBO_VECTOR_H_$/;"	d
Generate	deps/console-colors/console-colors.c	/^static WORD Generate(unsigned int fg, unsigned int bg, WORD attributes) {$/;"	f	typeref:typename:WORD	file:
GumboAllocatorFunction	deps/gumbo-parser/gumbo.h	/^typedef void* (*GumboAllocatorFunction)(void* userdata, size_t size);$/;"	t	typeref:typename:void * (*)(void * userdata,size_t size)
GumboAttribute	deps/gumbo-parser/gumbo.h	/^} GumboAttribute;$/;"	t	typeref:struct:__anonc68e32330608
GumboAttributeNamespaceEnum	deps/gumbo-parser/gumbo.h	/^} GumboAttributeNamespaceEnum;$/;"	t	typeref:enum:__anonc68e32330503
GumboDeallocatorFunction	deps/gumbo-parser/gumbo.h	/^typedef void (*GumboDeallocatorFunction)(void* userdata, void* ptr);$/;"	t	typeref:typename:void (*)(void * userdata,void * ptr)
GumboDocument	deps/gumbo-parser/gumbo.h	/^} GumboDocument;$/;"	t	typeref:struct:__anonc68e32330b08
GumboDuplicateAttrError	deps/gumbo-parser/error.h	/^} GumboDuplicateAttrError;$/;"	t	typeref:struct:GumboInternalDuplicateAttrError
GumboElement	deps/gumbo-parser/gumbo.h	/^} GumboElement;$/;"	t	typeref:struct:__anonc68e32330d08
GumboError	deps/gumbo-parser/error.h	/^} GumboError;$/;"	t	typeref:struct:GumboInternalError
GumboErrorType	deps/gumbo-parser/error.h	/^} GumboErrorType;$/;"	t	typeref:enum:__anon25fbe7030103
GumboInsertionMode	deps/gumbo-parser/insertion_mode.h	/^} GumboInsertionMode;$/;"	t	typeref:enum:__anon8382d0780103
GumboInternalDuplicateAttrError	deps/gumbo-parser/error.h	/^typedef struct GumboInternalDuplicateAttrError {$/;"	s
GumboInternalError	deps/gumbo-parser/error.h	/^typedef struct GumboInternalError {$/;"	s
GumboInternalNode	deps/gumbo-parser/gumbo.h	/^struct GumboInternalNode {$/;"	s
GumboInternalOptions	deps/gumbo-parser/gumbo.h	/^typedef struct GumboInternalOptions {$/;"	s
GumboInternalOutput	deps/gumbo-parser/gumbo.h	/^typedef struct GumboInternalOutput {$/;"	s
GumboInternalParser	deps/gumbo-parser/parser.h	/^typedef struct GumboInternalParser {$/;"	s
GumboInternalParserError	deps/gumbo-parser/error.h	/^typedef struct GumboInternalParserError {$/;"	s
GumboInternalParserState	deps/gumbo-parser/parser.c	/^typedef struct GumboInternalParserState {$/;"	s	file:
GumboInternalTagState	deps/gumbo-parser/tokenizer.c	/^typedef struct GumboInternalTagState {$/;"	s	file:
GumboInternalToken	deps/gumbo-parser/tokenizer.h	/^typedef struct GumboInternalToken {$/;"	s
GumboInternalTokenDocType	deps/gumbo-parser/tokenizer.h	/^typedef struct GumboInternalTokenDocType {$/;"	s
GumboInternalTokenStartTag	deps/gumbo-parser/tokenizer.h	/^typedef struct GumboInternalTokenStartTag {$/;"	s
GumboInternalTokenizerError	deps/gumbo-parser/error.h	/^typedef struct GumboInternalTokenizerError {$/;"	s
GumboInternalTokenizerState	deps/gumbo-parser/tokenizer.c	/^typedef struct GumboInternalTokenizerState {$/;"	s	file:
GumboInternalUtf8Iterator	deps/gumbo-parser/utf8.h	/^typedef struct GumboInternalUtf8Iterator {$/;"	s
GumboLexerStateFunction	deps/gumbo-parser/tokenizer.c	/^typedef StateResult (*GumboLexerStateFunction)($/;"	t	typeref:typename:StateResult (*)(GumboParser *,GumboTokenizerState *,int,GumboToken *)	file:
GumboNamespaceEnum	deps/gumbo-parser/gumbo.h	/^} GumboNamespaceEnum;$/;"	t	typeref:enum:__anonc68e32330903
GumboNode	deps/gumbo-parser/gumbo.h	/^typedef struct GumboInternalNode GumboNode;$/;"	t	typeref:struct:GumboInternalNode
GumboNodeType	deps/gumbo-parser/gumbo.h	/^} GumboNodeType;$/;"	t	typeref:enum:__anonc68e32330703
GumboOptions	deps/gumbo-parser/gumbo.h	/^} GumboOptions;$/;"	t	typeref:struct:GumboInternalOptions
GumboOutput	deps/gumbo-parser/gumbo.h	/^} GumboOutput;$/;"	t	typeref:struct:GumboInternalOutput
GumboParseFlags	deps/gumbo-parser/gumbo.h	/^} GumboParseFlags;$/;"	t	typeref:enum:__anonc68e32330a03
GumboParser	deps/gumbo-parser/parser.h	/^} GumboParser;$/;"	t	typeref:struct:GumboInternalParser
GumboParserError	deps/gumbo-parser/error.h	/^} GumboParserError;$/;"	t	typeref:struct:GumboInternalParserError
GumboParserState	deps/gumbo-parser/parser.c	/^} GumboParserState;$/;"	t	typeref:struct:GumboInternalParserState	file:
GumboQuirksModeEnum	deps/gumbo-parser/gumbo.h	/^} GumboQuirksModeEnum;$/;"	t	typeref:enum:__anonc68e32330803
GumboSourcePosition	deps/gumbo-parser/gumbo.h	/^} GumboSourcePosition;$/;"	t	typeref:struct:__anonc68e32330108
GumboStringBuffer	deps/gumbo-parser/string_buffer.h	/^} GumboStringBuffer;$/;"	t	typeref:struct:__anon249283490108
GumboStringPiece	deps/gumbo-parser/gumbo.h	/^} GumboStringPiece;$/;"	t	typeref:struct:__anonc68e32330208
GumboTag	deps/gumbo-parser/gumbo.h	/^} GumboTag;$/;"	t	typeref:enum:__anonc68e32330403
GumboTagState	deps/gumbo-parser/tokenizer.c	/^} GumboTagState;$/;"	t	typeref:struct:GumboInternalTagState	file:
GumboText	deps/gumbo-parser/gumbo.h	/^} GumboText;$/;"	t	typeref:struct:__anonc68e32330c08
GumboToken	deps/gumbo-parser/tokenizer.h	/^} GumboToken;$/;"	t	typeref:struct:GumboInternalToken
GumboTokenDocType	deps/gumbo-parser/tokenizer.h	/^} GumboTokenDocType;$/;"	t	typeref:struct:GumboInternalTokenDocType
GumboTokenStartTag	deps/gumbo-parser/tokenizer.h	/^} GumboTokenStartTag;$/;"	t	typeref:struct:GumboInternalTokenStartTag
GumboTokenType	deps/gumbo-parser/token_type.h	/^} GumboTokenType;$/;"	t	typeref:enum:__anonce32a03b0103
GumboTokenizerEnum	deps/gumbo-parser/tokenizer_states.h	/^} GumboTokenizerEnum;$/;"	t	typeref:enum:__anona4d78de70103
GumboTokenizerError	deps/gumbo-parser/error.h	/^} GumboTokenizerError;$/;"	t	typeref:struct:GumboInternalTokenizerError
GumboTokenizerErrorState	deps/gumbo-parser/error.h	/^} GumboTokenizerErrorState;$/;"	t	typeref:enum:__anon25fbe7030203
GumboTokenizerState	deps/gumbo-parser/tokenizer.c	/^} GumboTokenizerState;$/;"	t	typeref:struct:GumboInternalTokenizerState	file:
GumboVector	deps/gumbo-parser/gumbo.h	/^} GumboVector;$/;"	t	typeref:struct:__anonc68e32330308
HASH	deps/hash/hash.h	/^#define HASH$/;"	d
HAVE_STRDUP	deps/strdup/strdup.h	/^#define HAVE_STRDUP$/;"	d
HTTP_GET_H	deps/http-get/http-get.h	/^#define HTTP_GET_H /;"	d
HTTP_GET_VERSION	deps/http-get/http-get.h	/^#define HTTP_GET_VERSION /;"	d
How to use installed libraries for your project	BEST_PRACTICE.md	/^## How to use installed libraries for your project$/;"	s	chapter:Clib Examples and Best Practice
IS_CONT	deps/parson/parson.c	/^#define IS_CONT(/;"	d	file:
Install and uninstall executables packages	BEST_PRACTICE.md	/^## Install and uninstall executables packages$/;"	s	chapter:Clib Examples and Best Practice
Installation	Readme.md	/^## Installation$/;"	s	chapter:clib(1)
JSONArray	deps/parson/parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONBoolean	deps/parson/parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONError	deps/parson/parson.h	/^    JSONError   = -1,$/;"	e	enum:json_value_type
JSONFailure	deps/parson/parson.h	/^    JSONFailure = -1$/;"	e	enum:json_result_t
JSONNull	deps/parson/parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNumber	deps/parson/parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONObject	deps/parson/parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONString	deps/parson/parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONSuccess	deps/parson/parson.h	/^    JSONSuccess = 0,$/;"	e	enum:json_result_t
JSON_Array	deps/parson/parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_CACHE_PATTERN	src/common/clib-cache.c	/^#define JSON_CACHE_PATTERN /;"	d	file:
JSON_Free_Function	deps/parson/parson.h	/^typedef void   (*JSON_Free_Function)(void *);$/;"	t	typeref:typename:void (*)(void *)
JSON_Malloc_Function	deps/parson/parson.h	/^typedef void * (*JSON_Malloc_Function)(size_t);$/;"	t	typeref:typename:void * (*)(size_t)
JSON_Object	deps/parson/parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Status	deps/parson/parson.h	/^typedef int JSON_Status;$/;"	t	typeref:typename:int
JSON_Value	deps/parson/parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value_Type	deps/parson/parson.h	/^typedef int JSON_Value_Type;$/;"	t	typeref:typename:int
JSON_Value_Value	deps/parson/parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
KHASH_INIT	deps/hash/khash.h	/^#define KHASH_INIT(/;"	d
KHASH_MAP_INIT_INT	deps/hash/khash.h	/^#define KHASH_MAP_INIT_INT(/;"	d
KHASH_MAP_INIT_INT64	deps/hash/khash.h	/^#define KHASH_MAP_INIT_INT64(/;"	d
KHASH_MAP_INIT_STR	deps/hash/khash.h	/^#define KHASH_MAP_INIT_STR(/;"	d
KHASH_SET_INIT_INT	deps/hash/khash.h	/^#define KHASH_SET_INIT_INT(/;"	d
KHASH_SET_INIT_INT64	deps/hash/khash.h	/^#define KHASH_SET_INIT_INT64(/;"	d
KHASH_SET_INIT_STR	deps/hash/khash.h	/^#define KHASH_SET_INIT_STR(/;"	d
LDFLAGS	test/cache/Makefile	/^LDFLAGS = -lcurl$/;"	m
LDFLAGS	test/package/Makefile	/^LDFLAGS = -lcurl$/;"	m
LIST_FREE	deps/list/list.h	/^#define LIST_FREE /;"	d
LIST_HEAD	deps/list/list.h	/^    LIST_HEAD$/;"	e	enum:__anonf0edcb3d0103
LIST_MALLOC	deps/list/list.h	/^#define LIST_MALLOC /;"	d
LIST_TAIL	deps/list/list.h	/^  , LIST_TAIL$/;"	e	enum:__anonf0edcb3d0103
LIST_VERSION	deps/list/list.h	/^#define LIST_VERSION /;"	d
MAKEFILES	Makefile	/^MAKEFILES = $(wildcard deps\/*\/Makefile)$/;"	m
MAX	deps/parson/parson.c	/^#define MAX(/;"	d	file:
MAX_NESTING	deps/parson/parson.c	/^#define MAX_NESTING /;"	d	file:
MAX_THREADS	src/clib-build.c	/^#define MAX_THREADS /;"	d	file:
MAX_THREADS	src/clib-configure.c	/^#define MAX_THREADS /;"	d	file:
MAX_THREADS	src/clib-install.c	/^#define MAX_THREADS /;"	d	file:
MAX_THREADS	src/clib-update.c	/^#define MAX_THREADS /;"	d	file:
MAX_THREADS	src/clib-upgrade.c	/^#define MAX_THREADS /;"	d	file:
MKDIR	Makefile	/^MKDIR   = mkdir -p$/;"	m
MKDIRP	deps/mkdirp/mkdirp.h	/^#define MKDIRP$/;"	d
MULTI_CHAR_REF	deps/gumbo-parser/char_ref.c	/^#define MULTI_CHAR_REF(/;"	d	file:
Making your own libraries	BEST_PRACTICE.md	/^## Making your own libraries$/;"	s	chapter:Clib Examples and Best Practice
NEXT_CHAR	deps/gumbo-parser/tokenizer.c	/^  NEXT_CHAR             \/\/ Proceed to the next character and continue lexing.$/;"	e	enum:__anonb159a4cf0103	file:
NODE_TYPE_CHECK	deps/gumbo-get-elements-by-tag-name/get-elements-by-tag-name.c	/^#define NODE_TYPE_CHECK(/;"	d	file:
NamedCharRef	deps/gumbo-parser/char_ref.c	/^} NamedCharRef;$/;"	t	typeref:struct:__anona0e2c48e0108	file:
NamespacedAttributeReplacement	deps/gumbo-parser/parser.c	/^} NamespacedAttributeReplacement;$/;"	t	typeref:struct:_NamespacedAttributeReplacement	file:
OBJECT_MAX_CAPACITY	deps/parson/parson.c	/^#define OBJECT_MAX_CAPACITY /;"	d	file:
OBJS	Makefile	/^OBJS = $(DEPS:.c=.o)$/;"	m
OBJS	test/cache/Makefile	/^OBJS = $(SRC:.c=.o) $(DEPS:.c=.o)$/;"	m
OBJS	test/package/Makefile	/^OBJS = $(SRC:.c=.o) $(DEPS:.c=.o)$/;"	m
OCCURRENCES_H	deps/occurrences/occurrences.h	/^#define OCCURRENCES_H /;"	d
ODEPS	Makefile	/^ODEPS = $(SDEPS:.c=.o)$/;"	m
OneOrTwoCodepoints	deps/gumbo-parser/char_ref.h	/^} OneOrTwoCodepoints;$/;"	t	typeref:struct:__anona0e2c4930108
PARSE_REPO_H	deps/parse-repo/parse-repo.h	/^#define PARSE_REPO_H /;"	d
PATH_JOIN_H	deps/path-join/path-join.h	/^#define PATH_JOIN_H /;"	d
PATH_JOIN_SEPERATOR	deps/path-join/path-join.c	/^#define PATH_JOIN_SEPERATOR /;"	d	file:
PATH_NORMALIZE_H	deps/path-normalize/path-normalize.h	/^#define PATH_NORMALIZE_H /;"	d
PATH_SEPARATOR	deps/mkdirp/mkdirp.c	/^#define PATH_SEPARATOR /;"	d	file:
PKG_CACHE_PATTERN	src/common/clib-cache.c	/^#define PKG_CACHE_PATTERN /;"	d	file:
PREFIX	Makefile	/^PREFIX ?= \/usr\/local$/;"	m
PROGRAM_NAME	src/clib-build.c	/^#define PROGRAM_NAME /;"	d	file:
PROGRAM_NAME	src/clib-configure.c	/^#define PROGRAM_NAME /;"	d	file:
REPLACEMENT_ENTRY	deps/gumbo-parser/parser.c	/^#define REPLACEMENT_ENTRY(/;"	d	file:
RETURN_ERROR	deps/gumbo-parser/tokenizer.c	/^  RETURN_ERROR,         \/\/ Return false (error) from the tokenizer.$/;"	e	enum:__anonb159a4cf0103	file:
RETURN_SUCCESS	deps/gumbo-parser/tokenizer.c	/^  RETURN_SUCCESS,       \/\/ Return true (success) from the tokenizer.$/;"	e	enum:__anonb159a4cf0103	file:
RIMRAF_H	deps/rimraf/rimraf.h	/^#define RIMRAF_H$/;"	d
RIMRAF_VERSION	deps/rimraf/rimraf.h	/^#define RIMRAF_VERSION /;"	d
RM	Makefile	/^RM      = rm -f$/;"	m
ReplacementEntry	deps/gumbo-parser/parser.c	/^} ReplacementEntry;$/;"	t	typeref:struct:_ReplacementEntry	file:
S	src/clib-build.c	/^#define S(/;"	d	file:
S	src/clib-configure.c	/^#define S(/;"	d	file:
S	src/clib-install.c	/^#define S(/;"	d	file:
S	src/clib-update.c	/^#define S(/;"	d	file:
S	src/clib-upgrade.c	/^#define S(/;"	d	file:
SDEPS	Makefile	/^SDEPS = $(wildcard deps\/*\/*.c)$/;"	m
SIZEOF_TOKEN	deps/parson/parson.c	/^#define SIZEOF_TOKEN(/;"	d	file:
SKIP_CHAR	deps/parson/parson.c	/^#define SKIP_CHAR(/;"	d	file:
SKIP_WHITESPACES	deps/parson/parson.c	/^#define SKIP_WHITESPACES(/;"	d	file:
SRC	Makefile	/^SRC  = $(wildcard src\/*.c)$/;"	m
SRC	test/cache/Makefile	/^SRC = ..\/..\/src\/common\/clib-cache.c$/;"	m
SRC	test/package/Makefile	/^SRC = ..\/..\/src\/common\/clib-package.c ..\/..\/src\/common\/clib-cache.c$/;"	m
STARTING_CAPACITY	deps/parson/parson.c	/^#define STARTING_CAPACITY /;"	d	file:
STR	deps/list/list.h	/^#define STR(/;"	d
STR_CAT_H	deps/str-concat/str-concat.h	/^#define STR_CAT_H /;"	d
STR_ENDS_WITH	deps/str-ends-with/str-ends-with.h	/^#define STR_ENDS_WITH$/;"	d
STR_FLATTEN_H	deps/str-flatten/str-flatten.h	/^#define STR_FLATTEN_H /;"	d
STR_REPLACE_H	deps/str-replace/str-replace.h	/^#define STR_REPLACE_H$/;"	d
STR_STARTS_WITH	deps/str-starts-with/str-starts-with.h	/^#define STR_STARTS_WITH$/;"	d
SUBSTR_H	deps/substr/substr.h	/^#define SUBSTR_H /;"	d
SX	src/clib-build.c	/^#define SX(/;"	d	file:
SX	src/clib-configure.c	/^#define SX(/;"	d	file:
SX	src/clib-install.c	/^#define SX(/;"	d	file:
SX	src/clib-update.c	/^#define SX(/;"	d	file:
SX	src/clib-upgrade.c	/^#define SX(/;"	d	file:
S_IFDIR	deps/rimraf/rimraf.c	/^#define S_IFDIR /;"	d	file:
Shift	deps/console-colors/console-colors.c	/^static inline unsigned int Shift($/;"	f	typeref:typename:unsigned int	file:
StateResult	deps/gumbo-parser/tokenizer.c	/^} StateResult;$/;"	t	typeref:enum:__anonb159a4cf0103	file:
TEMPDIR_H	deps/tempdir/tempdir.h	/^#define TEMPDIR_H /;"	d
TERMINATOR	deps/gumbo-parser/parser.c	/^#define TERMINATOR /;"	d	file:
TEST_BIN	test/cache/Makefile	/^TEST_BIN = $(TEST_SRC:.c=)$/;"	m
TEST_BIN	test/package/Makefile	/^TEST_BIN = $(TEST_SRC:.c=)$/;"	m
TEST_OBJ	test/cache/Makefile	/^TEST_OBJ = $(TEST_SRC:.c=.o)$/;"	m
TEST_OBJ	test/package/Makefile	/^TEST_OBJ = $(TEST_SRC:.c=.o)$/;"	m
TEST_RUNNER	test/cache/Makefile	/^TEST_RUNNER ?=$/;"	m
TEST_RUNNER	test/cache/Makefile	/^valgrind: TEST_RUNNER=$(VALGRIND) $(VALGRIND_OPTS)$/;"	m
TEST_RUNNER	test/package/Makefile	/^TEST_RUNNER ?=$/;"	m
TEST_RUNNER	test/package/Makefile	/^valgrind: TEST_RUNNER=$(VALGRIND) $(VALGRIND_OPTS)$/;"	m
TEST_SRC	test/cache/Makefile	/^TEST_SRC = $(wildcard *.c)$/;"	m
TEST_SRC	test/package/Makefile	/^TEST_SRC = $(wildcard *.c)$/;"	m
TINYDIR_H	deps/tinydir/tinydir.h	/^#define TINYDIR_H$/;"	d
TINYDIR_STRING	deps/tinydir/tinydir.h	/^# define TINYDIR_STRING(/;"	d
TextNodeBufferState	deps/gumbo-parser/parser.c	/^} TextNodeBufferState;$/;"	t	typeref:struct:_TextNodeBufferState	file:
TokenHandler	deps/gumbo-parser/parser.c	/^typedef bool (*TokenHandler)(GumboParser* parser, GumboToken* token);$/;"	t	typeref:typename:bool (*)(GumboParser * parser,GumboToken * token)	file:
UNICODE	deps/tinydir/tinydir.h	/^#define UNICODE$/;"	d
UnixTerminalColorize	deps/console-colors/console-colors.c	/^static void UnixTerminalColorize($/;"	f	typeref:typename:void	file:
UnixTerminalRestore	deps/console-colors/console-colors.c	/^static void UnixTerminalRestore(FILE* stream) {$/;"	f	typeref:typename:void	file:
Usage	Readme.md	/^## Usage$/;"	s	chapter:clib(1)
Utf8Iterator	deps/gumbo-parser/utf8.h	/^} Utf8Iterator;$/;"	t	typeref:struct:GumboInternalUtf8Iterator
VALGRIND	test/cache/Makefile	/^VALGRIND ?= valgrind$/;"	m
VALGRIND	test/package/Makefile	/^VALGRIND ?= valgrind$/;"	m
VALGRIND_OPTS	test/cache/Makefile	/^VALGRIND_OPTS ?= --leak-check=full --error-exitcode=3$/;"	m
VALGRIND_OPTS	test/package/Makefile	/^VALGRIND_OPTS ?= --leak-check=full --error-exitcode=3$/;"	m
WHICH_DELIMITER	deps/which/which.c	/^#define WHICH_DELIMITER /;"	d	file:
WHICH_H	deps/which/which.h	/^#define WHICH_H$/;"	d
WIKI_REGISTRY_H	deps/wiki-registry/wiki-registry.h	/^#define WIKI_REGISTRY_H /;"	d
WILDCARDCMP_H	deps/wildcardcmp/wildcardcmp.h	/^#define WILDCARDCMP_H /;"	d
WIN32_LEAN_AND_MEAN	deps/tinydir/tinydir.h	/^#  define WIN32_LEAN_AND_MEAN$/;"	d
Write	deps/console-colors/console-colors.c	/^static int Write(FILE *stream, const char *format, va_list ap) {$/;"	f	typeref:typename:int	file:
_CRT_SECURE_NO_WARNINGS	deps/parson/parson.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_NamespacedAttributeReplacement	deps/gumbo-parser/parser.c	/^typedef struct _NamespacedAttributeReplacement {$/;"	s	file:
_POSIX_C_SOURCE	deps/fs/fs.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_POSIX_C_SOURCE	deps/rimraf/rimraf.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_ReplacementEntry	deps/gumbo-parser/parser.c	/^typedef struct _ReplacementEntry {$/;"	s	file:
_STR	deps/list/list.h	/^#define _STR(/;"	d
_TINYDIR_DIR	deps/tinydir/tinydir.h	/^#define _TINYDIR_DIR /;"	d
_TINYDIR_DRIVE_MAX	deps/tinydir/tinydir.h	/^#define _TINYDIR_DRIVE_MAX /;"	d
_TINYDIR_FILENAME_MAX	deps/tinydir/tinydir.h	/^#define _TINYDIR_FILENAME_MAX /;"	d
_TINYDIR_FREE	deps/tinydir/tinydir.h	/^	#define _TINYDIR_FREE(/;"	d
_TINYDIR_FUNC	deps/tinydir/tinydir.h	/^# define _TINYDIR_FUNC /;"	d
_TINYDIR_HAS_DIRFD	deps/tinydir/tinydir.h	/^# define _TINYDIR_HAS_DIRFD$/;"	d
_TINYDIR_HAS_FPATHCONF	deps/tinydir/tinydir.h	/^# define _TINYDIR_HAS_FPATHCONF$/;"	d
_TINYDIR_HAS_READDIR_R	deps/tinydir/tinydir.h	/^# define _TINYDIR_HAS_READDIR_R$/;"	d
_TINYDIR_MALLOC	deps/tinydir/tinydir.h	/^	#define _TINYDIR_MALLOC(/;"	d
_TINYDIR_PATH_EXTRA	deps/tinydir/tinydir.h	/^# define _TINYDIR_PATH_EXTRA /;"	d
_TINYDIR_PATH_MAX	deps/tinydir/tinydir.h	/^# define _TINYDIR_PATH_MAX /;"	d
_TINYDIR_PATH_MAX	deps/tinydir/tinydir.h	/^#define _TINYDIR_PATH_MAX /;"	d
_TINYDIR_USE_FPATHCONF	deps/tinydir/tinydir.h	/^# define _TINYDIR_USE_FPATHCONF$/;"	d
_TINYDIR_USE_READDIR	deps/tinydir/tinydir.h	/^# define _TINYDIR_USE_READDIR$/;"	d
_TextNodeBufferState	deps/gumbo-parser/parser.c	/^typedef struct _TextNodeBufferState {$/;"	s	file:
_UNICODE	deps/tinydir/tinydir.h	/^#define _UNICODE$/;"	d
__AC_KHASH_H	deps/hash/khash.h	/^#define __AC_KHASH_H$/;"	d
__CLIBS_LIST_H__	deps/list/list.h	/^#define __CLIBS_LIST_H__$/;"	d
__TRIM__	deps/trim/trim.h	/^#define __TRIM__ /;"	d
__ac_HASH_PRIME_SIZE	deps/hash/khash.h	/^#define __ac_HASH_PRIME_SIZE /;"	d
__ac_HASH_UPPER	deps/hash/khash.h	/^static const double __ac_HASH_UPPER = 0.77;$/;"	v	typeref:typename:const double
__ac_X31_hash_string	deps/hash/khash.h	/^static inline khint_t __ac_X31_hash_string(const char *s)$/;"	f	typeref:typename:khint_t
__ac_isdel	deps/hash/khash.h	/^#define __ac_isdel(/;"	d
__ac_iseither	deps/hash/khash.h	/^#define __ac_iseither(/;"	d
__ac_isempty	deps/hash/khash.h	/^#define __ac_isempty(/;"	d
__ac_prime_list	deps/hash/khash.h	/^static const uint32_t __ac_prime_list[__ac_HASH_PRIME_SIZE] =$/;"	v	typeref:typename:const uint32_t[]
__ac_set_isboth_false	deps/hash/khash.h	/^#define __ac_set_isboth_false(/;"	d
__ac_set_isdel_false	deps/hash/khash.h	/^#define __ac_set_isdel_false(/;"	d
__ac_set_isdel_true	deps/hash/khash.h	/^#define __ac_set_isdel_true(/;"	d
__ac_set_isempty_false	deps/hash/khash.h	/^#define __ac_set_isempty_false(/;"	d
__anon249283490108	deps/gumbo-parser/string_buffer.h	/^typedef struct {$/;"	s
__anon25fbe7030103	deps/gumbo-parser/error.h	/^typedef enum {$/;"	g
__anon25fbe7030203	deps/gumbo-parser/error.h	/^typedef enum {$/;"	g
__anon25fbe703030a	deps/gumbo-parser/error.h	/^  union {$/;"	u	struct:GumboInternalError
__anon4e8ab7e80108	deps/gumbo-text-content/gumbo-text-content.c	/^typedef struct {$/;"	s	file:
__anon5a8922b30108	deps/debug/debug.h	/^typedef struct {$/;"	s
__anon5d71bd190108	deps/wiki-registry/wiki-registry.h	/^typedef struct {$/;"	s
__anon8382d0780103	deps/gumbo-parser/insertion_mode.h	/^typedef enum {$/;"	g
__anon9e68895d0108	src/common/clib-package.h	/^typedef struct {$/;"	s
__anon9e68895d0208	src/common/clib-package.h	/^typedef struct {$/;"	s
__anon9e68895d0308	src/common/clib-package.h	/^typedef struct {$/;"	s
__anona0e2c48e0108	deps/gumbo-parser/char_ref.c	/^typedef struct {$/;"	s	file:
__anona0e2c48e0208	deps/gumbo-parser/char_ref.c	/^typedef struct {$/;"	s	file:
__anona0e2c4930108	deps/gumbo-parser/char_ref.h	/^typedef struct {$/;"	s
__anona4d78de70103	deps/gumbo-parser/tokenizer_states.h	/^typedef enum {$/;"	g
__anonb159a4cf0103	deps/gumbo-parser/tokenizer.c	/^typedef enum {$/;"	g	file:
__anonb159a4d4010a	deps/gumbo-parser/tokenizer.h	/^  union {$/;"	u	struct:GumboInternalToken
__anonc47d9c110108	deps/commander/commander.h	/^typedef struct {$/;"	s
__anonc68e32330108	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330208	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330308	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330403	deps/gumbo-parser/gumbo.h	/^typedef enum {$/;"	g
__anonc68e32330503	deps/gumbo-parser/gumbo.h	/^typedef enum {$/;"	g
__anonc68e32330608	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330703	deps/gumbo-parser/gumbo.h	/^typedef enum {$/;"	g
__anonc68e32330803	deps/gumbo-parser/gumbo.h	/^typedef enum {$/;"	g
__anonc68e32330903	deps/gumbo-parser/gumbo.h	/^typedef enum {$/;"	g
__anonc68e32330a03	deps/gumbo-parser/gumbo.h	/^typedef enum {$/;"	g
__anonc68e32330b08	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330c08	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330d08	deps/gumbo-parser/gumbo.h	/^typedef struct {$/;"	s
__anonc68e32330e0a	deps/gumbo-parser/gumbo.h	/^  union {$/;"	u	struct:GumboInternalNode
__anonce32a03b0103	deps/gumbo-parser/token_type.h	/^typedef enum {$/;"	g
__anonf0edcb3d0103	deps/list/list.h	/^typedef enum {$/;"	g
__anonf0edcb3d0208	deps/list/list.h	/^typedef struct {$/;"	s
__anonf0edcb3d0308	deps/list/list.h	/^typedef struct {$/;"	s
__anonf56bd07f0108	deps/http-get/http-get.h	/^typedef struct {$/;"	s
__anonfcc941690103	deps/console-colors/console-colors.h	/^typedef enum {$/;"	g
__assert_bail	deps/assertion-macros/assertion-macros.h	/^static int __assert_bail = 0;$/;"	v	typeref:typename:int
__assert_failures	deps/assertion-macros/assertion-macros.h	/^static int __assert_failures = 0;$/;"	v	typeref:typename:int
__describe_after_spec	deps/describe/describe.h	/^void __describe_after_spec(const char *specification, int before) {$/;"	f	typeref:typename:void
_active_formatting_elements	deps/gumbo-parser/parser.c	/^  GumboVector \/*GumboNode*\/ _active_formatting_elements;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboVector	file:
_attr_value_state	deps/gumbo-parser/tokenizer.c	/^  GumboTokenizerEnum _attr_value_state;$/;"	m	struct:GumboInternalTagState	typeref:typename:GumboTokenizerEnum	file:
_attributes	deps/gumbo-parser/tokenizer.c	/^  GumboVector \/* GumboAttribute *\/ _attributes;$/;"	m	struct:GumboInternalTagState	typeref:typename:GumboVector	file:
_buffer	deps/gumbo-parser/parser.c	/^  GumboStringBuffer _buffer;$/;"	m	struct:_TextNodeBufferState	typeref:typename:GumboStringBuffer	file:
_buffer	deps/gumbo-parser/tokenizer.c	/^  GumboStringBuffer _buffer;$/;"	m	struct:GumboInternalTagState	typeref:typename:GumboStringBuffer	file:
_buffered_emit_char	deps/gumbo-parser/tokenizer.c	/^  int _buffered_emit_char;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:int	file:
_closed_body_tag	deps/gumbo-parser/parser.c	/^  bool _closed_body_tag;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_closed_html_tag	deps/gumbo-parser/parser.c	/^  bool _closed_html_tag;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_current	deps/gumbo-parser/utf8.h	/^  int _current;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:int
_current_token	deps/gumbo-parser/parser.c	/^  GumboToken* _current_token;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboToken *	file:
_d	deps/tinydir/tinydir.h	/^	_TINYDIR_DIR *_d;$/;"	m	struct:tinydir_dir	typeref:typename:_TINYDIR_DIR *
_debug	src/common/clib-package.c	/^#define _debug(/;"	d	file:
_debugger	src/common/clib-package.c	/^debug_t _debugger;$/;"	v	typeref:typename:debug_t
_doc_type_state	deps/gumbo-parser/tokenizer.c	/^  GumboTokenDocType _doc_type_state;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:GumboTokenDocType	file:
_drop_next_attr_value	deps/gumbo-parser/tokenizer.c	/^  bool _drop_next_attr_value;$/;"	m	struct:GumboInternalTagState	typeref:typename:bool	file:
_e	deps/tinydir/tinydir.h	/^	struct _tinydir_dirent *_e;$/;"	m	struct:tinydir_dir	typeref:struct:_tinydir_dirent *
_end	deps/gumbo-parser/utf8.h	/^  const char* _end;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:const char *
_ep	deps/tinydir/tinydir.h	/^	struct _tinydir_dirent *_ep;$/;"	m	struct:tinydir_dir	typeref:struct:_tinydir_dirent *
_f	deps/tinydir/tinydir.h	/^	WIN32_FIND_DATA _f;$/;"	m	struct:tinydir_dir	typeref:typename:WIN32_FIND_DATA
_files	deps/tinydir/tinydir.h	/^	tinydir_file *_files;$/;"	m	struct:tinydir_dir	typeref:typename:tinydir_file *
_form_element	deps/gumbo-parser/parser.c	/^  GumboNode* _form_element;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboNode *	file:
_foster_parent_insertions	deps/gumbo-parser/parser.c	/^  bool _foster_parent_insertions;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_frameset_ok	deps/gumbo-parser/parser.c	/^  bool _frameset_ok;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_h	deps/tinydir/tinydir.h	/^	HANDLE _h;$/;"	m	struct:tinydir_dir	typeref:typename:HANDLE
_head_element	deps/gumbo-parser/parser.c	/^  GumboNode* _head_element;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboNode *	file:
_ignore_next_linefeed	deps/gumbo-parser/parser.c	/^  bool _ignore_next_linefeed;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_input	deps/gumbo-parser/tokenizer.c	/^  Utf8Iterator _input;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:Utf8Iterator	file:
_insertion_mode	deps/gumbo-parser/parser.c	/^  GumboInsertionMode _insertion_mode;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboInsertionMode	file:
_is_current_node_foreign	deps/gumbo-parser/tokenizer.c	/^  bool _is_current_node_foreign;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:bool	file:
_is_self_closing	deps/gumbo-parser/tokenizer.c	/^  bool _is_self_closing;$/;"	m	struct:GumboInternalTagState	typeref:typename:bool	file:
_is_start_tag	deps/gumbo-parser/tokenizer.c	/^  bool _is_start_tag;$/;"	m	struct:GumboInternalTagState	typeref:typename:bool	file:
_last_start_tag	deps/gumbo-parser/tokenizer.c	/^  GumboTag _last_start_tag;$/;"	m	struct:GumboInternalTagState	typeref:typename:GumboTag	file:
_mark	deps/gumbo-parser/utf8.h	/^  const char* _mark;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:const char *
_mark_pos	deps/gumbo-parser/utf8.h	/^  GumboSourcePosition _mark_pos;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:GumboSourcePosition
_open_elements	deps/gumbo-parser/parser.c	/^  GumboVector \/*GumboNode*\/ _open_elements;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboVector	file:
_options	deps/gumbo-parser/parser.h	/^  const struct GumboInternalOptions* _options;$/;"	m	struct:GumboInternalParser	typeref:typename:const struct GumboInternalOptions *
_original_insertion_mode	deps/gumbo-parser/parser.c	/^  GumboInsertionMode _original_insertion_mode;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboInsertionMode	file:
_original_text	deps/gumbo-parser/tokenizer.c	/^  const char* _original_text;$/;"	m	struct:GumboInternalTagState	typeref:typename:const char *	file:
_output	deps/gumbo-parser/parser.h	/^  struct GumboInternalOutput* _output;$/;"	m	struct:GumboInternalParser	typeref:struct:GumboInternalOutput *
_parser	deps/gumbo-parser/utf8.h	/^  struct GumboInternalParser* _parser;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:struct:GumboInternalParser *
_parser_state	deps/gumbo-parser/parser.h	/^  struct GumboInternalParserState* _parser_state;$/;"	m	struct:GumboInternalParser	typeref:struct:GumboInternalParserState *
_pos	deps/gumbo-parser/utf8.h	/^  GumboSourcePosition _pos;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:GumboSourcePosition
_reconsume_current_input	deps/gumbo-parser/tokenizer.c	/^  bool _reconsume_current_input;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:bool	file:
_reprocess_current_token	deps/gumbo-parser/parser.c	/^  bool _reprocess_current_token;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_s	deps/tinydir/tinydir.h	/^	struct _stat _s;$/;"	m	struct:tinydir_file	typeref:struct:_stat
_s	deps/tinydir/tinydir.h	/^	struct stat _s;$/;"	m	struct:tinydir_file	typeref:struct:stat
_script_data_buffer	deps/gumbo-parser/tokenizer.c	/^  GumboStringBuffer _script_data_buffer;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:GumboStringBuffer	file:
_self_closing_flag_acknowledged	deps/gumbo-parser/parser.c	/^  bool _self_closing_flag_acknowledged;$/;"	m	struct:GumboInternalParserState	typeref:typename:bool	file:
_start	deps/gumbo-parser/utf8.h	/^  const char* _start;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:const char *
_start_original_text	deps/gumbo-parser/parser.c	/^  const char* _start_original_text;$/;"	m	struct:_TextNodeBufferState	typeref:typename:const char *	file:
_start_pos	deps/gumbo-parser/tokenizer.c	/^  GumboSourcePosition _start_pos;$/;"	m	struct:GumboInternalTagState	typeref:typename:GumboSourcePosition	file:
_start_position	deps/gumbo-parser/parser.c	/^  GumboSourcePosition _start_position;$/;"	m	struct:_TextNodeBufferState	typeref:typename:GumboSourcePosition	file:
_state	deps/gumbo-parser/tokenizer.c	/^  GumboTokenizerEnum _state;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:GumboTokenizerEnum	file:
_tag	deps/gumbo-parser/tokenizer.c	/^  GumboTag _tag;$/;"	m	struct:GumboInternalTagState	typeref:typename:GumboTag	file:
_tag_state	deps/gumbo-parser/tokenizer.c	/^  GumboTagState _tag_state;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:GumboTagState	file:
_template_insertion_modes	deps/gumbo-parser/parser.c	/^  GumboVector \/*InsertionMode*\/ _template_insertion_modes;$/;"	m	struct:GumboInternalParserState	typeref:typename:GumboVector	file:
_temporary_buffer	deps/gumbo-parser/tokenizer.c	/^  GumboStringBuffer _temporary_buffer;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:GumboStringBuffer	file:
_temporary_buffer_emit	deps/gumbo-parser/tokenizer.c	/^  const char* _temporary_buffer_emit;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:const char *	file:
_text_node	deps/gumbo-parser/parser.c	/^  TextNodeBufferState _text_node;$/;"	m	struct:GumboInternalParserState	typeref:typename:TextNodeBufferState	file:
_tinydir_char_t	deps/tinydir/tinydir.h	/^# define _tinydir_char_t /;"	d
_tinydir_closedir	deps/tinydir/tinydir.h	/^#define _tinydir_closedir /;"	d
_tinydir_dirent	deps/tinydir/tinydir.h	/^#define _tinydir_dirent /;"	d
_tinydir_dirent_buf_size	deps/tinydir/tinydir.h	/^size_t _tinydir_dirent_buf_size(_TINYDIR_DIR *dirp)$/;"	f	typeref:typename:_TINYDIR_FUNC size_t
_tinydir_file_cmp	deps/tinydir/tinydir.h	/^int _tinydir_file_cmp(const void *a, const void *b)$/;"	f	typeref:typename:_TINYDIR_FUNC int
_tinydir_get_ext	deps/tinydir/tinydir.h	/^void _tinydir_get_ext(tinydir_file *file)$/;"	f	typeref:typename:_TINYDIR_FUNC void
_tinydir_opendir	deps/tinydir/tinydir.h	/^#define _tinydir_opendir /;"	d
_tinydir_readdir	deps/tinydir/tinydir.h	/^#define _tinydir_readdir /;"	d
_tinydir_strcat	deps/tinydir/tinydir.h	/^# define _tinydir_strcat /;"	d
_tinydir_strcmp	deps/tinydir/tinydir.h	/^# define _tinydir_strcmp /;"	d
_tinydir_strcpy	deps/tinydir/tinydir.h	/^# define _tinydir_strcpy /;"	d
_tinydir_strlen	deps/tinydir/tinydir.h	/^# define _tinydir_strlen /;"	d
_tinydir_strncmp	deps/tinydir/tinydir.h	/^# define _tinydir_strncmp /;"	d
_tinydir_strrchr	deps/tinydir/tinydir.h	/^# define _tinydir_strrchr /;"	d
_token_start	deps/gumbo-parser/tokenizer.c	/^  const char* _token_start;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:const char *	file:
_token_start_pos	deps/gumbo-parser/tokenizer.c	/^  GumboSourcePosition _token_start_pos;$/;"	m	struct:GumboInternalTokenizerState	typeref:typename:GumboSourcePosition	file:
_tokenizer_state	deps/gumbo-parser/parser.h	/^  struct GumboInternalTokenizerState* _tokenizer_state;$/;"	m	struct:GumboInternalParser	typeref:struct:GumboInternalTokenizerState *
_type	deps/gumbo-parser/parser.c	/^  GumboNodeType _type;$/;"	m	struct:_TextNodeBufferState	typeref:typename:GumboNodeType	file:
_width	deps/gumbo-parser/utf8.h	/^  int _width;$/;"	m	struct:GumboInternalUtf8Iterator	typeref:typename:int
abandon_current_tag	deps/gumbo-parser/tokenizer.c	/^static void abandon_current_tag(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
acknowledge_self_closing_tag	deps/gumbo-parser/parser.c	/^static void acknowledge_self_closing_tag(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
add_codepoint_error	deps/gumbo-parser/char_ref.c	/^static void add_codepoint_error($/;"	f	typeref:typename:void	file:
add_duplicate_attr_error	deps/gumbo-parser/tokenizer.c	/^static void add_duplicate_attr_error(GumboParser* parser, const char* attr_name,$/;"	f	typeref:typename:void	file:
add_error	deps/gumbo-parser/utf8.c	/^static void add_error(Utf8Iterator* iter, GumboErrorType type) {$/;"	f	typeref:typename:void	file:
add_formatting_element	deps/gumbo-parser/parser.c	/^static void add_formatting_element(GumboParser* parser, const GumboNode* node) {$/;"	f	typeref:typename:void	file:
add_named_reference_error	deps/gumbo-parser/char_ref.c	/^static void add_named_reference_error($/;"	f	typeref:typename:void	file:
add_no_digit_error	deps/gumbo-parser/char_ref.c	/^static void add_no_digit_error($/;"	f	typeref:typename:void	file:
add_package_href	deps/wiki-registry/wiki-registry.c	/^add_package_href(wiki_package_t *self) {$/;"	f	typeref:typename:void	file:
add_package_to_json	src/clib-search.c	/^static void add_package_to_json(const wiki_package_t *pkg,$/;"	f	typeref:typename:void	file:
add_parse_error	deps/gumbo-parser/parser.c	/^static GumboError* add_parse_error(GumboParser* parser, const GumboToken* token) {$/;"	f	typeref:typename:GumboError *	file:
add_parse_error	deps/gumbo-parser/tokenizer.c	/^static void add_parse_error(GumboParser* parser, GumboErrorType type) {$/;"	f	typeref:typename:void	file:
adjust_foreign_attributes	deps/gumbo-parser/parser.c	/^static void adjust_foreign_attributes(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:void	file:
adjust_mathml_attributes	deps/gumbo-parser/parser.c	/^static void adjust_mathml_attributes(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:void	file:
adjust_svg_attributes	deps/gumbo-parser/parser.c	/^static void adjust_svg_attributes(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:void	file:
adoption_agency_algorithm	deps/gumbo-parser/parser.c	/^static bool adoption_agency_algorithm($/;"	f	typeref:typename:bool	file:
all	Makefile	/^all: $(BINS)$/;"	t
all_attributes_match	deps/gumbo-parser/parser.c	/^static bool all_attributes_match($/;"	f	typeref:typename:bool	file:
allocator	deps/gumbo-parser/gumbo.h	/^  GumboAllocatorFunction allocator;$/;"	m	struct:GumboInternalOptions	typeref:typename:GumboAllocatorFunction
anonymousObject57e3158d0105	scripts/update-clib-json	/^  JSON.stringify(Object.assign(clib, { version: pkg.version }), null, '  '))$/;"	v
append_char_to_tag_buffer	deps/gumbo-parser/tokenizer.c	/^static void append_char_to_tag_buffer(GumboParser* parser, int codepoint,$/;"	f	typeref:typename:void	file:
append_char_to_temporary_buffer	deps/gumbo-parser/tokenizer.c	/^static void append_char_to_temporary_buffer($/;"	f	typeref:typename:void	file:
append_comment_node	deps/gumbo-parser/parser.c	/^static void append_comment_node($/;"	f	typeref:typename:void	file:
append_indent	deps/parson/parson.c	/^static int append_indent(char *buf, int level) {$/;"	f	typeref:typename:int	file:
append_node	deps/gumbo-parser/parser.c	/^static void append_node($/;"	f	typeref:typename:void	file:
append_string	deps/parson/parson.c	/^static int append_string(char *buf, const char *string) {$/;"	f	typeref:typename:int	file:
arg	deps/commander/commander.h	/^  const char *arg;$/;"	m	struct:command	typeref:typename:const char *
argc	deps/commander/commander.h	/^  int argc;$/;"	m	struct:command	typeref:typename:int
argname	deps/commander/commander.h	/^  char *argname;$/;"	m	struct:__anonc47d9c110108	typeref:typename:char *
argv	deps/commander/commander.h	/^  char *argv[COMMANDER_MAX_ARGS];$/;"	m	struct:command	typeref:typename:char * []
array	deps/parson/parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	typeref:typename:JSON_Array *	file:
ask_for	src/clib-init.c	/^static void ask_for(JSON_Object *root, const char *key,$/;"	f	typeref:typename:void	file:
asprintf	deps/asprintf/asprintf.c	/^asprintf (char **str, const char *fmt, ...) {$/;"	f	typeref:typename:int
assert	deps/assertion-macros/assertion-macros.h	/^#  define assert /;"	d
assert_bail	deps/assertion-macros/assertion-macros.h	/^#define assert_bail(/;"	d
assert_cached_dir	test/cache/cache-test.c	/^static void assert_cached_dir(char *pkg_dir, int exists)$/;"	f	typeref:typename:void	file:
assert_cached_file	test/cache/cache-test.c	/^static void assert_cached_file(char *pkg_dir, char *file)$/;"	f	typeref:typename:void	file:
assert_cached_files	test/cache/cache-test.c	/^static void assert_cached_files(char *pkg_dir)$/;"	f	typeref:typename:void	file:
assert_equal	deps/assertion-macros/assertion-macros.h	/^#define assert_equal(/;"	d
assert_exists	test/cache/cache-test.c	/^#define assert_exists(/;"	d	file:
assert_failures	deps/assertion-macros/assertion-macros.h	/^#define assert_failures(/;"	d
assert_not_equal	deps/assertion-macros/assertion-macros.h	/^#define assert_not_equal(/;"	d
assert_not_null	deps/assertion-macros/assertion-macros.h	/^#define assert_not_null(/;"	d
assert_null	deps/assertion-macros/assertion-macros.h	/^#define assert_null(/;"	d
assert_ok	deps/assertion-macros/assertion-macros.h	/^#define assert_ok(/;"	d
assert_reset	deps/assertion-macros/assertion-macros.h	/^#define assert_reset(/;"	d
assert_str_equal	deps/assertion-macros/assertion-macros.h	/^#define assert_str_equal(/;"	d
assert_str_not_equal	deps/assertion-macros/assertion-macros.h	/^#define assert_str_not_equal(/;"	d
attr	src/common/clib-package.c	/^  pthread_attr_t attr;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:pthread_attr_t	file:
attr_namespace	deps/gumbo-parser/gumbo.h	/^  GumboAttributeNamespaceEnum attr_namespace;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboAttributeNamespaceEnum
attr_namespace	deps/gumbo-parser/parser.c	/^  const GumboAttributeNamespaceEnum attr_namespace;$/;"	m	struct:_NamespacedAttributeReplacement	typeref:typename:const GumboAttributeNamespaceEnum	file:
attribute_matches	deps/gumbo-parser/parser.c	/^static bool attribute_matches($/;"	f	typeref:typename:bool	file:
attribute_matches_case_sensitive	deps/gumbo-parser/parser.c	/^static bool attribute_matches_case_sensitive($/;"	f	typeref:typename:bool	file:
attributes	deps/gumbo-parser/gumbo.h	/^  GumboVector \/* GumboAttribute* *\/ attributes;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboVector
attributes	deps/gumbo-parser/tokenizer.h	/^  GumboVector \/* GumboAttribute *\/ attributes;$/;"	m	struct:GumboInternalTokenStartTag	typeref:typename:GumboVector
author	deps/fs/clib.json	/^  "author": "Joseph Werle",$/;"	s
author	deps/fs/package.json	/^  "author": "Joseph Werle",$/;"	s
author	deps/gumbo-parser/package.json	/^  "author": "Thorsten Lorenz <thlorenz@gmx.de> (http:\/\/thlorenz.com\/)",$/;"	s
author	src/common/clib-package.h	/^  char *author;$/;"	m	struct:__anon9e68895d0108	typeref:typename:char *
author	src/common/clib-package.h	/^  char *author;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
bench	deps/list/package.json	/^    "bench": "*"$/;"	s	object:development
boolean	deps/parson/parson.c	/^    int          boolean;$/;"	m	union:json_value_value	typeref:typename:int	file:
bugs	deps/fs/clib.json	/^  "bugs": {$/;"	o
bugs	deps/fs/package.json	/^  "bugs": {$/;"	o
bugs	deps/gumbo-parser/package.json	/^  "bugs": {$/;"	o
build	Makefile	/^build: $(BINS)$/;"	t
build_package	src/clib-build.c	/^int build_package(const char *dir) {$/;"	f	typeref:typename:int
build_package_with_manifest_name	src/clib-build.c	/^int build_package_with_manifest_name(const char *dir, const char *file) {$/;"	f	typeref:typename:int
build_package_with_manifest_name_thread	src/clib-build.c	/^void *build_package_with_manifest_name_thread(void *arg) {$/;"	f	typeref:typename:void *
built	src/clib-build.c	/^hash_t *built = 0;$/;"	v	typeref:typename:hash_t *
cache-%	test/cache/Makefile	/^cache-%: cache-%.o $(OBJS)$/;"	t
capacity	deps/gumbo-parser/gumbo.h	/^  unsigned int capacity;$/;"	m	struct:__anonc68e32330308	typeref:typename:unsigned int
capacity	deps/gumbo-parser/string_buffer.h	/^  size_t capacity;$/;"	m	struct:__anon249283490108	typeref:typename:size_t
capacity	deps/parson/parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	typeref:typename:size_t	file:
capacity	deps/parson/parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	typeref:typename:size_t	file:
case_camel	deps/case/case.c	/^case_camel(char *str) {$/;"	f	typeref:typename:char *
case_lower	deps/case/case.c	/^case_lower(char *str) {$/;"	f	typeref:typename:char *
case_upper	deps/case/case.c	/^case_upper(char *str) {$/;"	f	typeref:typename:char *
category	deps/wiki-registry/wiki-registry.h	/^  char *category;$/;"	m	struct:__anon5d71bd190108	typeref:typename:char *
cb	deps/commander/commander.h	/^  command_callback_t cb;$/;"	m	struct:__anonc47d9c110108	typeref:typename:command_callback_t
cc_color_t	deps/console-colors/console-colors.h	/^} cc_color_t;$/;"	t	typeref:enum:__anonfcc941690103
cc_fprintf	deps/console-colors/console-colors.c	/^int cc_fprintf(cc_color_t color, FILE* stream, const char* format, ...) {$/;"	f	typeref:typename:int
ccan2repo	scripts/ccan2clib.py	/^def ccan2repo(module, dst_path):$/;"	f
character	deps/gumbo-parser/tokenizer.h	/^    int character;      \/\/ For character, whitespace, null, and EOF tokens.$/;"	m	union:GumboInternalToken::__anonb159a4d4010a	typeref:typename:int
check_dir	deps/copy/copy.c	/^static void check_dir(char *dir)$/;"	f	typeref:typename:void	file:
check_dir	src/common/clib-cache.c	/^static int check_dir(char *dir) {$/;"	f	typeref:typename:int	file:
check_err	deps/copy/copy.c	/^#define check_err(/;"	d	file:
children	deps/gumbo-parser/gumbo.h	/^  GumboVector \/* GumboNode* *\/ children;$/;"	m	struct:__anonc68e32330b08	typeref:typename:GumboVector
children	deps/gumbo-parser/gumbo.h	/^  GumboVector \/* GumboNode* *\/ children;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboVector
clean	Makefile	/^clean:$/;"	t
clean	src/clib-build.c	/^  char *clean;$/;"	m	struct:options	typeref:typename:char *	file:
clean	test/cache/Makefile	/^clean:$/;"	t
clean	test/package/Makefile	/^clean:$/;"	t
clear_active_formatting_elements	deps/gumbo-parser/parser.c	/^static void clear_active_formatting_elements(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
clear_stack_to_table_body_context	deps/gumbo-parser/parser.c	/^void clear_stack_to_table_body_context(GumboParser* parser) {$/;"	f	typeref:typename:void
clear_stack_to_table_context	deps/gumbo-parser/parser.c	/^static void clear_stack_to_table_context(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
clear_stack_to_table_row_context	deps/gumbo-parser/parser.c	/^static void clear_stack_to_table_row_context(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
clear_temporary_buffer	deps/gumbo-parser/tokenizer.c	/^static void clear_temporary_buffer(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
clib	scripts/update-clib-json	/^const clib = require('..\/clib.json')$/;"	C
clib(1)	Readme.md	/^# clib(1)$/;"	c
clib.json	Readme.md	/^## clib.json$/;"	s	chapter:clib(1)
clib_cache_delete_json	src/common/clib-cache.c	/^int clib_cache_delete_json(char *author, char *name, char *version) {$/;"	f	typeref:typename:int
clib_cache_delete_package	src/common/clib-cache.c	/^int clib_cache_delete_package(char *author, char *name, char *version) {$/;"	f	typeref:typename:int
clib_cache_delete_search	src/common/clib-cache.c	/^int clib_cache_delete_search(void) { return unlink(search_cache); }$/;"	f	typeref:typename:int
clib_cache_dir	src/common/clib-cache.c	/^const char *clib_cache_dir(void) { return package_cache_dir; }$/;"	f	typeref:typename:const char *
clib_cache_has_json	src/common/clib-cache.c	/^int clib_cache_has_json(char *author, char *name, char *version) {$/;"	f	typeref:typename:int
clib_cache_has_package	src/common/clib-cache.c	/^int clib_cache_has_package(char *author, char *name, char *version) {$/;"	f	typeref:typename:int
clib_cache_has_search	src/common/clib-cache.c	/^int clib_cache_has_search(void) { return 0 == fs_exists(search_cache); }$/;"	f	typeref:typename:int
clib_cache_init	src/common/clib-cache.c	/^int clib_cache_init(time_t exp) {$/;"	f	typeref:typename:int
clib_cache_is_expired_package	src/common/clib-cache.c	/^int clib_cache_is_expired_package(char *author, char *name, char *version) {$/;"	f	typeref:typename:int
clib_cache_load_package	src/common/clib-cache.c	/^int clib_cache_load_package(char *author, char *name, char *version,$/;"	f	typeref:typename:int
clib_cache_read_json	src/common/clib-cache.c	/^char *clib_cache_read_json(char *author, char *name, char *version) {$/;"	f	typeref:typename:char *
clib_cache_read_search	src/common/clib-cache.c	/^char *clib_cache_read_search(void) {$/;"	f	typeref:typename:char *
clib_cache_save_json	src/common/clib-cache.c	/^int clib_cache_save_json(char *author, char *name, char *version,$/;"	f	typeref:typename:int
clib_cache_save_package	src/common/clib-cache.c	/^int clib_cache_save_package(char *author, char *name, char *version,$/;"	f	typeref:typename:int
clib_cache_save_search	src/common/clib-cache.c	/^int clib_cache_save_search(char *content) {$/;"	f	typeref:typename:int
clib_package_cleanup	src/common/clib-package.c	/^void clib_package_cleanup() {$/;"	f	typeref:typename:void
clib_package_curl_share	src/common/clib-package.c	/^CURLSH *clib_package_curl_share;$/;"	v	typeref:typename:CURLSH *
clib_package_dependency_free	src/common/clib-package.c	/^void clib_package_dependency_free(void *_dep) {$/;"	f	typeref:typename:void
clib_package_dependency_new	src/common/clib-package.c	/^clib_package_dependency_t *clib_package_dependency_new(const char *repo,$/;"	f	typeref:typename:clib_package_dependency_t *
clib_package_dependency_t	src/common/clib-package.h	/^} clib_package_dependency_t;$/;"	t	typeref:struct:__anon9e68895d0108
clib_package_file_url	src/common/clib-package.c	/^static inline char *clib_package_file_url(const char *url, const char *file) {$/;"	f	typeref:typename:char *	file:
clib_package_free	src/common/clib-package.c	/^void clib_package_free(clib_package_t *pkg) {$/;"	f	typeref:typename:void
clib_package_install	src/common/clib-package.c	/^int clib_package_install(clib_package_t *pkg, const char *dir, int verbose) {$/;"	f	typeref:typename:int
clib_package_install_dependencies	src/common/clib-package.c	/^int clib_package_install_dependencies(clib_package_t *pkg, const char *dir,$/;"	f	typeref:typename:int
clib_package_install_development	src/common/clib-package.c	/^int clib_package_install_development(clib_package_t *pkg, const char *dir,$/;"	f	typeref:typename:int
clib_package_install_executable	src/common/clib-package.c	/^int clib_package_install_executable(clib_package_t *pkg, char *dir,$/;"	f	typeref:typename:int
clib_package_load_from_manifest	src/common/clib-package.c	/^clib_package_t *clib_package_load_from_manifest(const char *manifest,$/;"	f	typeref:typename:clib_package_t *
clib_package_load_local_manifest	src/common/clib-package.c	/^clib_package_t *clib_package_load_local_manifest(int verbose) {$/;"	f	typeref:typename:clib_package_t *
clib_package_lock	src/common/clib-package.c	/^struct clib_package_lock {$/;"	s	file:
clib_package_lock_t	src/common/clib-package.c	/^typedef struct clib_package_lock clib_package_lock_t;$/;"	t	typeref:struct:clib_package_lock	file:
clib_package_new	src/common/clib-package.c	/^clib_package_t *clib_package_new(const char *json, int verbose) {$/;"	f	typeref:typename:clib_package_t *
clib_package_new_from_slug	src/common/clib-package.c	/^clib_package_t *clib_package_new_from_slug(const char *slug, int verbose) {$/;"	f	typeref:typename:clib_package_t *
clib_package_new_from_slug_with_package_name	src/common/clib-package.c	/^clib_package_new_from_slug_with_package_name(const char *slug, int verbose,$/;"	f	typeref:typename:clib_package_t *	file:
clib_package_opts_t	src/common/clib-package.h	/^} clib_package_opts_t;$/;"	t	typeref:struct:__anon9e68895d0308
clib_package_parse_author	src/common/clib-package.c	/^char *clib_package_parse_author(const char *slug) {$/;"	f	typeref:typename:char *
clib_package_parse_name	src/common/clib-package.c	/^char *clib_package_parse_name(const char *slug) {$/;"	f	typeref:typename:char *
clib_package_parse_version	src/common/clib-package.c	/^char *clib_package_parse_version(const char *slug) {$/;"	f	typeref:typename:char *
clib_package_repo	src/common/clib-package.c	/^static inline char *clib_package_repo(const char *author, const char *name) {$/;"	f	typeref:typename:char *	file:
clib_package_set_opts	src/common/clib-package.c	/^void clib_package_set_opts(clib_package_opts_t o) {$/;"	f	typeref:typename:void
clib_package_slug	src/common/clib-package.c	/^static inline char *clib_package_slug(const char *author, const char *name,$/;"	f	typeref:typename:char *	file:
clib_package_t	src/common/clib-package.h	/^} clib_package_t;$/;"	t	typeref:struct:__anon9e68895d0208
clib_package_thread	src/clib-build.c	/^struct clib_package_thread {$/;"	s	file:
clib_package_thread	src/clib-configure.c	/^struct clib_package_thread {$/;"	s	file:
clib_package_thread_t	src/clib-build.c	/^typedef struct clib_package_thread clib_package_thread_t;$/;"	t	typeref:struct:clib_package_thread	file:
clib_package_thread_t	src/clib-configure.c	/^typedef struct clib_package_thread clib_package_thread_t;$/;"	t	typeref:struct:clib_package_thread	file:
clib_package_url	src/common/clib-package.c	/^char *clib_package_url(const char *author, const char *name,$/;"	f	typeref:typename:char *
clib_package_url_from_repo	src/common/clib-package.c	/^char *clib_package_url_from_repo(const char *repo, const char *version) {$/;"	f	typeref:typename:char *
clibs/http-get.c	clib.json	/^    "clibs\/http-get.c": "*",$/;"	s	object:dependencies
clibs/list	deps/wiki-registry/package.json	/^    "clibs\/list": "*"$/;"	s	object:dependencies
clibs/parson	clib.json	/^    "clibs\/parson": "1.0.2",$/;"	s	object:dependencies
clibs/strdup	deps/str-replace/package.json	/^    "clibs\/strdup": "0.0.2"$/;"	s	object:dependencies
clone_node	deps/gumbo-parser/parser.c	/^GumboNode* clone_node($/;"	f	typeref:typename:GumboNode *
close_current_cell	deps/gumbo-parser/parser.c	/^static bool close_current_cell(GumboParser* parser, const GumboToken* token) {$/;"	f	typeref:typename:bool	file:
close_current_select	deps/gumbo-parser/parser.c	/^static void close_current_select(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
close_table	deps/gumbo-parser/parser.c	/^static bool close_table(GumboParser* parser) {$/;"	f	typeref:typename:bool	file:
close_table_cell	deps/gumbo-parser/parser.c	/^static bool close_table_cell(GumboParser* parser, const GumboToken* token,$/;"	f	typeref:typename:bool	file:
codepoint	deps/gumbo-parser/error.h	/^    uint64_t codepoint;$/;"	m	union:GumboInternalError::__anon25fbe703030a	typeref:typename:uint64_t
codepoint	deps/gumbo-parser/error.h	/^  int codepoint;$/;"	m	struct:GumboInternalTokenizerError	typeref:typename:int
codepoints	deps/gumbo-parser/char_ref.c	/^  OneOrTwoCodepoints codepoints;$/;"	m	struct:__anona0e2c48e0108	typeref:typename:OneOrTwoCodepoints	file:
color	deps/debug/debug.h	/^  int color;$/;"	m	struct:__anon5a8922b30108	typeref:typename:int
color_tests	test/search-no-color.sh	/^color_tests() {$/;"	f
column	deps/gumbo-parser/gumbo.h	/^  unsigned int column;$/;"	m	struct:__anonc68e32330108	typeref:typename:unsigned int
command	deps/commander/commander.h	/^typedef struct command {$/;"	s
command_callback_t	deps/commander/commander.h	/^typedef void (* command_callback_t)(struct command *self);$/;"	t	typeref:typename:void (*)(struct command * self)
command_free	deps/commander/commander.c	/^command_free(command_t *self) {$/;"	f	typeref:typename:void
command_help	deps/commander/commander.c	/^command_help(command_t *self) {$/;"	f	typeref:typename:void
command_init	deps/commander/commander.c	/^command_init(command_t *self, const char *name, const char *version) {$/;"	f	typeref:typename:void
command_option	deps/commander/commander.c	/^command_option(command_t *self, const char *small, const char *large, const char *desc, command_/;"	f	typeref:typename:void
command_option_t	deps/commander/commander.h	/^} command_option_t;$/;"	t	typeref:struct:__anonc47d9c110108
command_parse	deps/commander/commander.c	/^command_parse(command_t *self, int argc, char **argv) {$/;"	f	typeref:typename:void
command_parse_args	deps/commander/commander.c	/^command_parse_args(command_t *self, int argc, char **argv) {$/;"	f	typeref:typename:void	file:
command_t	deps/commander/commander.h	/^} command_t;$/;"	t	typeref:struct:command
command_version	deps/commander/commander.c	/^command_version(command_t *self) {$/;"	f	typeref:typename:void	file:
commander	clib.json	/^    "commander": "1.3.2",$/;"	s	object:dependencies
commit-hook	Makefile	/^commit-hook: scripts\/pre-commit-hook.sh$/;"	t
compute_quirks_mode	deps/gumbo-parser/parser.c	/^static GumboQuirksModeEnum compute_quirks_mode($/;"	f	typeref:typename:GumboQuirksModeEnum	file:
concat	deps/str-concat/str-concat.c	/^char *concat(const char *s1, const char *s2) {$/;"	f	typeref:typename:char *
concurrency	src/clib-build.c	/^  unsigned int concurrency;$/;"	m	struct:options	typeref:typename:unsigned int	file:
concurrency	src/clib-configure.c	/^  unsigned int concurrency;$/;"	m	struct:options	typeref:typename:unsigned int	file:
concurrency	src/clib-install.c	/^  unsigned int concurrency;$/;"	m	struct:options	typeref:typename:unsigned int	file:
concurrency	src/clib-update.c	/^  unsigned int concurrency;$/;"	m	struct:options	typeref:typename:unsigned int	file:
concurrency	src/clib-upgrade.c	/^  unsigned int concurrency;$/;"	m	struct:options	typeref:typename:unsigned int	file:
concurrency	src/common/clib-package.h	/^  int concurrency;$/;"	m	struct:__anon9e68895d0308	typeref:typename:int
configure	src/common/clib-package.h	/^  char *configure;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
configure_package	src/clib-configure.c	/^int configure_package(const char *dir) {$/;"	f	typeref:typename:int
configure_package_with_manifest_name	src/clib-configure.c	/^int configure_package_with_manifest_name(const char *dir, const char *file) {$/;"	f	typeref:typename:int
configure_package_with_manifest_name_thread	src/clib-configure.c	/^void *configure_package_with_manifest_name_thread(void *arg) {$/;"	f	typeref:typename:void *
configured	src/clib-configure.c	/^hash_t *configured = 0;$/;"	v	typeref:typename:hash_t *
consume_char_ref	deps/gumbo-parser/char_ref.c	/^bool consume_char_ref($/;"	f	typeref:typename:bool
consume_named_ref	deps/gumbo-parser/char_ref.c	/^static bool consume_named_ref($/;"	f	typeref:typename:bool	file:
consume_numeric_ref	deps/gumbo-parser/char_ref.c	/^static bool consume_numeric_ref($/;"	f	typeref:typename:bool	file:
copy	deps/copy/copy.c	/^static int copy(tinydir_file file, char *target_dir)$/;"	f	typeref:typename:int	file:
copy_dir	deps/copy/copy.c	/^int copy_dir(char *dir_path, char *target_dir)$/;"	f	typeref:typename:int
copy_file	deps/copy/copy.c	/^int copy_file(char *from, char *to)$/;"	f	typeref:typename:int
copy_over_original_tag_text	deps/gumbo-parser/tokenizer.c	/^static void copy_over_original_tag_text($/;"	f	typeref:typename:void	file:
copy_over_tag_buffer	deps/gumbo-parser/tokenizer.c	/^static void copy_over_tag_buffer(GumboParser* parser, const char** output) {$/;"	f	typeref:typename:void	file:
count	deps/parson/parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	typeref:typename:size_t	file:
count	deps/parson/parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	typeref:typename:size_t	file:
count_formatting_elements_of_tag	deps/gumbo-parser/parser.c	/^static int count_formatting_elements_of_tag($/;"	f	typeref:typename:int	file:
crawl	deps/gumbo-get-elements-by-tag-name/get-elements-by-tag-name.c	/^crawl(GumboTag tag, list_t *elements, GumboNode *node) {$/;"	f	typeref:typename:void	file:
create_element	deps/gumbo-parser/parser.c	/^static GumboNode* create_element(GumboParser* parser, GumboTag tag) {$/;"	f	typeref:typename:GumboNode *	file:
create_element_from_token	deps/gumbo-parser/parser.c	/^static GumboNode* create_element_from_token($/;"	f	typeref:typename:GumboNode *	file:
create_node	deps/gumbo-parser/parser.c	/^static GumboNode* create_node(GumboParser* parser, GumboNodeType type) {$/;"	f	typeref:typename:GumboNode *	file:
curl_lock_callback	src/common/clib-package.c	/^static void curl_lock_callback(CURL *handle, curl_lock_data data,$/;"	f	typeref:typename:void	file:
curl_unlock_callback	src/common/clib-package.c	/^static void curl_unlock_callback(CURL *handle, curl_lock_data data,$/;"	f	typeref:typename:void	file:
cxong/tinydir	deps/copy/clib.json	/^    "cxong\/tinydir": "*",$/;"	s	object:dependencies
cxong/tinydir	deps/copy/package.json	/^    "cxong\/tinydir": "*",$/;"	s	object:dependencies
darthtrevino/str-concat	clib.json	/^    "darthtrevino\/str-concat": "0.0.2",$/;"	s	object:dependencies
data	deps/commander/commander.h	/^  void *data;$/;"	m	struct:command	typeref:typename:void *
data	deps/gumbo-parser/gumbo.h	/^  const char* data;$/;"	m	struct:__anonc68e32330208	typeref:typename:const char *
data	deps/gumbo-parser/gumbo.h	/^  void** data;$/;"	m	struct:__anonc68e32330308	typeref:typename:void **
data	deps/gumbo-parser/string_buffer.h	/^  char* data;$/;"	m	struct:__anon249283490108	typeref:typename:char *
data	deps/http-get/http-get.h	/^  char *data;$/;"	m	struct:__anonf56bd07f0108	typeref:typename:char *
data	src/common/clib-package.c	/^  void *data;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:void *	file:
data	src/common/clib-package.h	/^  void *data; \/\/ user data$/;"	m	struct:__anon9e68895d0208	typeref:typename:void *
deallocator	deps/gumbo-parser/gumbo.h	/^  GumboDeallocatorFunction deallocator;$/;"	m	struct:GumboInternalOptions	typeref:typename:GumboDeallocatorFunction
debug	deps/debug/debug.c	/^debug(debug_t *debugger, const char *fmt, ...) {$/;"	f	typeref:typename:void
debug_init	deps/debug/debug.c	/^debug_init(debug_t *debugger, const char *name) {$/;"	f	typeref:typename:int
debug_is_enabled	deps/debug/debug.c	/^debug_is_enabled(const char *name) {$/;"	f	typeref:typename:int
debug_t	deps/debug/debug.h	/^} debug_t;$/;"	t	typeref:struct:__anon5a8922b30108
debugger	src/clib-build.c	/^debug_t debugger = {0};$/;"	v	typeref:typename:debug_t
debugger	src/clib-configure.c	/^debug_t debugger = {0};$/;"	v	typeref:typename:debug_t
debugger	src/clib-init.c	/^debug_t debugger;$/;"	v	typeref:typename:debug_t
debugger	src/clib-install.c	/^debug_t debugger = {0};$/;"	v	typeref:typename:debug_t
debugger	src/clib-search.c	/^debug_t debugger;$/;"	v	typeref:typename:debug_t
debugger	src/clib-update.c	/^debug_t debugger = {0};$/;"	v	typeref:typename:debug_t
debugger	src/clib-upgrade.c	/^debug_t debugger = {0};$/;"	v	typeref:typename:debug_t
debugger	src/clib.c	/^debug_t debugger;$/;"	v	typeref:typename:debug_t
default	Makefile	/^default: all$/;"	t
dependencies	clib.json	/^  "dependencies": {$/;"	o
dependencies	deps/console-colors/package.json	/^  "dependencies": { }$/;"	o
dependencies	deps/copy/clib.json	/^  "dependencies": {$/;"	o
dependencies	deps/copy/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/debug/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/describe/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/gumbo-get-element-by-id/package.json	/^  "dependencies": {},$/;"	o
dependencies	deps/gumbo-get-elements-by-tag-name/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/logger/clib.json	/^  "dependencies": {$/;"	o
dependencies	deps/logger/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/mkdirp/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/parse-repo/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/path-join/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/path-normalize/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/rimraf/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/str-replace/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/substr/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/tempdir/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/which/clib.json	/^  "dependencies": {$/;"	o
dependencies	deps/which/package.json	/^  "dependencies": {$/;"	o
dependencies	deps/wiki-registry/package.json	/^  "dependencies": {$/;"	o
dependencies	src/common/clib-package.h	/^  list_t *dependencies;$/;"	m	struct:__anon9e68895d0208	typeref:typename:list_t *
dependencies	test/package/clib.json	/^  "dependencies": {$/;"	o
depends_bin	scripts/ccan2clib.py	/^depends_bin = 'tools\/ccan_depends'$/;"	v
describe	deps/describe/describe.h	/^#define describe(/;"	d
description	deps/asprintf/package.json	/^  "description": "asprintf() implementation",$/;"	s
description	deps/assertion-macros/package.json	/^  "description": "Simple assertion macros",$/;"	s
description	deps/case/package.json	/^  "description": "String case conversion utility",$/;"	s
description	deps/commander/clib.json	/^  "description": "Command-line argument parser",$/;"	s
description	deps/commander/commander.h	/^  const char *description;$/;"	m	struct:__anonc47d9c110108	typeref:typename:const char *
description	deps/commander/package.json	/^  "description": "Command-line argument parser",$/;"	s
description	deps/console-colors/package.json	/^  "description": "Write formatted string to console with colors",$/;"	s
description	deps/copy/clib.json	/^  "description": "Copies files, directories recursively",$/;"	s
description	deps/copy/package.json	/^  "description": "Copies files, directories recursively",$/;"	s
description	deps/describe/package.json	/^  "description": "Simple BDD describe test thingy",$/;"	s
description	deps/fs/clib.json	/^  "description": "File system API much like Node's fs module",$/;"	s
description	deps/fs/package.json	/^  "description": "File system API much like Node's fs module",$/;"	s
description	deps/gumbo-parser/package.json	/^  "description": "Gumbo - A pure-C HTML5 parser, adapted to be installable via clib.",$/;"	s
description	deps/hash/clib.json	/^  "description": "Hash wrapper around khash",$/;"	s
description	deps/hash/package.json	/^  "description": "Hash wrapper around khash",$/;"	s
description	deps/http-get/clib.json	/^  "description": "Simple HTTP GET requests backed by libcurl",$/;"	s
description	deps/list/package.json	/^  "description": "Simple linked list",$/;"	s
description	deps/mkdirp/package.json	/^  "description": "mkdir -p",$/;"	s
description	deps/occurrences/package.json	/^  "description": "Get the number of occurrences of `needle` in `haystack`",$/;"	s
description	deps/parse-repo/package.json	/^  "description": "Parse GitHub style repos",$/;"	s
description	deps/parson/clib.json	/^  "description": "Small json parser and reader",$/;"	s
description	deps/parson/package.json	/^  "description": "Small json parser and reader",$/;"	s
description	deps/path-join/package.json	/^  "description": "Join a path",$/;"	s
description	deps/path-normalize/package.json	/^  "description": "Normalize a path",$/;"	s
description	deps/rimraf/package.json	/^  "description": "rm -rf",$/;"	s
description	deps/str-concat/clib.json	/^  "description": "Returns the malloc'ed result of two c-strings concatenated.",$/;"	s
description	deps/str-concat/package.json	/^  "description": "Returns the malloc'ed result of two c-strings concatenated.",$/;"	s
description	deps/str-ends-with/package.json	/^  "description": "Check if a string ends with another string",$/;"	s
description	deps/str-flatten/package.json	/^  "description": "Flatten a char array, ripped out of sphia(1)",$/;"	s
description	deps/str-replace/package.json	/^  "description": "String replacement in C",$/;"	s
description	deps/str-starts-with/package.json	/^  "description": "Check if a string starts with another string",$/;"	s
description	deps/strdup/clib.json	/^  "description": "drop-in replacement for strdup(3) from libc",$/;"	s
description	deps/strdup/package.json	/^  "description": "drop-in replacement for strdup(3) from libc",$/;"	s
description	deps/substr/package.json	/^  "description": "Get a substring of a string",$/;"	s
description	deps/tempdir/package.json	/^  "description": "implementation of Python's tempfile.tempdir",$/;"	s
description	deps/tinydir/package.json	/^  "description": "Lightweight, portable and easy to integrate C directory and file reader",$/;"	s
description	deps/trim/package.json	/^  "description": "String trim utility",$/;"	s
description	deps/which/clib.json	/^  "description": "Locate executable via PATH or given string",$/;"	s
description	deps/which/package.json	/^  "description": "Locate executable via PATH or given string",$/;"	s
description	deps/wiki-registry/package.json	/^  "description": "Turn a GitHub Wiki page into a package registry",$/;"	s
description	deps/wiki-registry/wiki-registry.h	/^  char *description;$/;"	m	struct:__anon5d71bd190108	typeref:typename:char *
description	deps/wildcardcmp/clib.json	/^  "description": "simple wildcard string comparison",$/;"	s
description	deps/wildcardcmp/package.json	/^  "description": "simple wildcard string comparison",$/;"	s
description	src/common/clib-package.h	/^  char *description;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
destroy_node	deps/gumbo-parser/parser.c	/^static void destroy_node(GumboParser* parser, GumboNode* node) {$/;"	f	typeref:typename:void	file:
dev	src/clib-build.c	/^  int dev;$/;"	m	struct:options	typeref:typename:int	file:
dev	src/clib-configure.c	/^  int dev;$/;"	m	struct:options	typeref:typename:int	file:
dev	src/clib-install.c	/^  int dev;$/;"	m	struct:options	typeref:typename:int	file:
dev	src/clib-update.c	/^  int dev;$/;"	m	struct:options	typeref:typename:int	file:
development	clib.json	/^  "development": {$/;"	o
development	deps/copy/clib.json	/^  "development": {$/;"	o
development	deps/copy/package.json	/^  "development": {$/;"	o
development	deps/debug/package.json	/^  "development": {$/;"	o
development	deps/gumbo-get-element-by-id/package.json	/^  "development": {$/;"	o
development	deps/gumbo-get-elements-by-tag-name/package.json	/^  "development": {$/;"	o
development	deps/gumbo-text-content/package.json	/^  "development": {$/;"	o
development	deps/list/package.json	/^  "development": {$/;"	o
development	deps/occurrences/package.json	/^  "development": {$/;"	o
development	deps/parse-repo/package.json	/^  "development": {$/;"	o
development	deps/str-replace/package.json	/^  "development": {$/;"	o
development	deps/substr/package.json	/^  "development": {$/;"	o
development	deps/tempdir/package.json	/^  "development": {$/;"	o
development	deps/trim/package.json	/^  "development": {$/;"	o
development	deps/which/clib.json	/^  "development": {$/;"	o
development	deps/which/package.json	/^  "development": {$/;"	o
development	src/common/clib-package.h	/^  list_t *development;$/;"	m	struct:__anon9e68895d0208	typeref:typename:list_t *
dir	src/clib-build.c	/^  const char *dir;$/;"	m	struct:clib_package_thread	typeref:typename:const char *	file:
dir	src/clib-build.c	/^  const char *dir;$/;"	m	struct:options	typeref:typename:const char *	file:
dir	src/clib-configure.c	/^  const char *dir;$/;"	m	struct:clib_package_thread	typeref:typename:const char *	file:
dir	src/clib-configure.c	/^  const char *dir;$/;"	m	struct:options	typeref:typename:const char *	file:
dir	src/clib-install.c	/^  const char *dir;$/;"	m	struct:options	typeref:typename:const char *	file:
dir	src/clib-update.c	/^  const char *dir;$/;"	m	struct:options	typeref:typename:const char *	file:
dir	src/clib-upgrade.c	/^  char *dir;$/;"	m	struct:options	typeref:typename:char *	file:
dir	src/common/clib-package.c	/^  const char *dir;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:const char *	file:
direction	deps/list/list.h	/^  list_direction_t direction;$/;"	m	struct:__anonf0edcb3d0308	typeref:typename:list_direction_t
directories	deps/gumbo-parser/package.json	/^  "directories": {$/;"	o
dispatch_table	deps/gumbo-parser/tokenizer.c	/^static GumboLexerStateFunction dispatch_table[] = {$/;"	v	typeref:typename:GumboLexerStateFunction[]	file:
display_package	src/clib-search.c	/^static void display_package(const wiki_package_t *pkg,$/;"	f	typeref:typename:void	file:
doc_extract_bin	scripts/ccan2clib.py	/^doc_extract_bin = 'tools\/doc_extract'$/;"	v
doc_sections	scripts/ccan2clib.py	/^doc_sections = [$/;"	v
doc_type	deps/gumbo-parser/tokenizer.h	/^    GumboTokenDocType doc_type;$/;"	m	union:GumboInternalToken::__anonb159a4d4010a	typeref:typename:GumboTokenDocType
doc_type_quirks_mode	deps/gumbo-parser/gumbo.h	/^  GumboQuirksModeEnum doc_type_quirks_mode;$/;"	m	struct:__anonc68e32330b08	typeref:typename:GumboQuirksModeEnum
doc_type_state_init	deps/gumbo-parser/tokenizer.c	/^static void doc_type_state_init(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
doctype_matches	deps/gumbo-parser/parser.c	/^static bool doctype_matches($/;"	f	typeref:typename:bool	file:
document	deps/gumbo-parser/gumbo.h	/^    GumboDocument document;      \/\/ For GUMBO_NODE_DOCUMENT.$/;"	m	union:GumboInternalNode::__anonc68e32330e0a	typeref:typename:GumboDocument
document	deps/gumbo-parser/gumbo.h	/^  GumboNode* document;$/;"	m	struct:GumboInternalOutput	typeref:typename:GumboNode *
duplicate_attr	deps/gumbo-parser/error.h	/^    GumboDuplicateAttrError duplicate_attr;$/;"	m	union:GumboInternalError::__anon25fbe703030a	typeref:typename:GumboDuplicateAttrError
element	deps/gumbo-parser/gumbo.h	/^    GumboElement element;        \/\/ For GUMBO_NODE_ELEMENT.$/;"	m	union:GumboInternalNode::__anonc68e32330e0a	typeref:typename:GumboElement
emit_char	deps/gumbo-parser/tokenizer.c	/^static void emit_char(GumboParser* parser, int c, GumboToken* output) {$/;"	f	typeref:typename:void	file:
emit_char_ref	deps/gumbo-parser/tokenizer.c	/^static StateResult emit_char_ref($/;"	f	typeref:typename:StateResult	file:
emit_comment	deps/gumbo-parser/tokenizer.c	/^static StateResult emit_comment(GumboParser* parser, GumboToken* output) {$/;"	f	typeref:typename:StateResult	file:
emit_current_char	deps/gumbo-parser/tokenizer.c	/^static bool emit_current_char(GumboParser* parser, GumboToken* output) {$/;"	f	typeref:typename:bool	file:
emit_current_tag	deps/gumbo-parser/tokenizer.c	/^static StateResult emit_current_tag(GumboParser* parser, GumboToken* output) {$/;"	f	typeref:typename:StateResult	file:
emit_doctype	deps/gumbo-parser/tokenizer.c	/^static void emit_doctype(GumboParser* parser, GumboToken* output) {$/;"	f	typeref:typename:void	file:
emit_eof	deps/gumbo-parser/tokenizer.c	/^static StateResult emit_eof(GumboParser* parser, GumboToken* output) {$/;"	f	typeref:typename:StateResult	file:
emit_replacement_char	deps/gumbo-parser/tokenizer.c	/^static StateResult emit_replacement_char($/;"	f	typeref:typename:StateResult	file:
emit_temporary_buffer	deps/gumbo-parser/tokenizer.c	/^static bool emit_temporary_buffer($/;"	f	typeref:typename:bool	file:
enabled	deps/debug/debug.h	/^  int enabled;$/;"	m	struct:__anon5a8922b30108	typeref:typename:int
end_pos	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition end_pos;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboSourcePosition
end_tag	deps/gumbo-parser/tokenizer.h	/^    GumboTag end_tag;$/;"	m	union:GumboInternalToken::__anonb159a4d4010a	typeref:typename:GumboTag
enlarge_vector_if_full	deps/gumbo-parser/vector.c	/^static void enlarge_vector_if_full($/;"	f	typeref:typename:void	file:
ensure_lowercase	deps/gumbo-parser/tokenizer.c	/^static int ensure_lowercase(int c) {$/;"	f	typeref:typename:int	file:
env_vars	deps/tempdir/tempdir.c	/^static const char *env_vars[] = {$/;"	v	typeref:typename:const char * []	file:
error	deps/commander/commander.c	/^error(char *msg) {$/;"	f	typeref:typename:void	file:
errors	deps/gumbo-parser/gumbo.h	/^  GumboVector \/* GumboError *\/ errors;$/;"	m	struct:GumboInternalOutput	typeref:typename:GumboVector
example	test/cache/Makefile	/^example: example.o $(OBJS)$/;"	t
example	test/package/Makefile	/^example: example.o $(OBJS)$/;"	t
expiration	src/common/clib-cache.c	/^static time_t expiration;$/;"	v	typeref:typename:time_t	file:
extension	deps/tinydir/tinydir.h	/^	_tinydir_char_t *extension;$/;"	m	struct:tinydir_file	typeref:typename:_tinydir_char_t *
fetch_package_file	src/common/clib-package.c	/^static int fetch_package_file(clib_package_t *pkg, const char *dir, char *file,$/;"	f	typeref:typename:int	file:
fetch_package_file_thread	src/common/clib-package.c	/^static void *fetch_package_file_thread(void *arg) {$/;"	f	typeref:typename:void *	file:
fetch_package_file_thread_data	src/common/clib-package.c	/^struct fetch_package_file_thread_data {$/;"	s	file:
fetch_package_file_thread_data_t	src/common/clib-package.c	/^typedef struct fetch_package_file_thread_data fetch_package_file_thread_data_t;$/;"	t	typeref:struct:fetch_package_file_thread_data	file:
fetch_package_file_work	src/common/clib-package.c	/^static int fetch_package_file_work(clib_package_t *pkg, const char *dir,$/;"	f	typeref:typename:int	file:
file	src/common/clib-package.c	/^  char *file;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:char *	file:
filename	src/common/clib-package.h	/^  char *filename; \/\/ `package.json` or `clib.json`$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
find_basepath	src/clib-init.c	/^static char *find_basepath() {$/;"	f	typeref:typename:char *	file:
find_last_anchor_index	deps/gumbo-parser/parser.c	/^static bool find_last_anchor_index(GumboParser* parser, int* anchor_index) {$/;"	f	typeref:typename:bool	file:
find_last_newline	deps/gumbo-parser/error.c	/^static const char* find_last_newline($/;"	f	typeref:typename:const char *	file:
find_named_char_ref	deps/gumbo-parser/char_ref.c	/^static const NamedCharRef* find_named_char_ref(Utf8Iterator* input) {$/;"	f	typeref:typename:const NamedCharRef *	file:
find_next_newline	deps/gumbo-parser/error.c	/^static const char* find_next_newline($/;"	f	typeref:typename:const char *	file:
finish_attribute_name	deps/gumbo-parser/tokenizer.c	/^static bool finish_attribute_name(GumboParser* parser) {$/;"	f	typeref:typename:bool	file:
finish_attribute_value	deps/gumbo-parser/tokenizer.c	/^static void finish_attribute_value(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
finish_doctype_public_id	deps/gumbo-parser/tokenizer.c	/^static void finish_doctype_public_id(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
finish_doctype_system_id	deps/gumbo-parser/tokenizer.c	/^static void finish_doctype_system_id(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
finish_parsing	deps/gumbo-parser/parser.c	/^static void finish_parsing(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
finish_tag_name	deps/gumbo-parser/tokenizer.c	/^static void finish_tag_name(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
finish_temporary_buffer	deps/gumbo-parser/tokenizer.c	/^static void finish_temporary_buffer(GumboParser* parser, const char** output) {$/;"	f	typeref:typename:void	file:
finish_token	deps/gumbo-parser/tokenizer.c	/^static void finish_token(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:void	file:
first	deps/gumbo-parser/char_ref.h	/^  int first;$/;"	m	struct:__anona0e2c4930108	typeref:typename:int
flags	src/clib-configure.c	/^  int flags;$/;"	m	struct:options	typeref:typename:int	file:
flags	src/common/clib-package.h	/^  char *flags;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
fmt	Makefile	/^fmt:$/;"	t
force	src/clib-build.c	/^  int force;$/;"	m	struct:options	typeref:typename:int	file:
force	src/clib-configure.c	/^  int force;$/;"	m	struct:options	typeref:typename:int	file:
force	src/clib-install.c	/^  int force;$/;"	m	struct:options	typeref:typename:int	file:
force	src/clib-upgrade.c	/^  int force;$/;"	m	struct:options	typeref:typename:int	file:
force	src/common/clib-package.h	/^  int force;$/;"	m	struct:__anon9e68895d0308	typeref:typename:int
force_quirks	deps/gumbo-parser/tokenizer.h	/^  bool force_quirks;$/;"	m	struct:GumboInternalTokenDocType	typeref:typename:bool
format	src/clib.c	/^#define format(/;"	d	file:
format_and_restage_file	scripts/pre-commit-hook.sh	/^function format_and_restage_file {$/;"	f
foster_parent_element	deps/gumbo-parser/parser.c	/^static void foster_parent_element(GumboParser* parser, GumboNode* node) {$/;"	f	typeref:typename:void	file:
free	deps/list/list.h	/^  void (*free)(void *val);$/;"	m	struct:__anonf0edcb3d0208	typeref:typename:void (*)(void * val)
free_wrapper	deps/gumbo-parser/parser.c	/^static void free_wrapper(void* unused, void* ptr) {$/;"	f	typeref:typename:void	file:
from	deps/gumbo-parser/parser.c	/^  const GumboStringPiece from;$/;"	m	struct:_ReplacementEntry	typeref:typename:const GumboStringPiece	file:
from	deps/gumbo-parser/parser.c	/^  const char* from;$/;"	m	struct:_NamespacedAttributeReplacement	typeref:typename:const char *	file:
from_char	deps/gumbo-parser/char_ref.c	/^  int from_char;$/;"	m	struct:__anona0e2c48e0208	typeref:typename:int	file:
fs	scripts/update-clib-json	/^const fs = require('fs')$/;"	C
fs_chown	deps/fs/fs.c	/^fs_chown (const char *path, int uid, int gid) {$/;"	f	typeref:typename:int
fs_close	deps/fs/fs.c	/^fs_close (FILE *file) {$/;"	f	typeref:typename:int
fs_error	deps/fs/fs.c	/^fs_error (const char *prefix) {$/;"	f	typeref:typename:void
fs_exists	deps/fs/fs.c	/^fs_exists (const char *path) {$/;"	f	typeref:typename:int
fs_fchown	deps/fs/fs.c	/^fs_fchown (FILE *file, int uid, int gid) {$/;"	f	typeref:typename:int
fs_fnread	deps/fs/fs.c	/^fs_fnread (FILE *file, int len) {$/;"	f	typeref:typename:char *
fs_fnwrite	deps/fs/fs.c	/^fs_fnwrite (FILE *file, const char *buffer, int len) {$/;"	f	typeref:typename:int
fs_fread	deps/fs/fs.c	/^fs_fread (FILE *file) {$/;"	f	typeref:typename:char *
fs_fsize	deps/fs/fs.c	/^fs_fsize (FILE *file) {$/;"	f	typeref:typename:size_t
fs_fstat	deps/fs/fs.c	/^fs_fstat (FILE *file) {$/;"	f	typeref:typename:fs_stats *
fs_ftruncate	deps/fs/fs.c	/^fs_ftruncate (FILE *file, int len) {$/;"	f	typeref:typename:int
fs_fwrite	deps/fs/fs.c	/^fs_fwrite (FILE *file, const char *buffer) {$/;"	f	typeref:typename:int
fs_lchown	deps/fs/fs.c	/^fs_lchown (const char *path, int uid, int gid) {$/;"	f	typeref:typename:int
fs_lstat	deps/fs/fs.c	/^fs_lstat (const char *path) {$/;"	f	typeref:typename:fs_stats *
fs_mkdir	deps/fs/fs.c	/^fs_mkdir (const char *path, int mode) {$/;"	f	typeref:typename:int
fs_nread	deps/fs/fs.c	/^fs_nread (const char *path, int len) {$/;"	f	typeref:typename:char *
fs_nwrite	deps/fs/fs.c	/^fs_nwrite (const char *path, const char *buffer, int len) {$/;"	f	typeref:typename:int
fs_open	deps/fs/fs.c	/^fs_open (const char *path, const char *flags) {$/;"	f	typeref:typename:FILE *
fs_read	deps/fs/fs.c	/^fs_read (const char *path) {$/;"	f	typeref:typename:char *
fs_rename	deps/fs/fs.c	/^fs_rename (const char *from, const char *to) {$/;"	f	typeref:typename:int
fs_rmdir	deps/fs/fs.c	/^fs_rmdir (const char *path) {$/;"	f	typeref:typename:int
fs_size	deps/fs/fs.c	/^fs_size (const char *path) {$/;"	f	typeref:typename:size_t
fs_stat	deps/fs/fs.c	/^fs_stat (const char *path) {$/;"	f	typeref:typename:fs_stats *
fs_stats	deps/fs/fs.h	/^typedef struct stat fs_stats;$/;"	t	typeref:struct:stat
fs_truncate	deps/fs/fs.c	/^fs_truncate (const char *path, int len) {$/;"	f	typeref:typename:int
fs_write	deps/fs/fs.c	/^fs_write (const char *path, const char *buffer) {$/;"	f	typeref:typename:int
generate_implied_end_tags	deps/gumbo-parser/parser.c	/^static void generate_implied_end_tags(GumboParser* parser, GumboTag exception) {$/;"	f	typeref:typename:void	file:
get_appropriate_insertion_mode	deps/gumbo-parser/parser.c	/^static GumboInsertionMode get_appropriate_insertion_mode($/;"	f	typeref:typename:GumboInsertionMode	file:
get_char_token_type	deps/gumbo-parser/tokenizer.c	/^static GumboTokenType get_char_token_type(int c) {$/;"	f	typeref:typename:GumboTokenType	file:
get_current_node	deps/gumbo-parser/parser.c	/^static GumboNode* get_current_node(GumboParser* parser) {$/;"	f	typeref:typename:GumboNode *	file:
get_current_template_insertion_mode	deps/gumbo-parser/parser.c	/^static GumboInsertionMode get_current_template_insertion_mode($/;"	f	typeref:typename:GumboInsertionMode	file:
get_dependencies	scripts/ccan2clib.py	/^def get_dependencies(module):$/;"	f
get_document_node	deps/gumbo-parser/parser.c	/^static GumboNode* get_document_node(GumboParser* parser) {$/;"	f	typeref:typename:GumboNode *	file:
get_quoted_string	deps/parson/parson.c	/^static char * get_quoted_string(const char **string) {$/;"	f	typeref:typename:char *	file:
get_source_path	scripts/ccan2clib.py	/^def get_source_path(module):$/;"	f
get_src	scripts/ccan2clib.py	/^def get_src(module):$/;"	f
get_summary	scripts/ccan2clib.py	/^def get_summary(module):$/;"	f
get_text_nodes	deps/gumbo-text-content/gumbo-text-content.c	/^get_text_nodes(GumboNode *root) {$/;"	f	typeref:typename:text_nodes_t *	file:
getcwd	src/clib-build.c	/^#define getcwd /;"	d	file:
getcwd	src/clib-configure.c	/^#define getcwd /;"	d	file:
getinput	src/clib-init.c	/^static void getinput(char *buffer, size_t s) {$/;"	f	typeref:typename:void	file:
gettempdir	deps/tempdir/tempdir.c	/^gettempdir(void) {$/;"	f	typeref:typename:char *
global	src/clib-build.c	/^  int global;$/;"	m	struct:options	typeref:typename:int	file:
global	src/clib-configure.c	/^  int global;$/;"	m	struct:options	typeref:typename:int	file:
global	src/clib-install.c	/^  int global;$/;"	m	struct:options	typeref:typename:int	file:
global	src/common/clib-package.h	/^  int global;$/;"	m	struct:__anon9e68895d0308	typeref:typename:int
gumbo_add_error	deps/gumbo-parser/error.c	/^GumboError* gumbo_add_error(GumboParser* parser) {$/;"	f	typeref:typename:GumboError *
gumbo_caret_diagnostic_to_string	deps/gumbo-parser/error.c	/^void gumbo_caret_diagnostic_to_string($/;"	f	typeref:typename:void
gumbo_copy_stringz	deps/gumbo-parser/util.c	/^char* gumbo_copy_stringz(GumboParser* parser, const char* str) {$/;"	f	typeref:typename:char *
gumbo_debug	deps/gumbo-parser/util.c	/^void gumbo_debug(const char* format, ...) {$/;"	f	typeref:typename:void
gumbo_destroy_attribute	deps/gumbo-parser/attribute.c	/^void gumbo_destroy_attribute($/;"	f	typeref:typename:void
gumbo_destroy_errors	deps/gumbo-parser/error.c	/^void gumbo_destroy_errors(GumboParser* parser) {$/;"	f	typeref:typename:void
gumbo_destroy_node	deps/gumbo-parser/parser.c	/^void gumbo_destroy_node(GumboOptions* options, GumboNode* node) {$/;"	f	typeref:typename:void
gumbo_destroy_output	deps/gumbo-parser/parser.c	/^void gumbo_destroy_output(const GumboOptions* options, GumboOutput* output) {$/;"	f	typeref:typename:void
gumbo_error_destroy	deps/gumbo-parser/error.c	/^void gumbo_error_destroy(GumboParser* parser, GumboError* error) {$/;"	f	typeref:typename:void
gumbo_error_to_string	deps/gumbo-parser/error.c	/^void gumbo_error_to_string($/;"	f	typeref:typename:void
gumbo_get_attribute	deps/gumbo-parser/attribute.c	/^GumboAttribute* gumbo_get_attribute($/;"	f	typeref:typename:GumboAttribute *
gumbo_get_element_by_id	deps/gumbo-get-element-by-id/get-element-by-id.c	/^gumbo_get_element_by_id(const char *id, GumboNode *document) {$/;"	f	typeref:typename:GumboNode *
gumbo_get_elements_by_tag_name	deps/gumbo-get-elements-by-tag-name/get-elements-by-tag-name.c	/^gumbo_get_elements_by_tag_name(const char *tag_name, GumboNode *root) {$/;"	f	typeref:typename:list_t *
gumbo_init_errors	deps/gumbo-parser/error.c	/^void gumbo_init_errors(GumboParser* parser) {$/;"	f	typeref:typename:void
gumbo_lex	deps/gumbo-parser/tokenizer.c	/^bool gumbo_lex(GumboParser* parser, GumboToken* output) {$/;"	f	typeref:typename:bool
gumbo_normalize_svg_tagname	deps/gumbo-parser/parser.c	/^const char* gumbo_normalize_svg_tagname(const GumboStringPiece* tag) {$/;"	f	typeref:typename:const char *
gumbo_normalized_tagname	deps/gumbo-parser/tag.c	/^const char* gumbo_normalized_tagname(GumboTag tag) {$/;"	f	typeref:typename:const char *
gumbo_parse	deps/gumbo-parser/parser.c	/^GumboOutput* gumbo_parse(const char* buffer) {$/;"	f	typeref:typename:GumboOutput *
gumbo_parse_with_options	deps/gumbo-parser/parser.c	/^GumboOutput* gumbo_parse_with_options($/;"	f	typeref:typename:GumboOutput *
gumbo_parser_allocate	deps/gumbo-parser/util.c	/^void* gumbo_parser_allocate(GumboParser* parser, size_t num_bytes) {$/;"	f	typeref:typename:void *
gumbo_parser_deallocate	deps/gumbo-parser/util.c	/^void gumbo_parser_deallocate(GumboParser* parser, void* ptr) {$/;"	f	typeref:typename:void
gumbo_print_caret_diagnostic	deps/gumbo-parser/error.c	/^void gumbo_print_caret_diagnostic($/;"	f	typeref:typename:void
gumbo_string_buffer_append_codepoint	deps/gumbo-parser/string_buffer.c	/^void gumbo_string_buffer_append_codepoint($/;"	f	typeref:typename:void
gumbo_string_buffer_append_string	deps/gumbo-parser/string_buffer.c	/^void gumbo_string_buffer_append_string($/;"	f	typeref:typename:void
gumbo_string_buffer_destroy	deps/gumbo-parser/string_buffer.c	/^void gumbo_string_buffer_destroy($/;"	f	typeref:typename:void
gumbo_string_buffer_init	deps/gumbo-parser/string_buffer.c	/^void gumbo_string_buffer_init($/;"	f	typeref:typename:void
gumbo_string_buffer_reserve	deps/gumbo-parser/string_buffer.c	/^void gumbo_string_buffer_reserve($/;"	f	typeref:typename:void
gumbo_string_buffer_to_string	deps/gumbo-parser/string_buffer.c	/^char* gumbo_string_buffer_to_string($/;"	f	typeref:typename:char *
gumbo_string_copy	deps/gumbo-parser/string_piece.c	/^void gumbo_string_copy($/;"	f	typeref:typename:void
gumbo_string_equals	deps/gumbo-parser/string_piece.c	/^bool gumbo_string_equals($/;"	f	typeref:typename:bool
gumbo_string_equals_ignore_case	deps/gumbo-parser/string_piece.c	/^bool gumbo_string_equals_ignore_case($/;"	f	typeref:typename:bool
gumbo_tag_enum	deps/gumbo-parser/tag.c	/^GumboTag gumbo_tag_enum(const char* tagname) {$/;"	f	typeref:typename:GumboTag
gumbo_tag_from_original_text	deps/gumbo-parser/tag.c	/^void gumbo_tag_from_original_text(GumboStringPiece* text) {$/;"	f	typeref:typename:void
gumbo_text_content	deps/gumbo-text-content/gumbo-text-content.c	/^gumbo_text_content(GumboNode *node) {$/;"	f	typeref:typename:char *
gumbo_token_destroy	deps/gumbo-parser/tokenizer.c	/^void gumbo_token_destroy(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:void
gumbo_tokenizer_set_is_current_node_foreign	deps/gumbo-parser/tokenizer.c	/^void gumbo_tokenizer_set_is_current_node_foreign($/;"	f	typeref:typename:void
gumbo_tokenizer_set_state	deps/gumbo-parser/tokenizer.c	/^void gumbo_tokenizer_set_state(GumboParser* parser, GumboTokenizerEnum state) {$/;"	f	typeref:typename:void
gumbo_tokenizer_state_destroy	deps/gumbo-parser/tokenizer.c	/^void gumbo_tokenizer_state_destroy(GumboParser* parser) {$/;"	f	typeref:typename:void
gumbo_tokenizer_state_init	deps/gumbo-parser/tokenizer.c	/^void gumbo_tokenizer_state_init($/;"	f	typeref:typename:void
gumbo_vector_add	deps/gumbo-parser/vector.c	/^void gumbo_vector_add($/;"	f	typeref:typename:void
gumbo_vector_destroy	deps/gumbo-parser/vector.c	/^void gumbo_vector_destroy(struct GumboInternalParser* parser, GumboVector* vector) {$/;"	f	typeref:typename:void
gumbo_vector_index_of	deps/gumbo-parser/vector.c	/^int gumbo_vector_index_of(GumboVector* vector, void* element) {$/;"	f	typeref:typename:int
gumbo_vector_init	deps/gumbo-parser/vector.c	/^void gumbo_vector_init($/;"	f	typeref:typename:void
gumbo_vector_insert_at	deps/gumbo-parser/vector.c	/^void gumbo_vector_insert_at($/;"	f	typeref:typename:void
gumbo_vector_pop	deps/gumbo-parser/vector.c	/^void* gumbo_vector_pop($/;"	f	typeref:typename:void *
gumbo_vector_remove	deps/gumbo-parser/vector.c	/^void gumbo_vector_remove($/;"	f	typeref:typename:void
gumbo_vector_remove_at	deps/gumbo-parser/vector.c	/^void* gumbo_vector_remove_at($/;"	f	typeref:typename:void *
gypfile	deps/gumbo-parser/package.json	/^  "gypfile": true,$/;"	b
handle_after_after_body	deps/gumbo-parser/parser.c	/^static bool handle_after_after_body(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_after_after_frameset	deps/gumbo-parser/parser.c	/^static bool handle_after_after_frameset($/;"	f	typeref:typename:bool	file:
handle_after_attr_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_attr_name_state($/;"	f	typeref:typename:StateResult	file:
handle_after_attr_value_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_attr_value_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_after_body	deps/gumbo-parser/parser.c	/^static bool handle_after_body(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_after_doctype_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_doctype_name_state($/;"	f	typeref:typename:StateResult	file:
handle_after_doctype_public_id_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_doctype_public_id_state($/;"	f	typeref:typename:StateResult	file:
handle_after_doctype_public_keyword_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_doctype_public_keyword_state($/;"	f	typeref:typename:StateResult	file:
handle_after_doctype_system_id_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_doctype_system_id_state($/;"	f	typeref:typename:StateResult	file:
handle_after_doctype_system_keyword_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_after_doctype_system_keyword_state($/;"	f	typeref:typename:StateResult	file:
handle_after_frameset	deps/gumbo-parser/parser.c	/^static bool handle_after_frameset(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_after_head	deps/gumbo-parser/parser.c	/^static bool handle_after_head(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_attr_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_attr_name_state($/;"	f	typeref:typename:StateResult	file:
handle_attr_value_double_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_attr_value_double_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_attr_value_single_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_attr_value_single_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_attr_value_unquoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_attr_value_unquoted_state($/;"	f	typeref:typename:StateResult	file:
handle_before_attr_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_before_attr_name_state($/;"	f	typeref:typename:StateResult	file:
handle_before_attr_value_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_before_attr_value_state($/;"	f	typeref:typename:StateResult	file:
handle_before_doctype_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_before_doctype_name_state($/;"	f	typeref:typename:StateResult	file:
handle_before_doctype_public_id_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_before_doctype_public_id_state($/;"	f	typeref:typename:StateResult	file:
handle_before_doctype_system_id_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_before_doctype_system_id_state($/;"	f	typeref:typename:StateResult	file:
handle_before_head	deps/gumbo-parser/parser.c	/^static bool handle_before_head(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_before_html	deps/gumbo-parser/parser.c	/^static bool handle_before_html(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_between_doctype_public_system_id_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_between_doctype_public_system_id_state($/;"	f	typeref:typename:StateResult	file:
handle_bogus_comment_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_bogus_comment_state($/;"	f	typeref:typename:StateResult	file:
handle_bogus_doctype_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_bogus_doctype_state($/;"	f	typeref:typename:StateResult	file:
handle_cdata_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_cdata_state($/;"	f	typeref:typename:StateResult	file:
handle_char_ref_in_attr_value_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_char_ref_in_attr_value_state($/;"	f	typeref:typename:StateResult	file:
handle_char_ref_in_data_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_char_ref_in_data_state($/;"	f	typeref:typename:StateResult	file:
handle_char_ref_in_rcdata_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_char_ref_in_rcdata_state($/;"	f	typeref:typename:StateResult	file:
handle_comment_end_bang_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_comment_end_bang_state($/;"	f	typeref:typename:StateResult	file:
handle_comment_end_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_comment_end_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_comment_end_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_comment_end_state($/;"	f	typeref:typename:StateResult	file:
handle_comment_start_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_comment_start_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_comment_start_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_comment_start_state($/;"	f	typeref:typename:StateResult	file:
handle_comment_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_comment_state($/;"	f	typeref:typename:StateResult	file:
handle_data_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_data_state($/;"	f	typeref:typename:StateResult	file:
handle_doctype_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_doctype_name_state($/;"	f	typeref:typename:StateResult	file:
handle_doctype_public_id_double_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_doctype_public_id_double_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_doctype_public_id_single_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_doctype_public_id_single_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_doctype_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_doctype_state($/;"	f	typeref:typename:StateResult	file:
handle_doctype_system_id_double_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_doctype_system_id_double_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_doctype_system_id_single_quoted_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_doctype_system_id_single_quoted_state($/;"	f	typeref:typename:StateResult	file:
handle_end_tag_open_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_end_tag_open_state($/;"	f	typeref:typename:StateResult	file:
handle_html_content	deps/gumbo-parser/parser.c	/^static bool handle_html_content(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_body	deps/gumbo-parser/parser.c	/^static bool handle_in_body(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_caption	deps/gumbo-parser/parser.c	/^static bool handle_in_caption(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_cell	deps/gumbo-parser/parser.c	/^static bool handle_in_cell(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_column_group	deps/gumbo-parser/parser.c	/^static bool handle_in_column_group(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_foreign_content	deps/gumbo-parser/parser.c	/^static bool handle_in_foreign_content(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_frameset	deps/gumbo-parser/parser.c	/^static bool handle_in_frameset(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_head	deps/gumbo-parser/parser.c	/^static bool handle_in_head(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_head_noscript	deps/gumbo-parser/parser.c	/^static bool handle_in_head_noscript(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_row	deps/gumbo-parser/parser.c	/^static bool handle_in_row(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_select	deps/gumbo-parser/parser.c	/^static bool handle_in_select(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_select_in_table	deps/gumbo-parser/parser.c	/^static bool handle_in_select_in_table(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_table	deps/gumbo-parser/parser.c	/^static bool handle_in_table(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_table_body	deps/gumbo-parser/parser.c	/^static bool handle_in_table_body(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_table_text	deps/gumbo-parser/parser.c	/^static bool handle_in_table_text(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_in_template	deps/gumbo-parser/parser.c	/^static bool handle_in_template(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_initial	deps/gumbo-parser/parser.c	/^static bool handle_initial(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_markup_declaration_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_markup_declaration_state($/;"	f	typeref:typename:StateResult	file:
handle_parser_error	deps/gumbo-parser/error.c	/^static void handle_parser_error(GumboParser* parser,$/;"	f	typeref:typename:void	file:
handle_plaintext_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_plaintext_state($/;"	f	typeref:typename:StateResult	file:
handle_rawtext_end_tag_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rawtext_end_tag_name_state($/;"	f	typeref:typename:StateResult	file:
handle_rawtext_end_tag_open_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rawtext_end_tag_open_state($/;"	f	typeref:typename:StateResult	file:
handle_rawtext_lt_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rawtext_lt_state($/;"	f	typeref:typename:StateResult	file:
handle_rawtext_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rawtext_state($/;"	f	typeref:typename:StateResult	file:
handle_rcdata_end_tag_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rcdata_end_tag_name_state($/;"	f	typeref:typename:StateResult	file:
handle_rcdata_end_tag_open_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rcdata_end_tag_open_state($/;"	f	typeref:typename:StateResult	file:
handle_rcdata_lt_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rcdata_lt_state($/;"	f	typeref:typename:StateResult	file:
handle_rcdata_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_rcdata_state($/;"	f	typeref:typename:StateResult	file:
handle_script_double_escaped_dash_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_double_escaped_dash_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_script_double_escaped_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_double_escaped_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_script_double_escaped_end_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_double_escaped_end_state($/;"	f	typeref:typename:StateResult	file:
handle_script_double_escaped_lt_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_double_escaped_lt_state($/;"	f	typeref:typename:StateResult	file:
handle_script_double_escaped_start_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_double_escaped_start_state($/;"	f	typeref:typename:StateResult	file:
handle_script_double_escaped_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_double_escaped_state($/;"	f	typeref:typename:StateResult	file:
handle_script_end_tag_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_end_tag_name_state($/;"	f	typeref:typename:StateResult	file:
handle_script_end_tag_open_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_end_tag_open_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_dash_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_dash_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_end_tag_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_end_tag_name_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_end_tag_open_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_end_tag_open_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_lt_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_lt_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_start_dash_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_start_dash_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_start_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_start_state($/;"	f	typeref:typename:StateResult	file:
handle_script_escaped_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_escaped_state($/;"	f	typeref:typename:StateResult	file:
handle_script_lt_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_lt_state($/;"	f	typeref:typename:StateResult	file:
handle_script_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_script_state($/;"	f	typeref:typename:StateResult	file:
handle_self_closing_start_tag_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_self_closing_start_tag_state($/;"	f	typeref:typename:StateResult	file:
handle_tag_name_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_tag_name_state($/;"	f	typeref:typename:StateResult	file:
handle_tag_open_state	deps/gumbo-parser/tokenizer.c	/^static StateResult handle_tag_open_state($/;"	f	typeref:typename:StateResult	file:
handle_text	deps/gumbo-parser/parser.c	/^static bool handle_text(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
handle_token	deps/gumbo-parser/parser.c	/^static bool handle_token(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
has_an_element_in_button_scope	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_button_scope(GumboParser* parser, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
has_an_element_in_list_scope	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_list_scope(GumboParser* parser, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
has_an_element_in_scope	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_scope(GumboParser* parser, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
has_an_element_in_scope_with_tagname	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_scope_with_tagname(GumboParser* parser, ...) {$/;"	f	typeref:typename:bool	file:
has_an_element_in_select_scope	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_select_scope(GumboParser* parser, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
has_an_element_in_specific_scope	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_specific_scope($/;"	f	typeref:typename:bool	file:
has_an_element_in_table_scope	deps/gumbo-parser/parser.c	/^static bool has_an_element_in_table_scope(GumboParser* parser, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
has_doctype	deps/gumbo-parser/gumbo.h	/^  bool has_doctype;$/;"	m	struct:__anonc68e32330b08	typeref:typename:bool
has_next	deps/tinydir/tinydir.h	/^	int has_next;$/;"	m	struct:tinydir_dir	typeref:typename:int
has_node_in_scope	deps/gumbo-parser/parser.c	/^static bool has_node_in_scope(GumboParser* parser, const GumboNode* node) {$/;"	f	typeref:typename:bool	file:
has_public_identifier	deps/gumbo-parser/tokenizer.h	/^  bool has_public_identifier;$/;"	m	struct:GumboInternalTokenDocType	typeref:typename:bool
has_system_identifier	deps/gumbo-parser/tokenizer.h	/^  bool has_system_identifier;$/;"	m	struct:GumboInternalTokenDocType	typeref:typename:bool
hash	clib.json	/^    "hash": "0.0.1",$/;"	s	object:dependencies
hash_clear	deps/hash/hash.h	/^#define hash_clear(/;"	d
hash_del	deps/hash/hash.c	/^hash_del(hash_t *self, char *key) {$/;"	f	typeref:typename:void
hash_each	deps/hash/hash.h	/^#define hash_each(/;"	d
hash_each_key	deps/hash/hash.h	/^#define hash_each_key(/;"	d
hash_each_val	deps/hash/hash.h	/^#define hash_each_val(/;"	d
hash_free	deps/hash/hash.h	/^#define hash_free(/;"	d
hash_get	deps/hash/hash.c	/^hash_get(hash_t *self, char *key) {$/;"	f	typeref:typename:void *
hash_has	deps/hash/hash.c	/^hash_has(hash_t *self, char *key) {$/;"	f	typeref:typename:int
hash_new	deps/hash/hash.h	/^#define hash_new(/;"	d
hash_set	deps/hash/hash.c	/^hash_set(hash_t *self, char *key, void *val) {$/;"	f	typeref:typename:void
hash_size	deps/hash/hash.h	/^#define hash_size /;"	d
hash_t	deps/hash/hash.h	/^typedef khash_t(ptr) hash_t;$/;"	t
head	deps/list/list.h	/^  list_node_t *head;$/;"	m	struct:__anonf0edcb3d0208	typeref:typename:list_node_t *
href	deps/wiki-registry/wiki-registry.h	/^  char *href;$/;"	m	struct:__anon5d71bd190108	typeref:typename:char *
http_get	deps/http-get/http-get.c	/^http_get_response_t *http_get(const char *url) {$/;"	f	typeref:typename:http_get_response_t *
http_get_cb	deps/http-get/http-get.c	/^static size_t http_get_cb(void *contents, size_t size, size_t nmemb, void *userp) {$/;"	f	typeref:typename:size_t	file:
http_get_file	deps/http-get/http-get.c	/^int http_get_file(const char *url, const char *file) {$/;"	f	typeref:typename:int
http_get_file_cb	deps/http-get/http-get.c	/^static size_t http_get_file_cb(void *ptr, size_t size, size_t nmemb, void *stream) {$/;"	f	typeref:typename:size_t	file:
http_get_file_shared	deps/http-get/http-get.c	/^int http_get_file_shared(const char *url, const char *file, CURLSH *share) {$/;"	f	typeref:typename:int
http_get_free	deps/http-get/http-get.c	/^void http_get_free(http_get_response_t *res) {$/;"	f	typeref:typename:void
http_get_response_t	deps/http-get/http-get.h	/^} http_get_response_t;$/;"	t	typeref:struct:__anonf56bd07f0108
http_get_shared	deps/http-get/http-get.c	/^http_get_response_t *http_get_shared(const char *url, CURLSH *share) {$/;"	f	typeref:typename:http_get_response_t *
ignore_token	deps/gumbo-parser/parser.c	/^static void ignore_token(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
implicitly_close_tags	deps/gumbo-parser/parser.c	/^static bool implicitly_close_tags($/;"	f	typeref:typename:bool	file:
index_within_parent	deps/gumbo-parser/gumbo.h	/^  size_t index_within_parent;$/;"	m	struct:GumboInternalNode	typeref:typename:size_t
init_curl_share	src/common/clib-package.c	/^static void init_curl_share() {$/;"	f	typeref:typename:void	file:
initialize_tag_buffer	deps/gumbo-parser/tokenizer.c	/^static void initialize_tag_buffer(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
input_tag	deps/gumbo-parser/error.h	/^  GumboTag input_tag;$/;"	m	struct:GumboInternalParserError	typeref:typename:GumboTag
input_type	deps/gumbo-parser/error.h	/^  GumboTokenType input_type;$/;"	m	struct:GumboInternalParserError	typeref:typename:GumboTokenType
insert_element	deps/gumbo-parser/parser.c	/^static void insert_element(GumboParser* parser, GumboNode* node,$/;"	f	typeref:typename:void	file:
insert_element_from_token	deps/gumbo-parser/parser.c	/^static GumboNode* insert_element_from_token($/;"	f	typeref:typename:GumboNode *	file:
insert_element_of_tag_type	deps/gumbo-parser/parser.c	/^static GumboNode* insert_element_of_tag_type($/;"	f	typeref:typename:GumboNode *	file:
insert_foreign_element	deps/gumbo-parser/parser.c	/^static GumboNode* insert_foreign_element($/;"	f	typeref:typename:GumboNode *	file:
insert_node	deps/gumbo-parser/parser.c	/^static void insert_node($/;"	f	typeref:typename:void	file:
insert_text_token	deps/gumbo-parser/parser.c	/^static void insert_text_token(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:void	file:
install	Makefile	/^install: $(BINS)$/;"	t
install	clib.json	/^  "install": "make clean uninstall build install",$/;"	s
install	package.json	/^    "install": "clib install -fc $($npm_config_dev && echo '--dev')",$/;"	s	object:scripts
install	package.json	/^  "install": "make clean install",$/;"	s
install	src/common/clib-package.h	/^  char *install;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
install_local_packages	src/clib-install.c	/^static int install_local_packages() {$/;"	f	typeref:typename:int	file:
install_local_packages	src/clib-update.c	/^static int install_local_packages() {$/;"	f	typeref:typename:int	file:
install_local_packages_with_package_name	src/clib-install.c	/^static int install_local_packages_with_package_name(const char *file) {$/;"	f	typeref:typename:int	file:
install_local_packages_with_package_name	src/clib-update.c	/^static int install_local_packages_with_package_name(const char *file) {$/;"	f	typeref:typename:int	file:
install_package	src/clib-install.c	/^static int install_package(const char *slug) {$/;"	f	typeref:typename:int	file:
install_package	src/clib-update.c	/^static int install_package(const char *slug) {$/;"	f	typeref:typename:int	file:
install_package	src/clib-upgrade.c	/^static int install_package(const char *slug) {$/;"	f	typeref:typename:int	file:
install_packages	src/clib-install.c	/^static int install_packages(int n, char *pkgs[]) {$/;"	f	typeref:typename:int	file:
install_packages	src/clib-update.c	/^static int install_packages(int n, char *pkgs[]) {$/;"	f	typeref:typename:int	file:
install_packages	src/common/clib-package.c	/^static inline int install_packages(list_t *list, const char *dir, int verbose) {$/;"	f	typeref:typename:int	file:
is_alpha	deps/gumbo-parser/tokenizer.c	/^static bool is_alpha(int c) {$/;"	f	typeref:typename:bool	file:
is_appropriate_end_tag	deps/gumbo-parser/tokenizer.c	/^static bool is_appropriate_end_tag(GumboParser* parser) {$/;"	f	typeref:typename:bool	file:
is_decimal	deps/parson/parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	typeref:typename:int	file:
is_dir	deps/tinydir/tinydir.h	/^	int is_dir;$/;"	m	struct:tinydir_file	typeref:typename:int
is_directory	deps/tempdir/tempdir.c	/^is_directory(const char *path) {$/;"	f	typeref:typename:int	file:
is_dot_file	deps/copy/copy.c	/^#define is_dot_file(/;"	d	file:
is_expired	src/common/clib-cache.c	/^static int is_expired(char *cache) {$/;"	f	typeref:typename:int	file:
is_html_integration_point	deps/gumbo-parser/parser.c	/^static bool is_html_integration_point(const GumboNode* node) {$/;"	f	typeref:typename:bool	file:
is_in_static_list	deps/gumbo-parser/parser.c	/^static bool is_in_static_list($/;"	f	typeref:typename:bool	file:
is_legal_attribute_char_next	deps/gumbo-parser/char_ref.c	/^static bool is_legal_attribute_char_next(Utf8Iterator* input) {$/;"	f	typeref:typename:bool	file:
is_mathml_integration_point	deps/gumbo-parser/parser.c	/^static bool is_mathml_integration_point(const GumboNode* node) {$/;"	f	typeref:typename:bool	file:
is_open_element	deps/gumbo-parser/parser.c	/^static bool is_open_element(GumboParser* parser, const GumboNode* node) {$/;"	f	typeref:typename:bool	file:
is_reg	deps/tinydir/tinydir.h	/^	int is_reg;$/;"	m	struct:tinydir_file	typeref:typename:int
is_self_closing	deps/gumbo-parser/tokenizer.h	/^  bool is_self_closing;$/;"	m	struct:GumboInternalTokenStartTag	typeref:typename:bool
is_special_node	deps/gumbo-parser/parser.c	/^static bool is_special_node(const GumboNode* node) {$/;"	f	typeref:typename:bool	file:
is_utf16_hex	deps/parson/parson.c	/^static int is_utf16_hex(const unsigned char *s) {$/;"	f	typeref:typename:int	file:
is_valid_utf8	deps/parson/parson.c	/^static int is_valid_utf8(const char *string, size_t string_len) {$/;"	f	typeref:typename:int	file:
isty001/copy	clib.json	/^    "isty001\/copy": "0.0.0",$/;"	s	object:dependencies
it	deps/describe/describe.h	/^#define it(/;"	d
items	deps/parson/parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	typeref:typename:JSON_Value **	file:
jlcordeiro/minunit	deps/copy/clib.json	/^    "jlcordeiro\/minunit": "*",$/;"	s	object:development
jlcordeiro/minunit	deps/copy/package.json	/^    "jlcordeiro\/minunit": "*",$/;"	s	object:development
json	src/common/clib-package.h	/^  char *json;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
json_array	deps/parson/parson.c	/^JSON_Array * json_array  (const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Array *
json_array_add	deps/parson/parson.c	/^static JSON_Status json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status	file:
json_array_append_boolean	deps/parson/parson.c	/^JSON_Status json_array_append_boolean(JSON_Array *array, int boolean) {$/;"	f	typeref:typename:JSON_Status
json_array_append_null	deps/parson/parson.c	/^JSON_Status json_array_append_null(JSON_Array *array) {$/;"	f	typeref:typename:JSON_Status
json_array_append_number	deps/parson/parson.c	/^JSON_Status json_array_append_number(JSON_Array *array, double number) {$/;"	f	typeref:typename:JSON_Status
json_array_append_string	deps/parson/parson.c	/^JSON_Status json_array_append_string(JSON_Array *array, const char *string) {$/;"	f	typeref:typename:JSON_Status
json_array_append_value	deps/parson/parson.c	/^JSON_Status json_array_append_value(JSON_Array *array, JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status
json_array_clear	deps/parson/parson.c	/^JSON_Status json_array_clear(JSON_Array *array) {$/;"	f	typeref:typename:JSON_Status
json_array_free	deps/parson/parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	typeref:typename:void	file:
json_array_get_array	deps/parson/parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f	typeref:typename:JSON_Array *
json_array_get_boolean	deps/parson/parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f	typeref:typename:int
json_array_get_count	deps/parson/parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f	typeref:typename:size_t
json_array_get_number	deps/parson/parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f	typeref:typename:double
json_array_get_object	deps/parson/parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f	typeref:typename:JSON_Object *
json_array_get_string	deps/parson/parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f	typeref:typename:const char *
json_array_get_string_safe	src/common/clib-package.c	/^static inline char *json_array_get_string_safe(JSON_Array *array, int index) {$/;"	f	typeref:typename:char *	file:
json_array_get_value	deps/parson/parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f	typeref:typename:JSON_Value *
json_array_init	deps/parson/parson.c	/^static JSON_Array * json_array_init(void) {$/;"	f	typeref:typename:JSON_Array *	file:
json_array_remove	deps/parson/parson.c	/^JSON_Status json_array_remove(JSON_Array *array, size_t ix) {$/;"	f	typeref:typename:JSON_Status
json_array_replace_boolean	deps/parson/parson.c	/^JSON_Status json_array_replace_boolean(JSON_Array *array, size_t i, int boolean) {$/;"	f	typeref:typename:JSON_Status
json_array_replace_null	deps/parson/parson.c	/^JSON_Status json_array_replace_null(JSON_Array *array, size_t i) {$/;"	f	typeref:typename:JSON_Status
json_array_replace_number	deps/parson/parson.c	/^JSON_Status json_array_replace_number(JSON_Array *array, size_t i, double number) {$/;"	f	typeref:typename:JSON_Status
json_array_replace_string	deps/parson/parson.c	/^JSON_Status json_array_replace_string(JSON_Array *array, size_t i, const char* string) {$/;"	f	typeref:typename:JSON_Status
json_array_replace_value	deps/parson/parson.c	/^JSON_Status json_array_replace_value(JSON_Array *array, size_t ix, JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status
json_array_resize	deps/parson/parson.c	/^static JSON_Status json_array_resize(JSON_Array *array, size_t new_capacity) {$/;"	f	typeref:typename:JSON_Status	file:
json_array_t	deps/parson/parson.c	/^struct json_array_t {$/;"	s	file:
json_boolean	deps/parson/parson.c	/^int json_boolean(const JSON_Value *value) {$/;"	f	typeref:typename:int
json_cache_dir	src/common/clib-cache.c	/^static char json_cache_dir[BUFSIZ];$/;"	v	typeref:typename:char[]	file:
json_cache_path	src/common/clib-cache.c	/^static void json_cache_path(char *pkg_cache, char *author, char *name,$/;"	f	typeref:typename:void	file:
json_free_serialized_string	deps/parson/parson.c	/^void json_free_serialized_string(char *string) {$/;"	f	typeref:typename:void
json_number	deps/parson/parson.c	/^double json_number (const JSON_Value *value) {$/;"	f	typeref:typename:double
json_object	deps/parson/parson.c	/^JSON_Object * json_object (const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Object *
json_object_add	deps/parson/parson.c	/^static JSON_Status json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status	file:
json_object_clear	deps/parson/parson.c	/^JSON_Status json_object_clear(JSON_Object *object) {$/;"	f	typeref:typename:JSON_Status
json_object_dotget_array	deps/parson/parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Array *
json_object_dotget_boolean	deps/parson/parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:int
json_object_dotget_number	deps/parson/parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:double
json_object_dotget_object	deps/parson/parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Object *
json_object_dotget_string	deps/parson/parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:const char *
json_object_dotget_value	deps/parson/parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Value *
json_object_dotremove	deps/parson/parson.c	/^JSON_Status json_object_dotremove(JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Status
json_object_dotset_boolean	deps/parson/parson.c	/^JSON_Status json_object_dotset_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f	typeref:typename:JSON_Status
json_object_dotset_null	deps/parson/parson.c	/^JSON_Status json_object_dotset_null(JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Status
json_object_dotset_number	deps/parson/parson.c	/^JSON_Status json_object_dotset_number(JSON_Object *object, const char *name, double number) {$/;"	f	typeref:typename:JSON_Status
json_object_dotset_string	deps/parson/parson.c	/^JSON_Status json_object_dotset_string(JSON_Object *object, const char *name, const char *string)/;"	f	typeref:typename:JSON_Status
json_object_dotset_value	deps/parson/parson.c	/^JSON_Status json_object_dotset_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status
json_object_free	deps/parson/parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	typeref:typename:void	file:
json_object_get_array	deps/parson/parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Array *
json_object_get_boolean	deps/parson/parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:int
json_object_get_count	deps/parson/parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f	typeref:typename:size_t
json_object_get_name	deps/parson/parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f	typeref:typename:const char *
json_object_get_number	deps/parson/parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:double
json_object_get_object	deps/parson/parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Object *
json_object_get_string	deps/parson/parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:const char *
json_object_get_string_safe	src/common/clib-package.c	/^static inline char *json_object_get_string_safe(JSON_Object *obj,$/;"	f	typeref:typename:char *	file:
json_object_get_value	deps/parson/parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Value *
json_object_init	deps/parson/parson.c	/^static JSON_Object * json_object_init(void) {$/;"	f	typeref:typename:JSON_Object *	file:
json_object_nget_value	deps/parson/parson.c	/^static JSON_Value * json_object_nget_value(const JSON_Object *object, const char *name, size_t n/;"	f	typeref:typename:JSON_Value *	file:
json_object_remove	deps/parson/parson.c	/^JSON_Status json_object_remove(JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Status
json_object_resize	deps/parson/parson.c	/^static JSON_Status json_object_resize(JSON_Object *object, size_t new_capacity) {$/;"	f	typeref:typename:JSON_Status	file:
json_object_set_boolean	deps/parson/parson.c	/^JSON_Status json_object_set_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f	typeref:typename:JSON_Status
json_object_set_null	deps/parson/parson.c	/^JSON_Status json_object_set_null(JSON_Object *object, const char *name) {$/;"	f	typeref:typename:JSON_Status
json_object_set_number	deps/parson/parson.c	/^JSON_Status json_object_set_number(JSON_Object *object, const char *name, double number) {$/;"	f	typeref:typename:JSON_Status
json_object_set_string	deps/parson/parson.c	/^JSON_Status json_object_set_string(JSON_Object *object, const char *name, const char *string) {$/;"	f	typeref:typename:JSON_Status
json_object_set_value	deps/parson/parson.c	/^JSON_Status json_object_set_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status
json_object_t	deps/parson/parson.c	/^struct json_object_t {$/;"	s	file:
json_parse_file	deps/parson/parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f	typeref:typename:JSON_Value *
json_parse_file_with_comments	deps/parson/parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f	typeref:typename:JSON_Value *
json_parse_string	deps/parson/parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f	typeref:typename:JSON_Value *
json_parse_string_with_comments	deps/parson/parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f	typeref:typename:JSON_Value *
json_result_t	deps/parson/parson.h	/^enum json_result_t {$/;"	g
json_serialization_size	deps/parson/parson.c	/^size_t json_serialization_size(const JSON_Value *value) {$/;"	f	typeref:typename:size_t
json_serialization_size_pretty	deps/parson/parson.c	/^size_t json_serialization_size_pretty(const JSON_Value *value) {$/;"	f	typeref:typename:size_t
json_serialize_string	deps/parson/parson.c	/^static int json_serialize_string(const char *string, char *buf) {$/;"	f	typeref:typename:int	file:
json_serialize_to_buffer	deps/parson/parson.c	/^JSON_Status json_serialize_to_buffer(const JSON_Value *value, char *buf, size_t buf_size_in_byte/;"	f	typeref:typename:JSON_Status
json_serialize_to_buffer_pretty	deps/parson/parson.c	/^JSON_Status json_serialize_to_buffer_pretty(const JSON_Value *value, char *buf, size_t buf_size_/;"	f	typeref:typename:JSON_Status
json_serialize_to_buffer_r	deps/parson/parson.c	/^static int json_serialize_to_buffer_r(const JSON_Value *value, char *buf, int level, int is_pret/;"	f	typeref:typename:int	file:
json_serialize_to_file	deps/parson/parson.c	/^JSON_Status json_serialize_to_file(const JSON_Value *value, const char *filename) {$/;"	f	typeref:typename:JSON_Status
json_serialize_to_file_pretty	deps/parson/parson.c	/^JSON_Status json_serialize_to_file_pretty(const JSON_Value *value, const char *filename) {$/;"	f	typeref:typename:JSON_Status
json_serialize_to_string	deps/parson/parson.c	/^char * json_serialize_to_string(const JSON_Value *value) {$/;"	f	typeref:typename:char *
json_serialize_to_string_pretty	deps/parson/parson.c	/^char * json_serialize_to_string_pretty(const JSON_Value *value) {$/;"	f	typeref:typename:char *
json_set_allocation_functions	deps/parson/parson.c	/^void json_set_allocation_functions(JSON_Malloc_Function malloc_fun, JSON_Free_Function free_fun)/;"	f	typeref:typename:void
json_string	deps/parson/parson.c	/^const char * json_string (const JSON_Value *value) {$/;"	f	typeref:typename:const char *
json_type	deps/parson/parson.c	/^JSON_Value_Type json_type(const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Value_Type
json_validate	deps/parson/parson.c	/^JSON_Status json_validate(const JSON_Value *schema, const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Status
json_value_deep_copy	deps/parson/parson.c	/^JSON_Value * json_value_deep_copy(const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Value *
json_value_equals	deps/parson/parson.c	/^JSON_Status json_value_equals(const JSON_Value *a, const JSON_Value *b) {$/;"	f	typeref:typename:JSON_Status
json_value_free	deps/parson/parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f	typeref:typename:void
json_value_get_array	deps/parson/parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Array *
json_value_get_boolean	deps/parson/parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f	typeref:typename:int
json_value_get_number	deps/parson/parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f	typeref:typename:double
json_value_get_object	deps/parson/parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Object *
json_value_get_string	deps/parson/parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f	typeref:typename:const char *
json_value_get_type	deps/parson/parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f	typeref:typename:JSON_Value_Type
json_value_init_array	deps/parson/parson.c	/^JSON_Value * json_value_init_array(void) {$/;"	f	typeref:typename:JSON_Value *
json_value_init_boolean	deps/parson/parson.c	/^JSON_Value * json_value_init_boolean(int boolean) {$/;"	f	typeref:typename:JSON_Value *
json_value_init_null	deps/parson/parson.c	/^JSON_Value * json_value_init_null(void) {$/;"	f	typeref:typename:JSON_Value *
json_value_init_number	deps/parson/parson.c	/^JSON_Value * json_value_init_number(double number) {$/;"	f	typeref:typename:JSON_Value *
json_value_init_object	deps/parson/parson.c	/^JSON_Value * json_value_init_object(void) {$/;"	f	typeref:typename:JSON_Value *
json_value_init_string	deps/parson/parson.c	/^JSON_Value * json_value_init_string(const char *string) {$/;"	f	typeref:typename:JSON_Value *
json_value_init_string_no_copy	deps/parson/parson.c	/^static JSON_Value * json_value_init_string_no_copy(char *string) {$/;"	f	typeref:typename:JSON_Value *	file:
json_value_t	deps/parson/parson.c	/^struct json_value_t {$/;"	s	file:
json_value_type	deps/parson/parson.h	/^enum json_value_type {$/;"	g
json_value_value	deps/parson/parson.c	/^typedef union json_value_value {$/;"	u	file:
jwerle/fs.c	clib.json	/^    "jwerle\/fs.c": "0.2.0",$/;"	s	object:dependencies
jwerle/fs.c	deps/copy/clib.json	/^    "jwerle\/fs.c": "0.1.2"$/;"	s	object:dependencies
jwerle/fs.c	deps/copy/package.json	/^    "jwerle\/fs.c": "0.1.2"$/;"	s	object:dependencies
jwerle/fs.c	deps/tempdir/package.json	/^    "jwerle\/fs.c": "*"$/;"	s	object:development
kActiveFormattingScopeMarker	deps/gumbo-parser/parser.c	/^static const GumboNode kActiveFormattingScopeMarker;$/;"	v	typeref:typename:const GumboNode	file:
kCharReplacements	deps/gumbo-parser/char_ref.c	/^static const CharReplacement kCharReplacements[] = {$/;"	v	typeref:typename:const CharReplacement[]	file:
kDefaultStringBufferSize	deps/gumbo-parser/string_buffer.c	/^static const size_t kDefaultStringBufferSize = 10;$/;"	v	typeref:typename:const size_t	file:
kDoctypeHtml	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kDoctypeHtml = GUMBO_STRING("html");$/;"	v	typeref:typename:const GumboStringPiece	file:
kEndTag	deps/gumbo-parser/parser.c	/^static const bool kEndTag = false;$/;"	v	typeref:typename:const bool	file:
kForeignAttributeReplacements	deps/gumbo-parser/parser.c	/^static const NamespacedAttributeReplacement kForeignAttributeReplacements[] = {$/;"	v	typeref:typename:const NamespacedAttributeReplacement[]	file:
kGumboDefaultOptions	deps/gumbo-parser/parser.c	/^const GumboOptions kGumboDefaultOptions = {$/;"	v	typeref:typename:const GumboOptions
kGumboEmptySourcePosition	deps/gumbo-parser/util.c	/^const GumboSourcePosition kGumboEmptySourcePosition = { 0, 0, 0 };$/;"	v	typeref:typename:const GumboSourcePosition
kGumboEmptyString	deps/gumbo-parser/string_piece.c	/^const GumboStringPiece kGumboEmptyString = { NULL, 0 };$/;"	v	typeref:typename:const GumboStringPiece
kGumboEmptyVector	deps/gumbo-parser/vector.c	/^const GumboVector kGumboEmptyVector = { NULL, 0, 0 };$/;"	v	typeref:typename:const GumboVector
kGumboNoChar	deps/gumbo-parser/char_ref.c	/^const int kGumboNoChar = -1;$/;"	v	typeref:typename:const int
kGumboTagNames	deps/gumbo-parser/tag.c	/^const char* kGumboTagNames[] = {$/;"	v	typeref:typename:const char * []
kLegalXmlns	deps/gumbo-parser/parser.c	/^static const char* kLegalXmlns[] = {$/;"	v	typeref:typename:const char * []	file:
kLimitedQuirksPublicIdPrefixes	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kLimitedQuirksPublicIdPrefixes[] = {$/;"	v	typeref:typename:const GumboStringPiece[]	file:
kLimitedQuirksRequiresSystemIdPublicIdPrefixes	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kLimitedQuirksRequiresSystemIdPublicIdPrefixes[] = {$/;"	v	typeref:typename:const GumboStringPiece[]	file:
kMessageBufferSize	deps/gumbo-parser/error.c	/^static const size_t kMessageBufferSize = 256;$/;"	v	typeref:typename:const size_t	file:
kNamedEntities	deps/gumbo-parser/char_ref.c	/^static const NamedCharRef kNamedEntities[] = {$/;"	v	typeref:typename:const NamedCharRef[]	file:
kPublicIdHtml4_0	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kPublicIdHtml4_0 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kPublicIdHtml4_01	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kPublicIdHtml4_01 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kPublicIdXhtml1_0	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kPublicIdXhtml1_0 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kPublicIdXhtml1_1	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kPublicIdXhtml1_1 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kQuirksModePublicIdExactMatches	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kQuirksModePublicIdExactMatches[] = {$/;"	v	typeref:typename:const GumboStringPiece[]	file:
kQuirksModePublicIdPrefixes	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kQuirksModePublicIdPrefixes[] = {$/;"	v	typeref:typename:const GumboStringPiece[]	file:
kQuirksModeSystemIdExactMatches	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kQuirksModeSystemIdExactMatches[] = {$/;"	v	typeref:typename:const GumboStringPiece[]	file:
kScriptTag	deps/gumbo-parser/tokenizer.c	/^const GumboStringPiece kScriptTag = { "script", 6 };$/;"	v	typeref:typename:const GumboStringPiece
kStartTag	deps/gumbo-parser/parser.c	/^static const bool kStartTag = true;$/;"	v	typeref:typename:const bool	file:
kSvgAttributeReplacements	deps/gumbo-parser/parser.c	/^static const ReplacementEntry kSvgAttributeReplacements[] = {$/;"	v	typeref:typename:const ReplacementEntry[]	file:
kSvgTagReplacements	deps/gumbo-parser/parser.c	/^static const ReplacementEntry kSvgTagReplacements[] = {$/;"	v	typeref:typename:const ReplacementEntry[]	file:
kSystemIdHtml4	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kSystemIdHtml4 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kSystemIdLegacyCompat	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kSystemIdLegacyCompat = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kSystemIdRecHtml4_0	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kSystemIdRecHtml4_0 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kSystemIdXhtml1_1	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kSystemIdXhtml1_1 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kSystemIdXhtmlStrict1_1	deps/gumbo-parser/parser.c	/^static const GumboStringPiece kSystemIdXhtmlStrict1_1 = GUMBO_STRING($/;"	v	typeref:typename:const GumboStringPiece	file:
kTokenHandlers	deps/gumbo-parser/parser.c	/^static const TokenHandler kTokenHandlers[] = {$/;"	v	typeref:typename:const TokenHandler[]	file:
kUtf8ReplacementChar	deps/gumbo-parser/utf8.c	/^const int kUtf8ReplacementChar = 0xFFFD;$/;"	v	typeref:typename:const int
keywords	deps/asprintf/package.json	/^  "keywords": ["asprintf", "sprintf", "alloc", "string"],$/;"	a
keywords	deps/assertion-macros/package.json	/^  "keywords": [ "assert", "assertions" ],$/;"	a
keywords	deps/case/package.json	/^  "keywords": [$/;"	a
keywords	deps/commander/clib.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	a
keywords	deps/commander/package.json	/^  "keywords": ["cli", "command", "parser", "argv", "args", "options"],$/;"	a
keywords	deps/console-colors/package.json	/^  "keywords": [ "console", "color" ],$/;"	a
keywords	deps/copy/clib.json	/^  "keywords": [$/;"	a
keywords	deps/copy/package.json	/^  "keywords": [$/;"	a
keywords	deps/describe/package.json	/^  "keywords": [ "testing", "bdd", "assert", "describe" ],$/;"	a
keywords	deps/fs/clib.json	/^  "keywords": [$/;"	a
keywords	deps/fs/package.json	/^  "keywords": [$/;"	a
keywords	deps/gumbo-parser/package.json	/^  "keywords": [$/;"	a
keywords	deps/hash/clib.json	/^  "keywords": ["hash", "khash", "container"],$/;"	a
keywords	deps/hash/package.json	/^  "keywords": ["hash", "khash", "container"],$/;"	a
keywords	deps/http-get/clib.json	/^  "keywords": [$/;"	a
keywords	deps/list/package.json	/^  "keywords": ["list", "structure"],$/;"	a
keywords	deps/mkdirp/package.json	/^  "keywords": [$/;"	a
keywords	deps/occurrences/package.json	/^  "keywords": [ "string", "occurrences", "count" ],$/;"	a
keywords	deps/parse-repo/package.json	/^  "keywords": [ "parse", "GitHub", "repo" ],$/;"	a
keywords	deps/parson/clib.json	/^  "keywords": [ "json", "parser" ],$/;"	a
keywords	deps/parson/package.json	/^  "keywords": [ "json", "parser" ],$/;"	a
keywords	deps/path-join/package.json	/^  "keywords": [$/;"	a
keywords	deps/path-normalize/package.json	/^  "keywords": [$/;"	a
keywords	deps/rimraf/package.json	/^  "keywords": [ "rm", "rimraf", "unlink" ],$/;"	a
keywords	deps/str-concat/clib.json	/^  "keywords": [ "string", "concat" ],$/;"	a
keywords	deps/str-concat/package.json	/^  "keywords": [ "string", "concat" ],$/;"	a
keywords	deps/str-ends-with/package.json	/^  "keywords": [ "string" ],$/;"	a
keywords	deps/str-flatten/package.json	/^  "keywords": [ "string", "flatten", "join" ],$/;"	a
keywords	deps/str-replace/package.json	/^  "keywords": [ "string", "replace" ],$/;"	a
keywords	deps/str-starts-with/package.json	/^  "keywords": [ "string" ],$/;"	a
keywords	deps/strdup/clib.json	/^  "keywords": [ "string", "copy" ],$/;"	a
keywords	deps/strdup/package.json	/^  "keywords": [ "string", "copy" ],$/;"	a
keywords	deps/substr/package.json	/^  "keywords": [ "substr", "substring", "string" ],$/;"	a
keywords	deps/tempdir/package.json	/^  "keywords": ["temp", "tempdir"],$/;"	a
keywords	deps/tinydir/package.json	/^  "keywords": [$/;"	a
keywords	deps/trim/package.json	/^  "keywords": [$/;"	a
keywords	deps/which/clib.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	a
keywords	deps/which/package.json	/^  "keywords": ["lookup", "which", "locate", "find", "path", "bin", "executable"],$/;"	a
keywords	deps/wiki-registry/package.json	/^  "keywords": [ "registry", "github", "wiki" ],$/;"	a
keywords	deps/wildcardcmp/clib.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	a
keywords	deps/wildcardcmp/package.json	/^  "keywords": ["wildcard", "string", "comparison"],$/;"	a
kh_begin	deps/hash/khash.h	/^#define kh_begin(/;"	d
kh_clear	deps/hash/khash.h	/^#define kh_clear(/;"	d
kh_cstr_t	deps/hash/khash.h	/^typedef const char *kh_cstr_t;$/;"	t	typeref:typename:const char *
kh_del	deps/hash/khash.h	/^#define kh_del(/;"	d
kh_destroy	deps/hash/khash.h	/^#define kh_destroy(/;"	d
kh_end	deps/hash/khash.h	/^#define kh_end(/;"	d
kh_exist	deps/hash/khash.h	/^#define kh_exist(/;"	d
kh_get	deps/hash/khash.h	/^#define kh_get(/;"	d
kh_init	deps/hash/khash.h	/^#define kh_init(/;"	d
kh_int64_hash_equal	deps/hash/khash.h	/^#define kh_int64_hash_equal(/;"	d
kh_int64_hash_func	deps/hash/khash.h	/^#define kh_int64_hash_func(/;"	d
kh_int_hash_equal	deps/hash/khash.h	/^#define kh_int_hash_equal(/;"	d
kh_int_hash_func	deps/hash/khash.h	/^#define kh_int_hash_func(/;"	d
kh_key	deps/hash/khash.h	/^#define kh_key(/;"	d
kh_n_buckets	deps/hash/khash.h	/^#define kh_n_buckets(/;"	d
kh_put	deps/hash/khash.h	/^#define kh_put(/;"	d
kh_resize	deps/hash/khash.h	/^#define kh_resize(/;"	d
kh_size	deps/hash/khash.h	/^#define kh_size(/;"	d
kh_str_hash_equal	deps/hash/khash.h	/^#define kh_str_hash_equal(/;"	d
kh_str_hash_func	deps/hash/khash.h	/^#define kh_str_hash_func(/;"	d
kh_val	deps/hash/khash.h	/^#define kh_val(/;"	d
kh_value	deps/hash/khash.h	/^#define kh_value(/;"	d
khash_t	deps/hash/khash.h	/^#define khash_t(/;"	d
khint_t	deps/hash/khash.h	/^typedef uint32_t khint_t;$/;"	t	typeref:typename:uint32_t
khiter_t	deps/hash/khash.h	/^typedef khint_t khiter_t;$/;"	t	typeref:typename:khint_t
large	deps/commander/commander.h	/^  char *large;$/;"	m	struct:__anonc47d9c110108	typeref:typename:char *
large_with_arg	deps/commander/commander.h	/^  const char *large_with_arg;$/;"	m	struct:__anonc47d9c110108	typeref:typename:const char *
len	deps/list/list.h	/^  unsigned int len;$/;"	m	struct:__anonf0edcb3d0208	typeref:typename:unsigned int
length	deps/gumbo-parser/char_ref.c	/^  size_t length;$/;"	m	struct:__anona0e2c48e0108	typeref:typename:size_t	file:
length	deps/gumbo-parser/gumbo.h	/^  size_t length;$/;"	m	struct:__anonc68e32330208	typeref:typename:size_t
length	deps/gumbo-parser/gumbo.h	/^  unsigned int length;$/;"	m	struct:__anonc68e32330308	typeref:typename:unsigned int
length	deps/gumbo-parser/string_buffer.h	/^  size_t length;$/;"	m	struct:__anon249283490108	typeref:typename:size_t
length	deps/gumbo-text-content/gumbo-text-content.c	/^  size_t length;$/;"	m	struct:__anon4e8ab7e80108	typeref:typename:size_t	file:
license	deps/assertion-macros/package.json	/^  "license": "MIT",$/;"	s
license	deps/case/package.json	/^  "license": "MIT",$/;"	s
license	deps/commander/clib.json	/^  "license": "MIT",$/;"	s
license	deps/commander/package.json	/^  "license": "MIT",$/;"	s
license	deps/console-colors/package.json	/^  "license": "BSD",$/;"	s
license	deps/copy/clib.json	/^  "license": "MIT",$/;"	s
license	deps/copy/package.json	/^  "license": "MIT",$/;"	s
license	deps/debug/package.json	/^  "license": "mit",$/;"	s
license	deps/describe/package.json	/^  "license": "MIT",$/;"	s
license	deps/fs/clib.json	/^  "license": "MIT",$/;"	s
license	deps/fs/package.json	/^  "license": "MIT",$/;"	s
license	deps/gumbo-get-element-by-id/package.json	/^  "license": "MIT",$/;"	s
license	deps/gumbo-get-elements-by-tag-name/package.json	/^  "license": "MIT",$/;"	s
license	deps/gumbo-parser/package.json	/^  "license": "Apache License, Version 2.0",$/;"	s
license	deps/gumbo-text-content/package.json	/^  "license": "MIT",$/;"	s
license	deps/hash/clib.json	/^  "license": "MIT",$/;"	s
license	deps/hash/package.json	/^  "license": "MIT",$/;"	s
license	deps/http-get/clib.json	/^  "license": "MIT",$/;"	s
license	deps/list/package.json	/^  "license": "MIT",$/;"	s
license	deps/mkdirp/package.json	/^  "license": "MIT",$/;"	s
license	deps/occurrences/package.json	/^  "license": "MIT",$/;"	s
license	deps/parse-repo/package.json	/^  "license": "MIT",$/;"	s
license	deps/parson/clib.json	/^  "license": "MIT",$/;"	s
license	deps/parson/package.json	/^  "license": "MIT",$/;"	s
license	deps/path-join/package.json	/^  "license": "MIT",$/;"	s
license	deps/path-normalize/package.json	/^  "license": "MIT",$/;"	s
license	deps/rimraf/package.json	/^  "license": "MIT",$/;"	s
license	deps/str-concat/clib.json	/^  "license": "MIT",$/;"	s
license	deps/str-concat/package.json	/^  "license": "MIT",$/;"	s
license	deps/str-ends-with/package.json	/^  "license": "MIT",$/;"	s
license	deps/str-flatten/package.json	/^  "license": "MIT",$/;"	s
license	deps/str-replace/package.json	/^  "license": "MIT",$/;"	s
license	deps/str-starts-with/package.json	/^  "license": "MIT",$/;"	s
license	deps/strdup/clib.json	/^  "license": "Expat",$/;"	s
license	deps/strdup/package.json	/^  "license": "MIT",$/;"	s
license	deps/substr/package.json	/^  "license": "MIT",$/;"	s
license	deps/tinydir/package.json	/^  "license": "BSD-2-Clause",$/;"	s
license	deps/trim/package.json	/^  "license": "MIT",$/;"	s
license	deps/which/clib.json	/^  "license": "MIT",$/;"	s
license	deps/which/package.json	/^  "license": "MIT",$/;"	s
license	deps/wiki-registry/package.json	/^  "license": "MIT",$/;"	s
license	deps/wildcardcmp/clib.json	/^  "license": "MIT",$/;"	s
license	deps/wildcardcmp/package.json	/^  "license": "MIT",$/;"	s
license	src/common/clib-package.h	/^  char *license;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
line	deps/gumbo-parser/gumbo.h	/^  unsigned int line;$/;"	m	struct:__anonc68e32330108	typeref:typename:unsigned int
list	clib.json	/^    "list": "*",$/;"	s	object:dependencies
list	deps/gumbo-get-elements-by-tag-name/package.json	/^    "list": "*",$/;"	s	object:dependencies
list	test/package/clib.json	/^    "list": "*"$/;"	s	object:dependencies
list_at	deps/list/list.c	/^list_at(list_t *self, int index) {$/;"	f	typeref:typename:list_node_t *
list_destroy	deps/list/list.c	/^list_destroy(list_t *self) {$/;"	f	typeref:typename:void
list_direction_t	deps/list/list.h	/^} list_direction_t;$/;"	t	typeref:enum:__anonf0edcb3d0103
list_find	deps/list/list.c	/^list_find(list_t *self, void *val) {$/;"	f	typeref:typename:list_node_t *
list_iterator_destroy	deps/list/list_iterator.c	/^list_iterator_destroy(list_iterator_t *self) {$/;"	f	typeref:typename:void
list_iterator_new	deps/list/list_iterator.c	/^list_iterator_new(list_t *list, list_direction_t direction) {$/;"	f	typeref:typename:list_iterator_t *
list_iterator_new_from_node	deps/list/list_iterator.c	/^list_iterator_new_from_node(list_node_t *node, list_direction_t direction) {$/;"	f	typeref:typename:list_iterator_t *
list_iterator_next	deps/list/list_iterator.c	/^list_iterator_next(list_iterator_t *self) {$/;"	f	typeref:typename:list_node_t *
list_iterator_t	deps/list/list.h	/^} list_iterator_t;$/;"	t	typeref:struct:__anonf0edcb3d0308
list_lpop	deps/list/list.c	/^list_lpop(list_t *self) {$/;"	f	typeref:typename:list_node_t *
list_lpush	deps/list/list.c	/^list_lpush(list_t *self, list_node_t *node) {$/;"	f	typeref:typename:list_node_t *
list_new	deps/list/list.c	/^list_new(void) {$/;"	f	typeref:typename:list_t *
list_node	deps/list/list.h	/^typedef struct list_node {$/;"	s
list_node_new	deps/list/list_node.c	/^list_node_new(void *val) {$/;"	f	typeref:typename:list_node_t *
list_node_t	deps/list/list.h	/^} list_node_t;$/;"	t	typeref:struct:list_node
list_remove	deps/list/list.c	/^list_remove(list_t *self, list_node_t *node) {$/;"	f	typeref:typename:void
list_rpop	deps/list/list.c	/^list_rpop(list_t *self) {$/;"	f	typeref:typename:list_node_t *
list_rpush	deps/list/list.c	/^list_rpush(list_t *self, list_node_t *node) {$/;"	f	typeref:typename:list_node_t *
list_t	deps/list/list.h	/^} list_t;$/;"	t	typeref:struct:__anonf0edcb3d0208
littlstar/asprintf.c	clib.json	/^    "littlstar\/asprintf.c": "0.0.3",$/;"	s	object:dependencies
littlstar/asprintf.c	deps/debug/package.json	/^    "littlstar\/asprintf.c": "0.0.3",$/;"	s	object:dependencies
local_name	deps/gumbo-parser/parser.c	/^  const char* local_name;$/;"	m	struct:_NamespacedAttributeReplacement	typeref:typename:const char *	file:
lock	src/common/clib-package.c	/^static clib_package_lock_t lock = {PTHREAD_MUTEX_INITIALIZER};$/;"	v	typeref:typename:clib_package_lock_t	file:
logger	clib.json	/^    "logger": "0.0.1",$/;"	s	object:dependencies
logger_error	deps/logger/logger.h	/^#define logger_error(/;"	d
logger_info	deps/logger/logger.h	/^#define logger_info(/;"	d
logger_warn	deps/logger/logger.h	/^#define logger_warn(/;"	d
main	deps/hash/hash.c	/^main(){$/;"	f	typeref:typename:int
main	src/clib-build.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/clib-configure.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/clib-init.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	src/clib-install.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	src/clib-search.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	src/clib-update.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	src/clib-upgrade.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	src/clib.c	/^int main(int argc, const char **argv) {$/;"	f	typeref:typename:int
main	test/cache/cache-test.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-dependency-new.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-install-dependencies.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-install-dev-dependencies.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-install.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-load-from-manifest.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-load-manifest-file.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-new-from-slug.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-new.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-parse-author.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-parse-name.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-parse-version.c	/^main() {$/;"	f	typeref:typename:int
main	test/package/package-url.c	/^main() {$/;"	f	typeref:typename:int
makefile	clib.json	/^  "makefile": "Makefile",$/;"	s
makefile	src/common/clib-package.h	/^  char *makefile;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
malloc_wrapper	deps/gumbo-parser/parser.c	/^static void* malloc_wrapper(void* unused, size_t size) {$/;"	f	typeref:typename:void *	file:
manifest	src/clib-init.c	/^  char *manifest;$/;"	m	struct:options	typeref:typename:char *	file:
manifest_names	src/clib-build.c	/^const char *manifest_names[] = {"clib.json", "package.json", 0};$/;"	v	typeref:typename:const char * []
manifest_names	src/clib-configure.c	/^const char *manifest_names[] = {"clib.json", "package.json", 0};$/;"	v	typeref:typename:const char * []
manifest_names	src/clib-install.c	/^static const char *manifest_names[] = {"clib.json", "package.json", NULL};$/;"	v	typeref:typename:const char * []	file:
manifest_names	src/clib-update.c	/^static const char *manifest_names[] = {"clib.json", "package.json", NULL};$/;"	v	typeref:typename:const char * []	file:
manifest_names	src/clib-upgrade.c	/^static const char *manifest_names[] = {"clib.json", "package.json", NULL};$/;"	v	typeref:typename:const char * []	file:
manifest_names	src/common/clib-package.c	/^static const char *manifest_names[] = {"clib.json", "package.json", NULL};$/;"	v	typeref:typename:const char * []	file:
mark_tag_state_as_empty	deps/gumbo-parser/tokenizer.c	/^static void mark_tag_state_as_empty(GumboTagState* tag_state) {$/;"	f	typeref:typename:void	file:
match	deps/list/list.h	/^  int (*match)(void *a, void *b);$/;"	m	struct:__anonf0edcb3d0208	typeref:typename:int (*)(void * a,void * b)
matches	src/clib-search.c	/^static int matches(int count, char *args[], wiki_package_t *pkg) {$/;"	f	typeref:typename:int	file:
max_errors	deps/gumbo-parser/gumbo.h	/^  int max_errors;$/;"	m	struct:GumboInternalOptions	typeref:typename:int
maybe_add_doctype_error	deps/gumbo-parser/parser.c	/^static bool maybe_add_doctype_error($/;"	f	typeref:typename:bool	file:
maybe_add_invalid_named_reference	deps/gumbo-parser/char_ref.c	/^static bool maybe_add_invalid_named_reference($/;"	f	typeref:typename:bool	file:
maybe_emit_from_temporary_buffer	deps/gumbo-parser/tokenizer.c	/^static bool maybe_emit_from_temporary_buffer($/;"	f	typeref:typename:bool	file:
maybe_flush_text_node_buffer	deps/gumbo-parser/parser.c	/^static void maybe_flush_text_node_buffer(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
maybe_implicitly_close_list_tag	deps/gumbo-parser/parser.c	/^static void maybe_implicitly_close_list_tag($/;"	f	typeref:typename:void	file:
maybe_implicitly_close_p_tag	deps/gumbo-parser/parser.c	/^static bool maybe_implicitly_close_p_tag(GumboParser* parser, GumboToken* token) {$/;"	f	typeref:typename:bool	file:
maybe_replace_codepoint	deps/gumbo-parser/char_ref.c	/^static int maybe_replace_codepoint(int codepoint) {$/;"	f	typeref:typename:int	file:
maybe_resize_string_buffer	deps/gumbo-parser/string_buffer.c	/^static void maybe_resize_string_buffer($/;"	f	typeref:typename:void	file:
merge_attributes	deps/gumbo-parser/parser.c	/^static void merge_attributes($/;"	f	typeref:typename:void	file:
mkdirp	deps/mkdirp/mkdirp.c	/^mkdirp(const char *path, mode_t mode) {$/;"	f	typeref:typename:int
ms	deps/debug/package.json	/^    "ms": "*"$/;"	s	object:development
mutex	src/clib-build.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
mutex	src/clib-configure.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
mutex	src/common/clib-package.c	/^  pthread_mutex_t mutex;$/;"	m	struct:clib_package_lock	typeref:typename:pthread_mutex_t	file:
n_files	deps/tinydir/tinydir.h	/^	size_t n_files;$/;"	m	struct:tinydir_dir	typeref:typename:size_t
name	clib.json	/^  "name": "clib",$/;"	s
name	deps/asprintf/package.json	/^  "name": "asprintf",$/;"	s
name	deps/assertion-macros/package.json	/^  "name": "assertion-macros",$/;"	s
name	deps/case/package.json	/^  "name": "case",$/;"	s
name	deps/commander/clib.json	/^  "name": "commander",$/;"	s
name	deps/commander/commander.h	/^  const char *name;$/;"	m	struct:command	typeref:typename:const char *
name	deps/commander/package.json	/^  "name": "commander",$/;"	s
name	deps/console-colors/package.json	/^  "name": "console-colors",$/;"	s
name	deps/copy/clib.json	/^  "name": "copy",$/;"	s
name	deps/copy/package.json	/^  "name": "copy",$/;"	s
name	deps/debug/debug.h	/^  const char *name;$/;"	m	struct:__anon5a8922b30108	typeref:typename:const char *
name	deps/debug/package.json	/^  "name": "debug",$/;"	s
name	deps/describe/package.json	/^  "name": "describe",$/;"	s
name	deps/fs/clib.json	/^  "name": "fs",$/;"	s
name	deps/fs/package.json	/^  "name": "fs",$/;"	s
name	deps/gumbo-get-element-by-id/package.json	/^  "name": "gumbo-get-element-by-id",$/;"	s
name	deps/gumbo-get-elements-by-tag-name/package.json	/^  "name": "gumbo-get-elements-by-tag-name",$/;"	s
name	deps/gumbo-parser/char_ref.c	/^  const char* name;$/;"	m	struct:__anona0e2c48e0108	typeref:typename:const char *	file:
name	deps/gumbo-parser/error.h	/^  const char* name;$/;"	m	struct:GumboInternalDuplicateAttrError	typeref:typename:const char *
name	deps/gumbo-parser/gumbo.h	/^  const char* name;$/;"	m	struct:__anonc68e32330608	typeref:typename:const char *
name	deps/gumbo-parser/gumbo.h	/^  const char* name;$/;"	m	struct:__anonc68e32330b08	typeref:typename:const char *
name	deps/gumbo-parser/package.json	/^  "name": "gumbo-parser",$/;"	s
name	deps/gumbo-parser/tokenizer.h	/^  const char* name;$/;"	m	struct:GumboInternalTokenDocType	typeref:typename:const char *
name	deps/gumbo-text-content/package.json	/^  "name": "gumbo-text-content",$/;"	s
name	deps/hash/clib.json	/^  "name": "hash",$/;"	s
name	deps/hash/package.json	/^  "name": "hash",$/;"	s
name	deps/http-get/clib.json	/^  "name": "http-get",$/;"	s
name	deps/list/package.json	/^  "name": "list",$/;"	s
name	deps/logger/clib.json	/^  "name": "logger",$/;"	s
name	deps/logger/package.json	/^  "name": "logger",$/;"	s
name	deps/mkdirp/package.json	/^  "name": "mkdirp",$/;"	s
name	deps/occurrences/package.json	/^  "name": "occurrences",$/;"	s
name	deps/parse-repo/package.json	/^  "name": "parse-repo",$/;"	s
name	deps/parson/clib.json	/^  "name": "parson",$/;"	s
name	deps/parson/package.json	/^  "name": "parson",$/;"	s
name	deps/path-join/package.json	/^  "name": "path-join",$/;"	s
name	deps/path-normalize/package.json	/^  "name": "path-normalize",$/;"	s
name	deps/rimraf/package.json	/^  "name": "rimraf",$/;"	s
name	deps/str-concat/clib.json	/^  "name": "str-concat",$/;"	s
name	deps/str-concat/package.json	/^  "name": "str-concat",$/;"	s
name	deps/str-ends-with/package.json	/^  "name": "str-ends-with",$/;"	s
name	deps/str-flatten/package.json	/^  "name": "str-flatten",$/;"	s
name	deps/str-replace/package.json	/^  "name": "str-replace",$/;"	s
name	deps/str-starts-with/package.json	/^  "name": "str-starts-with",$/;"	s
name	deps/strdup/clib.json	/^  "name": "strdup",$/;"	s
name	deps/strdup/package.json	/^  "name": "strdup",$/;"	s
name	deps/substr/package.json	/^  "name": "substr",$/;"	s
name	deps/tempdir/package.json	/^  "name": "tempdir",$/;"	s
name	deps/tinydir/package.json	/^  "name": "tinydir",$/;"	s
name	deps/tinydir/tinydir.h	/^	_tinydir_char_t name[_TINYDIR_FILENAME_MAX];$/;"	m	struct:tinydir_file	typeref:typename:_tinydir_char_t[]
name	deps/trim/package.json	/^  "name": "trim",$/;"	s
name	deps/which/clib.json	/^  "name": "which",$/;"	s
name	deps/which/package.json	/^  "name": "which",$/;"	s
name	deps/wiki-registry/package.json	/^  "name": "wiki-registry",$/;"	s
name	deps/wildcardcmp/clib.json	/^  "name": "wildcardcmp",$/;"	s
name	deps/wildcardcmp/package.json	/^  "name": "wildcardcmp",$/;"	s
name	package.json	/^  "name": "clib",$/;"	s
name	src/common/clib-package.h	/^  char *name;$/;"	m	struct:__anon9e68895d0108	typeref:typename:char *
name	src/common/clib-package.h	/^  char *name;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
name	test/data/test-save-package.json	/^  "name": "test-package"$/;"	s
name	test/package/clib.json	/^  "name": "clib-package-test-fixture",$/;"	s
name_end	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition name_end;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboSourcePosition
name_start	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition name_start;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboSourcePosition
names	deps/parson/parson.c	/^    char       **names;$/;"	m	struct:json_object_t	typeref:typename:char **	file:
nargv	deps/commander/commander.h	/^  char **nargv;$/;"	m	struct:command	typeref:typename:char **
new_document_node	deps/gumbo-parser/parser.c	/^static GumboNode* new_document_node(GumboParser* parser) {$/;"	f	typeref:typename:GumboNode *	file:
new_index	deps/gumbo-parser/error.h	/^  unsigned int new_index;$/;"	m	struct:GumboInternalDuplicateAttrError	typeref:typename:unsigned int
next	deps/list/list.h	/^  list_node_t *next;$/;"	m	struct:__anonf0edcb3d0308	typeref:typename:list_node_t *
next	deps/list/list.h	/^  struct list_node *next;$/;"	m	struct:list_node	typeref:struct:list_node *
node_tag_in	deps/gumbo-parser/parser.c	/^static bool node_tag_in(const GumboNode* node, ...) {$/;"	f	typeref:typename:bool	file:
node_tag_is	deps/gumbo-parser/parser.c	/^static bool node_tag_is(const GumboNode* node, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
nodes	deps/gumbo-text-content/gumbo-text-content.c	/^  const char *nodes[GUMBO_TEXT_CONTENT_MAX];$/;"	m	struct:__anon4e8ab7e80108	typeref:typename:const char * []	file:
normalize_args	deps/commander/commander.c	/^normalize_args(int *argc, char **argv) {$/;"	f	typeref:typename:char **	file:
null	deps/parson/parson.c	/^    int          null;$/;"	m	union:json_value_value	typeref:typename:int	file:
num_bytes_in_utf8_sequence	deps/parson/parson.c	/^static int num_bytes_in_utf8_sequence(unsigned char c) {$/;"	f	typeref:typename:int	file:
number	deps/parson/parson.c	/^    double       number;$/;"	m	union:json_value_value	typeref:typename:double	file:
object	deps/parson/parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	typeref:typename:JSON_Object *	file:
occurrences	deps/occurrences/occurrences.c	/^occurrences(const char *needle, const char *haystack) {$/;"	f	typeref:typename:size_t
offset	deps/gumbo-parser/gumbo.h	/^  unsigned int offset;$/;"	m	struct:__anonc68e32330108	typeref:typename:unsigned int
ok	deps/http-get/http-get.h	/^  int ok;$/;"	m	struct:__anonf56bd07f0108	typeref:typename:int
opt_cache	src/clib-search.c	/^static int opt_cache;$/;"	v	typeref:typename:int	file:
opt_color	src/clib-search.c	/^static int opt_color;$/;"	v	typeref:typename:int	file:
opt_json	src/clib-search.c	/^static int opt_json;$/;"	v	typeref:typename:int	file:
option_count	deps/commander/commander.h	/^  int option_count;$/;"	m	struct:command	typeref:typename:int
optional_arg	deps/commander/commander.h	/^  int optional_arg;$/;"	m	struct:__anonc47d9c110108	typeref:typename:int
options	deps/commander/commander.h	/^  command_option_t options[COMMANDER_MAX_OPTIONS];$/;"	m	struct:command	typeref:typename:command_option_t[]
options	src/clib-build.c	/^struct options {$/;"	s	file:
options	src/clib-configure.c	/^struct options {$/;"	s	file:
options	src/clib-init.c	/^struct options {$/;"	s	file:
options	src/clib-install.c	/^struct options {$/;"	s	file:
options	src/clib-update.c	/^struct options {$/;"	s	file:
options	src/clib-upgrade.c	/^struct options {$/;"	s	file:
options_t	src/clib-build.c	/^typedef struct options options_t;$/;"	t	typeref:struct:options	file:
options_t	src/clib-configure.c	/^typedef struct options options_t;$/;"	t	typeref:struct:options	file:
opts	src/clib-build.c	/^options_t opts = {.skip_cache = 0,$/;"	v	typeref:typename:options_t
opts	src/clib-configure.c	/^options_t opts = {.skip_cache = 0,$/;"	v	typeref:typename:options_t
opts	src/clib-init.c	/^static struct options opts;$/;"	v	typeref:struct:options	file:
opts	src/clib-install.c	/^static struct options opts = {0};$/;"	v	typeref:struct:options	file:
opts	src/clib-update.c	/^static struct options opts = {0};$/;"	v	typeref:struct:options	file:
opts	src/clib-upgrade.c	/^static struct options opts = {0};$/;"	v	typeref:struct:options	file:
opts	src/common/clib-package.c	/^static clib_package_opts_t opts = {$/;"	v	typeref:typename:clib_package_opts_t	file:
original_end_tag	deps/gumbo-parser/gumbo.h	/^  GumboStringPiece original_end_tag;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboStringPiece
original_index	deps/gumbo-parser/error.h	/^  unsigned int original_index;$/;"	m	struct:GumboInternalDuplicateAttrError	typeref:typename:unsigned int
original_name	deps/gumbo-parser/gumbo.h	/^  GumboStringPiece original_name;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboStringPiece
original_tag	deps/gumbo-parser/gumbo.h	/^  GumboStringPiece original_tag;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboStringPiece
original_text	deps/gumbo-parser/error.h	/^  const char* original_text;$/;"	m	struct:GumboInternalError	typeref:typename:const char *
original_text	deps/gumbo-parser/gumbo.h	/^  GumboStringPiece original_text;$/;"	m	struct:__anonc68e32330c08	typeref:typename:GumboStringPiece
original_text	deps/gumbo-parser/tokenizer.h	/^  GumboStringPiece original_text;$/;"	m	struct:GumboInternalToken	typeref:typename:GumboStringPiece
original_value	deps/gumbo-parser/gumbo.h	/^  GumboStringPiece original_value;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboStringPiece
output_init	deps/gumbo-parser/parser.c	/^static void output_init(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
package-%	test/package/Makefile	/^package-%: package-%.o $(OBJS)$/;"	t
package_cache_dir	src/common/clib-cache.c	/^static char package_cache_dir[BUFSIZ];$/;"	v	typeref:typename:char[]	file:
package_cache_path	src/common/clib-cache.c	/^static void package_cache_path(char *json_cache, char *author, char *name,$/;"	f	typeref:typename:void	file:
package_opts	src/clib-build.c	/^clib_package_opts_t package_opts = {0};$/;"	v	typeref:typename:clib_package_opts_t
package_opts	src/clib-configure.c	/^clib_package_opts_t package_opts = {0};$/;"	v	typeref:typename:clib_package_opts_t
package_opts	src/clib-install.c	/^static clib_package_opts_t package_opts = {0};$/;"	v	typeref:typename:clib_package_opts_t	file:
package_opts	src/clib-update.c	/^static clib_package_opts_t package_opts = {0};$/;"	v	typeref:typename:clib_package_opts_t	file:
package_opts	src/clib-upgrade.c	/^static clib_package_opts_t package_opts = {0};$/;"	v	typeref:typename:clib_package_opts_t	file:
parent	deps/gumbo-parser/gumbo.h	/^  GumboNode* parent;$/;"	m	struct:GumboInternalNode	typeref:typename:GumboNode *
parse_argname	deps/commander/commander.c	/^parse_argname(const char *str, char *flag, char *arg) {$/;"	f	typeref:typename:void	file:
parse_array_value	deps/parson/parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	typeref:typename:JSON_Value *	file:
parse_boolean_value	deps/parson/parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	typeref:typename:JSON_Value *	file:
parse_digit	deps/gumbo-parser/char_ref.c	/^static int parse_digit(int c, bool allow_hex) {$/;"	f	typeref:typename:int	file:
parse_flags	deps/gumbo-parser/gumbo.h	/^  GumboParseFlags parse_flags;$/;"	m	struct:GumboInternalNode	typeref:typename:GumboParseFlags
parse_li	deps/wiki-registry/wiki-registry.c	/^parse_li(GumboNode *li) {$/;"	f	typeref:typename:wiki_package_t *	file:
parse_null_value	deps/parson/parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	typeref:typename:JSON_Value *	file:
parse_number_value	deps/parson/parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	typeref:typename:JSON_Value *	file:
parse_object_value	deps/parson/parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	typeref:typename:JSON_Value *	file:
parse_package_deps	src/common/clib-package.c	/^static inline list_t *parse_package_deps(JSON_Object *obj) {$/;"	f	typeref:typename:list_t *	file:
parse_repo_name	deps/parse-repo/parse-repo.c	/^parse_repo_name(const char *slug) {$/;"	f	typeref:typename:char *
parse_repo_owner	deps/parse-repo/parse-repo.c	/^parse_repo_owner(const char *slug, const char *fallback) {$/;"	f	typeref:typename:char *
parse_repo_version	deps/parse-repo/parse-repo.c	/^parse_repo_version(const char *slug, const char *fallback) {$/;"	f	typeref:typename:char *
parse_string_value	deps/parson/parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	typeref:typename:JSON_Value *	file:
parse_utf_16	deps/parson/parson.c	/^static int parse_utf_16(const char **unprocessed, char **processed) {$/;"	f	typeref:typename:int	file:
parse_value	deps/parson/parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	typeref:typename:JSON_Value *	file:
parser	deps/gumbo-parser/error.h	/^    struct GumboInternalParserError parser;$/;"	m	union:GumboInternalError::__anon25fbe703030a	typeref:struct:GumboInternalParserError
parser_state	deps/gumbo-parser/error.h	/^  GumboInsertionMode parser_state;$/;"	m	struct:GumboInternalParserError	typeref:typename:GumboInsertionMode
parser_state_destroy	deps/gumbo-parser/parser.c	/^static void parser_state_destroy(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
parser_state_init	deps/gumbo-parser/parser.c	/^static void parser_state_init(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
parson_free	deps/parson/parson.c	/^static JSON_Free_Function parson_free = free;$/;"	v	typeref:typename:JSON_Free_Function	file:
parson_malloc	deps/parson/parson.c	/^static JSON_Malloc_Function parson_malloc = malloc;$/;"	v	typeref:typename:JSON_Malloc_Function	file:
parson_parson_h	deps/parson/parson.h	/^#define parson_parson_h$/;"	d
parson_strdup	deps/parson/parson.c	/^static char * parson_strdup(const char *string) {$/;"	f	typeref:typename:char *	file:
parson_strndup	deps/parson/parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	typeref:typename:char *	file:
path	deps/tinydir/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_dir	typeref:typename:_tinydir_char_t[]
path	deps/tinydir/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_file	typeref:typename:_tinydir_char_t[]
path_join	deps/path-join/path-join.c	/^path_join(const char *dir, const char *file) {$/;"	f	typeref:typename:char *
path_normalize	deps/path-normalize/path-normalize.c	/^path_normalize(const char *path) {$/;"	f	typeref:typename:char *
pkg	scripts/update-clib-json	/^const pkg = require('..\/package.json')$/;"	C
pkg	src/common/clib-package.c	/^  clib_package_t *pkg;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:clib_package_t *	file:
platform_dirs	deps/tempdir/tempdir.c	/^  static const char *platform_dirs[] = {$/;"	v	typeref:typename:const char * []	file:
pop_current_node	deps/gumbo-parser/parser.c	/^static GumboNode* pop_current_node(GumboParser* parser) {$/;"	f	typeref:typename:GumboNode *	file:
pop_template_insertion_mode	deps/gumbo-parser/parser.c	/^static void pop_template_insertion_mode(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
position	deps/gumbo-parser/error.h	/^  GumboSourcePosition position;$/;"	m	struct:GumboInternalError	typeref:typename:GumboSourcePosition
position	deps/gumbo-parser/tokenizer.h	/^  GumboSourcePosition position;$/;"	m	struct:GumboInternalToken	typeref:typename:GumboSourcePosition
prefix	src/clib-build.c	/^  char *prefix;$/;"	m	struct:options	typeref:typename:char *	file:
prefix	src/clib-configure.c	/^  char *prefix;$/;"	m	struct:options	typeref:typename:char *	file:
prefix	src/clib-install.c	/^  char *prefix;$/;"	m	struct:options	typeref:typename:char *	file:
prefix	src/clib-update.c	/^  char *prefix;$/;"	m	struct:options	typeref:typename:char *	file:
prefix	src/clib-upgrade.c	/^  char *prefix;$/;"	m	struct:options	typeref:typename:char *	file:
prefix	src/common/clib-package.h	/^  char *prefix;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
prefix	src/common/clib-package.h	/^  char *prefix;$/;"	m	struct:__anon9e68895d0308	typeref:typename:char *
prev	deps/list/list.h	/^  struct list_node *prev;$/;"	m	struct:list_node	typeref:struct:list_node *
print_message	deps/gumbo-parser/error.c	/^static int print_message(GumboParser* parser, GumboStringBuffer* output,$/;"	f	typeref:typename:int	file:
print_tag_stack	deps/gumbo-parser/error.c	/^static void print_tag_stack($/;"	f	typeref:typename:void	file:
process_string	deps/parson/parson.c	/^static char* process_string(const char *input, size_t len) {$/;"	f	typeref:typename:char *	file:
program	src/clib-build.c	/^command_t program = {0};$/;"	v	typeref:typename:command_t
program	src/clib-configure.c	/^command_t program = {0};$/;"	v	typeref:typename:command_t
public_identifier	deps/gumbo-parser/gumbo.h	/^  const char* public_identifier;$/;"	m	struct:__anonc68e32330b08	typeref:typename:const char *
public_identifier	deps/gumbo-parser/tokenizer.h	/^  const char* public_identifier;$/;"	m	struct:GumboInternalTokenDocType	typeref:typename:const char *
push_template_insertion_mode	deps/gumbo-parser/parser.c	/^static void push_template_insertion_mode($/;"	f	typeref:typename:void	file:
read_char	deps/gumbo-parser/utf8.c	/^static void read_char(Utf8Iterator* iter) {$/;"	f	typeref:typename:void	file:
read_file	deps/parson/parson.c	/^static char * read_file(const char * filename) {$/;"	f	typeref:typename:char *	file:
realpath	src/clib-build.c	/^#define realpath(/;"	d	file:
realpath	src/clib-configure.c	/^#define realpath(/;"	d	file:
realpath	src/clib-init.c	/^#define realpath(/;"	d	file:
realpath	src/clib-install.c	/^#define realpath(/;"	d	file:
realpath	src/clib-search.c	/^#define realpath(/;"	d	file:
realpath	src/clib-update.c	/^#define realpath(/;"	d	file:
realpath	src/clib-upgrade.c	/^#define realpath(/;"	d	file:
realpath	src/clib.c	/^#define realpath(/;"	d	file:
realpath	src/common/clib-package.c	/^#define realpath(/;"	d	file:
reconstruct_active_formatting_elements	deps/gumbo-parser/parser.c	/^static void reconstruct_active_formatting_elements(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
record_end_of_element	deps/gumbo-parser/parser.c	/^static void record_end_of_element($/;"	f	typeref:typename:void	file:
refs	src/common/clib-package.h	/^  unsigned int refs;$/;"	m	struct:__anon9e68895d0208	typeref:typename:unsigned int
reinitialize_tag_buffer	deps/gumbo-parser/tokenizer.c	/^static void reinitialize_tag_buffer(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
remove_comments	deps/parson/parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	typeref:typename:void	file:
remove_from_parent	deps/gumbo-parser/parser.c	/^static void remove_from_parent(GumboParser* parser, GumboNode* node) {$/;"	f	typeref:typename:void	file:
repo	clib.json	/^  "repo": "clibs\/clib",$/;"	s
repo	deps/asprintf/package.json	/^  "repo": "littlstar\/asprintf.c",$/;"	s
repo	deps/assertion-macros/package.json	/^  "repo": "stephenmathieson\/assertion-macros.h",$/;"	s
repo	deps/case/package.json	/^  "repo": "stephenmathieson\/case.c",$/;"	s
repo	deps/commander/clib.json	/^  "repo": "clibs\/commander",$/;"	s
repo	deps/commander/package.json	/^  "repo": "clibs\/commander",$/;"	s
repo	deps/console-colors/package.json	/^  "repo": "Constellation\/console-colors.c",$/;"	s
repo	deps/copy/clib.json	/^  "repo": "Isty001\/copy",$/;"	s
repo	deps/copy/package.json	/^  "repo": "Isty001\/copy",$/;"	s
repo	deps/debug/package.json	/^  "repo": "stephenmathieson\/debug.c",$/;"	s
repo	deps/describe/package.json	/^  "repo": "stephenmathieson\/describe.h",$/;"	s
repo	deps/fs/clib.json	/^  "repo": "jwerle\/fs.c",$/;"	s
repo	deps/fs/package.json	/^  "repo": "jwerle\/fs.c",$/;"	s
repo	deps/gumbo-get-element-by-id/package.json	/^  "repo": "stephenmathieson\/gumbo-get-element-by-id.c",$/;"	s
repo	deps/gumbo-get-elements-by-tag-name/package.json	/^  "repo": "stephenmathieson\/gumbo-get-elements-by-tag-name.c",$/;"	s
repo	deps/gumbo-text-content/package.json	/^  "repo": "stephenmathieson\/gumbo-text-content.c",$/;"	s
repo	deps/hash/clib.json	/^  "repo": "clibs\/hash",$/;"	s
repo	deps/hash/package.json	/^  "repo": "clibs\/hash",$/;"	s
repo	deps/http-get/clib.json	/^  "repo": "clibs\/http-get.c",$/;"	s
repo	deps/list/package.json	/^  "repo": "clibs\/list",$/;"	s
repo	deps/logger/clib.json	/^  "repo": "clibs\/logger",$/;"	s
repo	deps/logger/package.json	/^  "repo": "clibs\/logger",$/;"	s
repo	deps/mkdirp/package.json	/^  "repo": "stephenmathieson\/mkdirp.c",$/;"	s
repo	deps/occurrences/package.json	/^  "repo": "stephenmathieson\/occurrences.c",$/;"	s
repo	deps/parse-repo/package.json	/^  "repo": "stephenmathieson\/parse-repo.c",$/;"	s
repo	deps/parson/clib.json	/^  "repo": "clibs\/parson",$/;"	s
repo	deps/parson/package.json	/^  "repo": "clibs\/parson",$/;"	s
repo	deps/path-join/package.json	/^  "repo": "stephenmathieson\/path-join.c",$/;"	s
repo	deps/path-normalize/package.json	/^  "repo": "stephenmathieson\/path-normalize.c",$/;"	s
repo	deps/rimraf/package.json	/^  "repo": "stephenmathieson\/rimraf.c",$/;"	s
repo	deps/str-concat/clib.json	/^  "repo": "darthtrevino\/str-concat",$/;"	s
repo	deps/str-concat/package.json	/^  "repo": "darthtrevino\/str-concat",$/;"	s
repo	deps/str-ends-with/package.json	/^  "repo": "stephenmathieson\/str-ends-with.c",$/;"	s
repo	deps/str-flatten/package.json	/^  "repo": "stephenmathieson\/str-flatten.c",$/;"	s
repo	deps/str-replace/package.json	/^  "repo": "stephenmathieson\/str-replace.c",$/;"	s
repo	deps/str-starts-with/package.json	/^  "repo": "stephenmathieson\/str-starts-with.c",$/;"	s
repo	deps/strdup/clib.json	/^  "repo": "clibs\/strdup",$/;"	s
repo	deps/strdup/package.json	/^  "repo": "clibs\/strdup",$/;"	s
repo	deps/substr/package.json	/^  "repo": "stephenmathieson\/substr.c",$/;"	s
repo	deps/tempdir/package.json	/^  "repo": "stephenmathieson\/tempdir.c",$/;"	s
repo	deps/tinydir/package.json	/^  "repo": "cxong\/tinydir"$/;"	s
repo	deps/trim/package.json	/^  "repo": "stephenmathieson\/trim.c",$/;"	s
repo	deps/which/clib.json	/^  "repo": "clibs\/which",$/;"	s
repo	deps/which/package.json	/^  "repo": "clibs\/which",$/;"	s
repo	deps/wiki-registry/package.json	/^  "repo": "stephenmathieson\/wiki-registry.c",$/;"	s
repo	deps/wiki-registry/wiki-registry.h	/^  char *repo;$/;"	m	struct:__anon5d71bd190108	typeref:typename:char *
repo	deps/wildcardcmp/clib.json	/^  "repo": "clibs\/wildcardcmp",$/;"	s
repo	deps/wildcardcmp/package.json	/^  "repo": "clibs\/wildcardcmp",$/;"	s
repo	package.json	/^  "repo": "clibs\/clib",$/;"	s
repo	src/common/clib-package.h	/^  char *repo;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
repo	test/package/clib.json	/^  "repo": "clibs\/no-such-repo",$/;"	s
repo_name	src/common/clib-package.h	/^  char *repo_name;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
repository	deps/fs/clib.json	/^  "repository": {$/;"	o
repository	deps/fs/package.json	/^  "repository": {$/;"	o
repository	deps/gumbo-parser/package.json	/^  "repository": {$/;"	o
required_arg	deps/commander/commander.h	/^  int required_arg;$/;"	m	struct:__anonc47d9c110108	typeref:typename:int
reset_insertion_mode_appropriately	deps/gumbo-parser/parser.c	/^static void reset_insertion_mode_appropriately(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
reset_tag_buffer_start_point	deps/gumbo-parser/tokenizer.c	/^static void reset_tag_buffer_start_point(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
reset_token_start_point	deps/gumbo-parser/tokenizer.c	/^static void reset_token_start_point(GumboTokenizerState* tokenizer) {$/;"	f	typeref:typename:void	file:
rest_argc	src/clib-build.c	/^int rest_argc = 0;$/;"	v	typeref:typename:int
rest_argc	src/clib-configure.c	/^int rest_argc = 0;$/;"	v	typeref:typename:int
rest_argv	src/clib-build.c	/^char **rest_argv = 0;$/;"	v	typeref:typename:char **
rest_argv	src/clib-configure.c	/^char **rest_argv = 0;$/;"	v	typeref:typename:char **
rest_offset	src/clib-build.c	/^int rest_offset = 0;$/;"	v	typeref:typename:int
rest_offset	src/clib-configure.c	/^int rest_offset = 0;$/;"	v	typeref:typename:int
rimraf	deps/rimraf/rimraf.c	/^rimraf(const char *path) {$/;"	f	typeref:typename:int
root	deps/gumbo-parser/gumbo.h	/^  GumboNode* root;$/;"	m	struct:GumboInternalOutput	typeref:typename:GumboNode *
root_package	src/clib-build.c	/^clib_package_t *root_package = 0;$/;"	v	typeref:typename:clib_package_t *
root_package	src/clib-configure.c	/^clib_package_t *root_package = 0;$/;"	v	typeref:typename:clib_package_t *
root_package	src/clib-install.c	/^static clib_package_t *root_package = NULL;$/;"	v	typeref:typename:clib_package_t *	file:
root_package	src/clib-update.c	/^static clib_package_t *root_package = NULL;$/;"	v	typeref:typename:clib_package_t *	file:
root_package	src/clib-upgrade.c	/^static clib_package_t *root_package = NULL;$/;"	v	typeref:typename:clib_package_t *	file:
run_generic_parsing_algorithm	deps/gumbo-parser/parser.c	/^static void run_generic_parsing_algorithm($/;"	f	typeref:typename:void	file:
save	src/clib-install.c	/^  int save;$/;"	m	struct:options	typeref:typename:int	file:
save_dependency	src/clib-install.c	/^static int save_dependency(clib_package_t *pkg) {$/;"	f	typeref:typename:int	file:
save_dev_dependency	src/clib-install.c	/^static int save_dev_dependency(clib_package_t *pkg) {$/;"	f	typeref:typename:int	file:
savedev	src/clib-install.c	/^  int savedev;$/;"	m	struct:options	typeref:typename:int	file:
scripts	deps/fs/clib.json	/^  "scripts": {$/;"	o
scripts	deps/fs/package.json	/^  "scripts": {$/;"	o
scripts	deps/gumbo-parser/package.json	/^  "scripts": {},$/;"	o
scripts	package.json	/^  "scripts": {$/;"	o
search_cache	src/common/clib-cache.c	/^static char search_cache[BUFSIZ];$/;"	v	typeref:typename:char[]	file:
second	deps/gumbo-parser/char_ref.h	/^  int second;$/;"	m	struct:__anona0e2c4930108	typeref:typename:int
seeded	deps/debug/debug.c	/^static int seeded = 0;$/;"	v	typeref:typename:int	file:
set_frameset_not_ok	deps/gumbo-parser/parser.c	/^static void set_frameset_not_ok(GumboParser* parser) {$/;"	f	typeref:typename:void	file:
set_insertion_mode	deps/gumbo-parser/parser.c	/^static void set_insertion_mode(GumboParser* parser, GumboInsertionMode mode) {$/;"	f	typeref:typename:void	file:
setenv	src/clib-build.c	/^#define setenv(/;"	d	file:
setenv	src/clib-configure.c	/^#define setenv(/;"	d	file:
setenv	src/clib-init.c	/^#define setenv(/;"	d	file:
setenv	src/clib-install.c	/^#define setenv(/;"	d	file:
setenv	src/clib-search.c	/^#define setenv(/;"	d	file:
setenv	src/clib-update.c	/^#define setenv(/;"	d	file:
setenv	src/clib-upgrade.c	/^#define setenv(/;"	d	file:
setenv	src/clib.c	/^#define setenv(/;"	d	file:
setenv	src/common/clib-package.c	/^#define setenv(/;"	d	file:
setopt_clean	src/clib-build.c	/^static void setopt_clean(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_concurrency	src/clib-build.c	/^static void setopt_concurrency(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_concurrency	src/clib-configure.c	/^static void setopt_concurrency(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_concurrency	src/clib-install.c	/^static void setopt_concurrency(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_concurrency	src/clib-update.c	/^static void setopt_concurrency(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_concurrency	src/clib-upgrade.c	/^static void setopt_concurrency(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dev	src/clib-build.c	/^static void setopt_dev(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dev	src/clib-configure.c	/^static void setopt_dev(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dev	src/clib-install.c	/^static void setopt_dev(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dev	src/clib-update.c	/^static void setopt_dev(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dir	src/clib-build.c	/^static void setopt_dir(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dir	src/clib-configure.c	/^static void setopt_dir(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dir	src/clib-install.c	/^static void setopt_dir(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_dir	src/clib-update.c	/^static void setopt_dir(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_flags	src/clib-configure.c	/^static void setopt_flags(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_force	src/clib-build.c	/^static void setopt_force(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_force	src/clib-configure.c	/^static void setopt_force(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_force	src/clib-install.c	/^static void setopt_force(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_force	src/clib-upgrade.c	/^static void setopt_force(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_global	src/clib-build.c	/^static void setopt_global(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_global	src/clib-configure.c	/^static void setopt_global(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_global	src/clib-install.c	/^static void setopt_global(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_json	src/clib-search.c	/^static void setopt_json(command_t *self) { opt_json = 1; }$/;"	f	typeref:typename:void	file:
setopt_manifest_file	src/clib-init.c	/^static void setopt_manifest_file(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_nocache	src/clib-search.c	/^static void setopt_nocache(command_t *self) { opt_cache = 0; }$/;"	f	typeref:typename:void	file:
setopt_nocolor	src/clib-search.c	/^static void setopt_nocolor(command_t *self) { opt_color = 0; }$/;"	f	typeref:typename:void	file:
setopt_prefix	src/clib-build.c	/^static void setopt_prefix(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_prefix	src/clib-configure.c	/^static void setopt_prefix(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_prefix	src/clib-install.c	/^static void setopt_prefix(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_prefix	src/clib-update.c	/^static void setopt_prefix(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_prefix	src/clib-upgrade.c	/^static void setopt_prefix(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_quiet	src/clib-build.c	/^static void setopt_quiet(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_quiet	src/clib-configure.c	/^static void setopt_quiet(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_quiet	src/clib-init.c	/^static void setopt_quiet(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_quiet	src/clib-install.c	/^static void setopt_quiet(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_quiet	src/clib-update.c	/^static void setopt_quiet(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_quiet	src/clib-upgrade.c	/^static void setopt_quiet(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_save	src/clib-install.c	/^static void setopt_save(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_savedev	src/clib-install.c	/^static void setopt_savedev(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_skip_cache	src/clib-build.c	/^static void setopt_skip_cache(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_skip_cache	src/clib-configure.c	/^static void setopt_skip_cache(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_skip_cache	src/clib-install.c	/^static void setopt_skip_cache(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_slug	src/clib-upgrade.c	/^static void setopt_slug(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_tag	src/clib-upgrade.c	/^static void setopt_tag(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_test	src/clib-build.c	/^static void setopt_test(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_token	src/clib-install.c	/^static void setopt_token(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_token	src/clib-update.c	/^static void setopt_token(command_t *self) {$/;"	f	typeref:typename:void	file:
setopt_token	src/clib-upgrade.c	/^static void setopt_token(command_t *self) {$/;"	f	typeref:typename:void	file:
size	deps/http-get/http-get.h	/^  size_t size;$/;"	m	struct:__anonf56bd07f0108	typeref:typename:size_t
skip_cache	src/clib-build.c	/^  int skip_cache;$/;"	m	struct:options	typeref:typename:int	file:
skip_cache	src/clib-configure.c	/^  int skip_cache;$/;"	m	struct:options	typeref:typename:int	file:
skip_cache	src/clib-install.c	/^  int skip_cache;$/;"	m	struct:options	typeref:typename:int	file:
skip_cache	src/common/clib-package.h	/^  int skip_cache;$/;"	m	struct:__anon9e68895d0308	typeref:typename:int
skip_quotes	deps/parson/parson.c	/^static void skip_quotes(const char **string) {$/;"	f	typeref:typename:void	file:
slug	src/clib-upgrade.c	/^  char *slug;$/;"	m	struct:options	typeref:typename:char *	file:
small	deps/commander/commander.h	/^  const char *small;$/;"	m	struct:__anonc47d9c110108	typeref:typename:const char *
src	clib.json	/^  "src": [$/;"	a
src	deps/asprintf/package.json	/^  "src": ["asprintf.h", "asprintf.c"]$/;"	a
src	deps/assertion-macros/package.json	/^  "src": [ "assertion-macros.h" ]$/;"	a
src	deps/case/package.json	/^  "src": [$/;"	a
src	deps/commander/clib.json	/^  "src": ["src\/commander.h", "src\/commander.c"]$/;"	a
src	deps/commander/package.json	/^  "src": ["src\/commander.h", "src\/commander.c"]$/;"	a
src	deps/console-colors/package.json	/^  "src": [$/;"	a
src	deps/copy/clib.json	/^  "src": [$/;"	a
src	deps/copy/package.json	/^  "src": [$/;"	a
src	deps/debug/package.json	/^  "src": ["debug.h", "debug.c"],$/;"	a
src	deps/describe/package.json	/^  "src": [ "describe.h" ],$/;"	a
src	deps/fs/clib.json	/^  "src": [$/;"	a
src	deps/fs/package.json	/^  "src": ["fs.h", "fs.c"],$/;"	a
src	deps/gumbo-get-element-by-id/package.json	/^  "src": [$/;"	a
src	deps/gumbo-get-elements-by-tag-name/package.json	/^  "src": [$/;"	a
src	deps/gumbo-parser/package.json	/^    "src": "src"$/;"	s	object:directories
src	deps/gumbo-parser/package.json	/^  "src": [$/;"	a
src	deps/gumbo-text-content/package.json	/^  "src": [$/;"	a
src	deps/hash/clib.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	a
src	deps/hash/package.json	/^  "src": ["hash.c", "hash.h", "khash.h"]$/;"	a
src	deps/http-get/clib.json	/^  "src": [$/;"	a
src	deps/list/package.json	/^  "src": [$/;"	a
src	deps/logger/clib.json	/^  "src": ["logger.h"],$/;"	a
src	deps/logger/package.json	/^  "src": ["logger.h"],$/;"	a
src	deps/mkdirp/package.json	/^  "src": [$/;"	a
src	deps/occurrences/package.json	/^  "src": [$/;"	a
src	deps/parse-repo/package.json	/^  "src": [$/;"	a
src	deps/parson/clib.json	/^  "src": [$/;"	a
src	deps/parson/package.json	/^  "src": [$/;"	a
src	deps/path-join/package.json	/^  "src": [$/;"	a
src	deps/path-normalize/package.json	/^  "src": [$/;"	a
src	deps/rimraf/package.json	/^  "src": [$/;"	a
src	deps/str-concat/clib.json	/^  "src": [$/;"	a
src	deps/str-concat/package.json	/^  "src": [$/;"	a
src	deps/str-ends-with/package.json	/^  "src": [$/;"	a
src	deps/str-flatten/package.json	/^  "src": [$/;"	a
src	deps/str-replace/package.json	/^  "src": [$/;"	a
src	deps/str-starts-with/package.json	/^  "src": [$/;"	a
src	deps/strdup/clib.json	/^  "src": [$/;"	a
src	deps/strdup/package.json	/^  "src": [$/;"	a
src	deps/substr/package.json	/^  "src": [$/;"	a
src	deps/tempdir/package.json	/^  "src": ["tempdir.h", "tempdir.c"],$/;"	a
src	deps/tinydir/package.json	/^  "src": [$/;"	a
src	deps/trim/package.json	/^  "src": [$/;"	a
src	deps/which/clib.json	/^  "src": ["src\/which.c", "src\/which.h"],$/;"	a
src	deps/which/package.json	/^  "src": ["src\/which.c", "src\/which.h"],$/;"	a
src	deps/wiki-registry/package.json	/^  "src": [$/;"	a
src	deps/wildcardcmp/clib.json	/^  "src": ["wildcardcmp.c", "wildcardcmp.h"]$/;"	a
src	deps/wildcardcmp/package.json	/^  "src": ["wildcardcmp.c", "wildcardcmp.h"]$/;"	a
src	src/common/clib-package.h	/^  list_t *src;$/;"	m	struct:__anon9e68895d0208	typeref:typename:list_t *
start_new_tag	deps/gumbo-parser/tokenizer.c	/^static void start_new_tag(GumboParser* parser, bool is_start_tag) {$/;"	f	typeref:typename:void	file:
start_pos	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition start_pos;$/;"	m	struct:__anonc68e32330c08	typeref:typename:GumboSourcePosition
start_pos	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition start_pos;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboSourcePosition
start_tag	deps/gumbo-parser/tokenizer.h	/^    GumboTokenStartTag start_tag;$/;"	m	union:GumboInternalToken::__anonb159a4d4010a	typeref:typename:GumboTokenStartTag
state	deps/gumbo-parser/error.h	/^  GumboTokenizerErrorState state;$/;"	m	struct:GumboInternalTokenizerError	typeref:typename:GumboTokenizerErrorState
status	deps/http-get/http-get.h	/^  long status;$/;"	m	struct:__anonf56bd07f0108	typeref:typename:long
stephenmathieson/assertion-macros.h	deps/describe/package.json	/^    "stephenmathieson\/assertion-macros.h": "0.2.1",$/;"	s	object:dependencies
stephenmathieson/case.c	clib.json	/^    "stephenmathieson\/case.c": "0.1.3",$/;"	s	object:dependencies
stephenmathieson/case.c	deps/gumbo-get-elements-by-tag-name/package.json	/^    "stephenmathieson\/case.c": "*",$/;"	s	object:dependencies
stephenmathieson/case.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/case.c": "*",$/;"	s	object:dependencies
stephenmathieson/debug.c	clib.json	/^    "stephenmathieson\/debug.c": "0.0.0",$/;"	s	object:dependencies
stephenmathieson/describe.h	clib.json	/^    "stephenmathieson\/describe.h": "2.0.1"$/;"	s	object:development
stephenmathieson/describe.h	deps/occurrences/package.json	/^    "stephenmathieson\/describe.h": "2.0.1"$/;"	s	object:development
stephenmathieson/describe.h	deps/parse-repo/package.json	/^    "stephenmathieson\/describe.h": "*"$/;"	s	object:development
stephenmathieson/describe.h	deps/str-replace/package.json	/^    "stephenmathieson\/describe.h": "2.0.2"$/;"	s	object:development
stephenmathieson/describe.h	deps/substr/package.json	/^    "stephenmathieson\/describe.h": "*"$/;"	s	object:development
stephenmathieson/describe.h	deps/trim/package.json	/^    "stephenmathieson\/describe.h": "master"$/;"	s	object:development
stephenmathieson/describe.h	deps/which/clib.json	/^    "stephenmathieson\/describe.h": "1.0.0"$/;"	s	object:development
stephenmathieson/describe.h	deps/which/package.json	/^    "stephenmathieson\/describe.h": "1.0.0"$/;"	s	object:development
stephenmathieson/gumbo-get-element-by-id.c	deps/gumbo-get-elements-by-tag-name/package.json	/^    "stephenmathieson\/gumbo-get-element-by-id.c": "*"$/;"	s	object:development
stephenmathieson/gumbo-get-element-by-id.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/gumbo-get-element-by-id.c": "*",$/;"	s	object:dependencies
stephenmathieson/gumbo-get-elements-by-tag-name.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/gumbo-get-elements-by-tag-name.c": "*",$/;"	s	object:dependencies
stephenmathieson/gumbo-text-content.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/gumbo-text-content.c": "*",$/;"	s	object:dependencies
stephenmathieson/http-get.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/http-get.c": "*",$/;"	s	object:dependencies
stephenmathieson/mkdirp.c	clib.json	/^    "stephenmathieson\/mkdirp.c": "0.1.5",$/;"	s	object:dependencies
stephenmathieson/occurrences.c	deps/str-replace/package.json	/^    "stephenmathieson\/occurrences.c": "*",$/;"	s	object:dependencies
stephenmathieson/parse-repo.c	clib.json	/^    "stephenmathieson\/parse-repo.c": "1.1.1",$/;"	s	object:dependencies
stephenmathieson/path-join.c	clib.json	/^    "stephenmathieson\/path-join.c": "0.0.6",$/;"	s	object:dependencies
stephenmathieson/path-join.c	deps/rimraf/package.json	/^    "stephenmathieson\/path-join.c": "master"$/;"	s	object:dependencies
stephenmathieson/path-normalize.c	deps/mkdirp/package.json	/^    "stephenmathieson\/path-normalize.c": "*",$/;"	s	object:dependencies
stephenmathieson/rimraf.c	clib.json	/^    "stephenmathieson\/rimraf.c": "0.1.0"$/;"	s	object:dependencies
stephenmathieson/rimraf.c	deps/copy/clib.json	/^    "stephenmathieson\/rimraf.c": "0.1.0"$/;"	s	object:development
stephenmathieson/rimraf.c	deps/copy/package.json	/^    "stephenmathieson\/rimraf.c": "0.1.0"$/;"	s	object:development
stephenmathieson/str-ends-with.c	deps/path-join/package.json	/^    "stephenmathieson\/str-ends-with.c": "*",$/;"	s	object:dependencies
stephenmathieson/str-flatten.c	clib.json	/^    "stephenmathieson\/str-flatten.c": "0.0.4",$/;"	s	object:dependencies
stephenmathieson/str-replace.c	clib.json	/^    "stephenmathieson\/str-replace.c": "0.0.6",$/;"	s	object:dependencies
stephenmathieson/str-starts-with.c	deps/path-join/package.json	/^    "stephenmathieson\/str-starts-with.c": "*",$/;"	s	object:dependencies
stephenmathieson/substr.c	clib.json	/^    "stephenmathieson\/substr.c": "0.1.2",$/;"	s	object:dependencies
stephenmathieson/substr.c	deps/parse-repo/package.json	/^    "stephenmathieson\/substr.c": "0.1.2",$/;"	s	object:dependencies
stephenmathieson/substr.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/substr.c": "*",$/;"	s	object:dependencies
stephenmathieson/tempdir.c	clib.json	/^    "stephenmathieson\/tempdir.c": "0.0.2",$/;"	s	object:dependencies
stephenmathieson/trim.c	clib.json	/^    "stephenmathieson\/trim.c": "0.0.2",$/;"	s	object:dependencies
stephenmathieson/trim.c	deps/gumbo-get-elements-by-tag-name/package.json	/^    "stephenmathieson\/trim.c": "*"$/;"	s	object:dependencies
stephenmathieson/trim.c	deps/wiki-registry/package.json	/^    "stephenmathieson\/trim.c": "*",$/;"	s	object:dependencies
stephenmathieson/wiki-registry.c	clib.json	/^    "stephenmathieson\/wiki-registry.c": "0.0.4",$/;"	s	object:dependencies
stop_on_first_error	deps/gumbo-parser/gumbo.h	/^  bool stop_on_first_error;$/;"	m	struct:GumboInternalOptions	typeref:typename:bool
str_ends_with	deps/str-ends-with/str-ends-with.c	/^bool str_ends_with(const char *str, const char *end) {$/;"	f	typeref:typename:bool
str_flatten	deps/str-flatten/str-flatten.c	/^str_flatten(const char *array[], int start, int end) {$/;"	f	typeref:typename:char *
str_replace	deps/str-replace/str-replace.c	/^str_replace(const char *str, const char *sub, const char *replace) {$/;"	f	typeref:typename:char *
str_starts_with	deps/str-starts-with/str-starts-with.c	/^bool str_starts_with(const char *str, const char *start) {$/;"	f	typeref:typename:bool
strdup	clib.json	/^    "strdup": "*",$/;"	s	object:dependencies
strdup	deps/debug/package.json	/^    "strdup": "0.0.0",$/;"	s	object:dependencies
strdup	deps/mkdirp/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/parse-repo/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/path-join/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/path-normalize/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/strdup/strdup.c	/^strdup(const char *str) {$/;"	f	typeref:typename:char *
strdup	deps/substr/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/tempdir/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/which/clib.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/which/package.json	/^    "strdup": "0.0.0"$/;"	s	object:dependencies
strdup	deps/wiki-registry/package.json	/^    "strdup": "0.0.0",$/;"	s	object:dependencies
stream	deps/debug/debug.h	/^  FILE *stream;$/;"	m	struct:__anon5a8922b30108	typeref:typename:FILE *
string	deps/parson/parson.c	/^    char        *string;$/;"	m	union:json_value_value	typeref:typename:char *	file:
substr	deps/substr/substr.c	/^substr(const char *str, int start, int end) {$/;"	f	typeref:typename:char *
system_identifier	deps/gumbo-parser/gumbo.h	/^  const char* system_identifier;$/;"	m	struct:__anonc68e32330b08	typeref:typename:const char *
system_identifier	deps/gumbo-parser/tokenizer.h	/^  const char* system_identifier;$/;"	m	struct:GumboInternalTokenDocType	typeref:typename:const char *
tab_stop	deps/gumbo-parser/gumbo.h	/^  int tab_stop;$/;"	m	struct:GumboInternalOptions	typeref:typename:int
tag	deps/gumbo-parser/gumbo.h	/^  GumboTag tag;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboTag
tag	deps/gumbo-parser/tokenizer.h	/^  GumboTag tag;$/;"	m	struct:GumboInternalTokenStartTag	typeref:typename:GumboTag
tag	src/clib-upgrade.c	/^  char *tag;$/;"	m	struct:options	typeref:typename:char *	file:
tag_in	deps/gumbo-parser/parser.c	/^static bool tag_in(const GumboToken* token, bool is_start, ...) {$/;"	f	typeref:typename:bool	file:
tag_is	deps/gumbo-parser/parser.c	/^static bool tag_is(const GumboToken* token, bool is_start, GumboTag tag) {$/;"	f	typeref:typename:bool	file:
tag_namespace	deps/gumbo-parser/gumbo.h	/^  GumboNamespaceEnum tag_namespace;$/;"	m	struct:__anonc68e32330d08	typeref:typename:GumboNamespaceEnum
tag_stack	deps/gumbo-parser/error.h	/^  GumboVector \/* GumboTag *\/ tag_stack;$/;"	m	struct:GumboInternalParserError	typeref:typename:GumboVector
tail	deps/list/list.h	/^  list_node_t *tail;$/;"	m	struct:__anonf0edcb3d0208	typeref:typename:list_node_t *
temporary_buffer_equals	deps/gumbo-parser/tokenizer.c	/^static bool temporary_buffer_equals($/;"	f	typeref:typename:bool	file:
test	Makefile	/^test:$/;"	t
test	deps/fs/clib.json	/^    "test": "make test"$/;"	s	object:scripts
test	deps/fs/package.json	/^    "test": "make test"$/;"	s	object:scripts
test	src/clib-build.c	/^  char *test;$/;"	m	struct:options	typeref:typename:char *	file:
test	test/cache/Makefile	/^test: $(TEST_BIN)$/;"	t
test	test/package/Makefile	/^test: $(TEST_BIN)$/;"	t
test_hash_clear	deps/hash/hash.c	/^test_hash_clear() {$/;"	f	typeref:typename:void
test_hash_del	deps/hash/hash.c	/^test_hash_del() {$/;"	f	typeref:typename:void
test_hash_each	deps/hash/hash.c	/^test_hash_each() {$/;"	f	typeref:typename:void
test_hash_each_key	deps/hash/hash.c	/^test_hash_each_key() {$/;"	f	typeref:typename:void
test_hash_each_val	deps/hash/hash.c	/^test_hash_each_val() {$/;"	f	typeref:typename:void
test_hash_get	deps/hash/hash.c	/^test_hash_get() {$/;"	f	typeref:typename:void
test_hash_has	deps/hash/hash.c	/^test_hash_has() {$/;"	f	typeref:typename:void
test_hash_set	deps/hash/hash.c	/^test_hash_set() {$/;"	f	typeref:typename:void
test_hash_size	deps/hash/hash.c	/^test_hash_size() {$/;"	f	typeref:typename:void
text	deps/gumbo-parser/error.h	/^    GumboStringPiece text;$/;"	m	union:GumboInternalError::__anon25fbe703030a	typeref:typename:GumboStringPiece
text	deps/gumbo-parser/gumbo.h	/^    GumboText text;              \/\/ For everything else.$/;"	m	union:GumboInternalNode::__anonc68e32330e0a	typeref:typename:GumboText
text	deps/gumbo-parser/gumbo.h	/^  const char* text;$/;"	m	struct:__anonc68e32330c08	typeref:typename:const char *
text	deps/gumbo-parser/tokenizer.h	/^    const char* text;    \/\/ For comments.$/;"	m	union:GumboInternalToken::__anonb159a4d4010a	typeref:typename:const char *
text_nodes_t	deps/gumbo-text-content/gumbo-text-content.c	/^} text_nodes_t;$/;"	t	typeref:struct:__anon4e8ab7e80108	file:
thlorenz/gumbo-parser.c	deps/gumbo-get-element-by-id/package.json	/^    "thlorenz\/gumbo-parser.c": "*"$/;"	s	object:development
thlorenz/gumbo-parser.c	deps/gumbo-get-elements-by-tag-name/package.json	/^    "thlorenz\/gumbo-parser.c": "*",$/;"	s	object:development
thlorenz/gumbo-parser.c	deps/gumbo-text-content/package.json	/^    "thlorenz\/gumbo-parser.c": "*"$/;"	s	object:development
thlorenz/gumbo-parser.c	deps/wiki-registry/package.json	/^    "thlorenz\/gumbo-parser.c": "*",$/;"	s	object:dependencies
thread	src/common/clib-package.c	/^  pthread_t thread;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:pthread_t	file:
throw	test/install-brace-expansion.sh	/^throw() {$/;"	f
throw	test/install-deps-from-package-json.sh	/^throw() {$/;"	f
throw	test/install-multiple-clibs-libs.sh	/^throw() {$/;"	f
throw	test/install-multiple-libs.sh	/^throw() {$/;"	f
tinydir_close	deps/tinydir/tinydir.h	/^void tinydir_close(tinydir_dir *dir)$/;"	f	typeref:typename:_TINYDIR_FUNC void
tinydir_dir	deps/tinydir/tinydir.h	/^typedef struct tinydir_dir$/;"	s
tinydir_dir	deps/tinydir/tinydir.h	/^} tinydir_dir;$/;"	t	typeref:struct:tinydir_dir
tinydir_file	deps/tinydir/tinydir.h	/^typedef struct tinydir_file$/;"	s
tinydir_file	deps/tinydir/tinydir.h	/^} tinydir_file;$/;"	t	typeref:struct:tinydir_file
tinydir_file_open	deps/tinydir/tinydir.h	/^int tinydir_file_open(tinydir_file *file, const _tinydir_char_t *path)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_next	deps/tinydir/tinydir.h	/^int tinydir_next(tinydir_dir *dir)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_open	deps/tinydir/tinydir.h	/^int tinydir_open(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_open_sorted	deps/tinydir/tinydir.h	/^int tinydir_open_sorted(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_open_subdir_n	deps/tinydir/tinydir.h	/^int tinydir_open_subdir_n(tinydir_dir *dir, size_t i)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_readfile	deps/tinydir/tinydir.h	/^int tinydir_readfile(const tinydir_dir *dir, tinydir_file *file)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_readfile_n	deps/tinydir/tinydir.h	/^int tinydir_readfile_n(const tinydir_dir *dir, tinydir_file *file, size_t i)$/;"	f	typeref:typename:_TINYDIR_FUNC int
to	deps/gumbo-parser/parser.c	/^  const GumboStringPiece to;$/;"	m	struct:_ReplacementEntry	typeref:typename:const GumboStringPiece	file:
to_char	deps/gumbo-parser/char_ref.c	/^  int to_char;$/;"	m	struct:__anona0e2c48e0208	typeref:typename:int	file:
token	src/clib-install.c	/^  char *token;$/;"	m	struct:options	typeref:typename:char *	file:
token	src/clib-update.c	/^  char *token;$/;"	m	struct:options	typeref:typename:char *	file:
token	src/clib-upgrade.c	/^  char *token;$/;"	m	struct:options	typeref:typename:char *	file:
token	src/common/clib-package.h	/^  char *token;$/;"	m	struct:__anon9e68895d0308	typeref:typename:char *
token_has_attribute	deps/gumbo-parser/parser.c	/^static bool token_has_attribute(const GumboToken* token, const char* name) {$/;"	f	typeref:typename:bool	file:
tokenizer	deps/gumbo-parser/error.h	/^    GumboTokenizerError tokenizer;$/;"	m	union:GumboInternalError::__anon25fbe703030a	typeref:typename:GumboTokenizerError
trim	deps/trim/trim.c	/^char *trim(char *str) {$/;"	f	typeref:typename:char *
trim_left	deps/trim/trim.c	/^char *trim_left(char *str) {$/;"	f	typeref:typename:char *
trim_right	deps/trim/trim.c	/^char *trim_right(char *str) {$/;"	f	typeref:typename:char *
type	deps/fs/clib.json	/^    "type": "git",$/;"	s	object:repository
type	deps/fs/package.json	/^    "type": "git",$/;"	s	object:repository
type	deps/gumbo-parser/error.h	/^  GumboErrorType type;$/;"	m	struct:GumboInternalError	typeref:typename:GumboErrorType
type	deps/gumbo-parser/gumbo.h	/^  GumboNodeType type;$/;"	m	struct:GumboInternalNode	typeref:typename:GumboNodeType
type	deps/gumbo-parser/package.json	/^    "type": "git",$/;"	s	object:repository
type	deps/gumbo-parser/tokenizer.h	/^  GumboTokenType type;$/;"	m	struct:GumboInternalToken	typeref:typename:GumboTokenType
type	deps/parson/parson.c	/^    JSON_Value_Type     type;$/;"	m	struct:json_value_t	typeref:typename:JSON_Value_Type	file:
uninstall	Makefile	/^uninstall:$/;"	t
update_position	deps/gumbo-parser/utf8.c	/^static void update_position(Utf8Iterator* iter) {$/;"	f	typeref:typename:void	file:
url	deps/fs/clib.json	/^    "url": "git@github.com:jwerle\/fs.c.git"$/;"	s	object:repository
url	deps/fs/clib.json	/^    "url": "https:\/\/github.com\/jwerle\/fs.c\/issues"$/;"	s	object:bugs
url	deps/fs/package.json	/^    "url": "git@github.com:jwerle\/fs.c.git"$/;"	s	object:repository
url	deps/fs/package.json	/^    "url": "https:\/\/github.com\/jwerle\/fs.c\/issues"$/;"	s	object:bugs
url	deps/gumbo-parser/package.json	/^    "url": "git:\/\/github.com\/thlorenz\/gumbo-parser.c.git"$/;"	s	object:repository
url	deps/gumbo-parser/package.json	/^    "url": "https:\/\/github.com\/thlorenz\/gumbo-parser.c\/issues"$/;"	s	object:bugs
url	src/common/clib-package.h	/^  char *url;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
usage	deps/commander/commander.h	/^  const char *usage;$/;"	m	struct:command	typeref:typename:const char *
usage	src/clib.c	/^static const char *usage =$/;"	v	typeref:typename:const char *	file:
use_colors	deps/debug/debug.c	/^use_colors(FILE *stream) {$/;"	f	typeref:typename:int	file:
userdata	deps/gumbo-parser/gumbo.h	/^  void* userdata;$/;"	m	struct:GumboInternalOptions	typeref:typename:void *
utf8_is_invalid_code_point	deps/gumbo-parser/utf8.c	/^bool utf8_is_invalid_code_point(int c) {$/;"	f	typeref:typename:bool
utf8iterator_current	deps/gumbo-parser/utf8.c	/^int utf8iterator_current(const Utf8Iterator* iter) {$/;"	f	typeref:typename:int
utf8iterator_fill_error_at_mark	deps/gumbo-parser/utf8.c	/^void utf8iterator_fill_error_at_mark($/;"	f	typeref:typename:void
utf8iterator_get_char_pointer	deps/gumbo-parser/utf8.c	/^const char* utf8iterator_get_char_pointer(const Utf8Iterator* iter) {$/;"	f	typeref:typename:const char *
utf8iterator_get_position	deps/gumbo-parser/utf8.c	/^void utf8iterator_get_position($/;"	f	typeref:typename:void
utf8iterator_init	deps/gumbo-parser/utf8.c	/^void utf8iterator_init($/;"	f	typeref:typename:void
utf8iterator_mark	deps/gumbo-parser/utf8.c	/^void utf8iterator_mark(Utf8Iterator* iter) {$/;"	f	typeref:typename:void
utf8iterator_maybe_consume_match	deps/gumbo-parser/utf8.c	/^bool utf8iterator_maybe_consume_match($/;"	f	typeref:typename:bool
utf8iterator_next	deps/gumbo-parser/utf8.c	/^void utf8iterator_next(Utf8Iterator* iter) {$/;"	f	typeref:typename:void
utf8iterator_reset	deps/gumbo-parser/utf8.c	/^void utf8iterator_reset(Utf8Iterator* iter) {$/;"	f	typeref:typename:void
v	deps/gumbo-parser/error.h	/^  } v;$/;"	m	struct:GumboInternalError	typeref:union:GumboInternalError::__anon25fbe703030a
v	deps/gumbo-parser/gumbo.h	/^  } v;$/;"	m	struct:GumboInternalNode	typeref:union:GumboInternalNode::__anonc68e32330e0a
v	deps/gumbo-parser/tokenizer.h	/^  } v;$/;"	m	struct:GumboInternalToken	typeref:union:GumboInternalToken::__anonb159a4d4010a
val	deps/list/list.h	/^  void *val;$/;"	m	struct:list_node	typeref:typename:void *
valgrind	test/cache/Makefile	/^valgrind: TEST_RUNNER=$(VALGRIND) $(VALGRIND_OPTS)$/;"	t
valgrind	test/cache/Makefile	/^valgrind: test$/;"	t
valgrind	test/package/Makefile	/^valgrind: TEST_RUNNER=$(VALGRIND) $(VALGRIND_OPTS)$/;"	t
valgrind	test/package/Makefile	/^valgrind: test$/;"	t
value	deps/gumbo-parser/gumbo.h	/^  const char* value;$/;"	m	struct:__anonc68e32330608	typeref:typename:const char *
value	deps/parson/parson.c	/^    JSON_Value_Value    value;$/;"	m	struct:json_value_t	typeref:typename:JSON_Value_Value	file:
value_end	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition value_end;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboSourcePosition
value_start	deps/gumbo-parser/gumbo.h	/^  GumboSourcePosition value_start;$/;"	m	struct:__anonc68e32330608	typeref:typename:GumboSourcePosition
values	deps/parson/parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	typeref:typename:JSON_Value **	file:
vasprintf	deps/asprintf/asprintf.c	/^vasprintf (char **str, const char *fmt, va_list args) {$/;"	f	typeref:typename:int
verbose	src/clib-build.c	/^  int verbose;$/;"	m	struct:options	typeref:typename:int	file:
verbose	src/clib-configure.c	/^  int verbose;$/;"	m	struct:options	typeref:typename:int	file:
verbose	src/clib-init.c	/^  int verbose;$/;"	m	struct:options	typeref:typename:int	file:
verbose	src/clib-install.c	/^  int verbose;$/;"	m	struct:options	typeref:typename:int	file:
verbose	src/clib-update.c	/^  int verbose;$/;"	m	struct:options	typeref:typename:int	file:
verbose	src/clib-upgrade.c	/^  int verbose;$/;"	m	struct:options	typeref:typename:int	file:
verbose	src/common/clib-package.c	/^  int verbose;$/;"	m	struct:fetch_package_file_thread_data	typeref:typename:int	file:
verify_utf8_sequence	deps/parson/parson.c	/^static int verify_utf8_sequence(const unsigned char *string, int *len) {$/;"	f	typeref:typename:int	file:
version	clib.json	/^  "version": "2.1.14",$/;"	s
version	deps/asprintf/package.json	/^  "version": "0.0.3",$/;"	s
version	deps/assertion-macros/package.json	/^  "version": "0.2.1",$/;"	s
version	deps/case/package.json	/^  "version": "0.1.3",$/;"	s
version	deps/commander/clib.json	/^  "version": "1.3.2",$/;"	s
version	deps/commander/commander.h	/^  const char *version;$/;"	m	struct:command	typeref:typename:const char *
version	deps/commander/package.json	/^  "version": "1.3.2",$/;"	s
version	deps/console-colors/package.json	/^  "version": "1.0.1",$/;"	s
version	deps/copy/clib.json	/^  "version": "0.0.0",$/;"	s
version	deps/copy/package.json	/^  "version": "0.0.0",$/;"	s
version	deps/debug/package.json	/^  "version": "0.0.0",$/;"	s
version	deps/describe/package.json	/^  "version": "2.0.1",$/;"	s
version	deps/fs/clib.json	/^  "version": "0.2.0",$/;"	s
version	deps/fs/package.json	/^  "version": "0.1.2",$/;"	s
version	deps/gumbo-get-element-by-id/package.json	/^  "version": "1.0.1",$/;"	s
version	deps/gumbo-get-elements-by-tag-name/package.json	/^  "version": "1.0.1",$/;"	s
version	deps/gumbo-parser/package.json	/^  "version": "0.1.0",$/;"	s
version	deps/gumbo-text-content/package.json	/^  "version": "1.0.3",$/;"	s
version	deps/hash/clib.json	/^  "version": "0.0.1",$/;"	s
version	deps/hash/package.json	/^  "version": "0.0.1",$/;"	s
version	deps/http-get/clib.json	/^  "version": "0.2.2",$/;"	s
version	deps/list/package.json	/^  "version": "0.1.0",$/;"	s
version	deps/logger/clib.json	/^  "version": "0.0.1",$/;"	s
version	deps/logger/package.json	/^  "version": "0.0.1",$/;"	s
version	deps/mkdirp/package.json	/^  "version": "0.1.5",$/;"	s
version	deps/occurrences/package.json	/^  "version": "1.0.0",$/;"	s
version	deps/parse-repo/package.json	/^  "version": "1.1.1",$/;"	s
version	deps/parson/clib.json	/^  "version": "1.0.2",$/;"	s
version	deps/parson/package.json	/^  "version": "1.0.2",$/;"	s
version	deps/path-join/package.json	/^  "version": "0.0.6",$/;"	s
version	deps/path-normalize/package.json	/^  "version": "0.0.6",$/;"	s
version	deps/rimraf/package.json	/^  "version": "0.1.0",$/;"	s
version	deps/str-concat/clib.json	/^  "version": "0.0.2",$/;"	s
version	deps/str-concat/package.json	/^  "version": "0.0.2",$/;"	s
version	deps/str-ends-with/package.json	/^  "version": "0.0.3",$/;"	s
version	deps/str-flatten/package.json	/^  "version": "0.0.4",$/;"	s
version	deps/str-replace/package.json	/^  "version": "0.0.6",$/;"	s
version	deps/str-starts-with/package.json	/^  "version": "0.0.3",$/;"	s
version	deps/strdup/clib.json	/^  "version": "0.1.5",$/;"	s
version	deps/strdup/package.json	/^  "version": "0.0.0",$/;"	s
version	deps/substr/package.json	/^  "version": "0.1.2",$/;"	s
version	deps/tempdir/package.json	/^  "version": "0.0.2",$/;"	s
version	deps/tinydir/package.json	/^  "version": "1.2.4",$/;"	s
version	deps/trim/package.json	/^  "version": "0.0.2",$/;"	s
version	deps/which/clib.json	/^  "version": "0.1.3",$/;"	s
version	deps/which/package.json	/^  "version": "0.1.3",$/;"	s
version	deps/wiki-registry/package.json	/^  "version": "0.0.4",$/;"	s
version	deps/wildcardcmp/clib.json	/^  "version": "0.0.0",$/;"	s
version	deps/wildcardcmp/package.json	/^  "version": "0.0.0",$/;"	s
version	package.json	/^    "version": "which node >\/dev\/null && .\/scripts\/update-clib-json && git add clib.json"$/;"	s	object:scripts
version	package.json	/^  "version": "2.1.14",$/;"	s
version	scripts/update-clib-json	/^  JSON.stringify(Object.assign(clib, { version: pkg.version }), null, '  '))$/;"	p	variable:anonymousObject57e3158d0105
version	src/common/clib-package.h	/^  char *version;$/;"	m	struct:__anon9e68895d0108	typeref:typename:char *
version	src/common/clib-package.h	/^  char *version;$/;"	m	struct:__anon9e68895d0208	typeref:typename:char *
version	test/package/clib.json	/^  "version": "0.0.0",$/;"	s
visited_packages	src/common/clib-package.c	/^static hash_t *visited_packages = 0;$/;"	v	typeref:typename:hash_t *	file:
which	clib.json	/^    "which": "0.1.3",$/;"	s	object:dependencies
which	deps/which/which.c	/^which(const char *name) {$/;"	f	typeref:typename:char *
which_path	deps/which/which.c	/^which_path(const char *name, const char *_path) {$/;"	f	typeref:typename:char *
wiki_html_cache	src/clib-search.c	/^static char *wiki_html_cache() {$/;"	f	typeref:typename:char *	file:
wiki_package_free	deps/wiki-registry/wiki-registry.c	/^wiki_package_free(wiki_package_t *pkg) {$/;"	f	typeref:typename:void
wiki_package_new	deps/wiki-registry/wiki-registry.c	/^wiki_package_new() {$/;"	f	typeref:typename:wiki_package_t *	file:
wiki_package_t	deps/wiki-registry/wiki-registry.h	/^} wiki_package_t;$/;"	t	typeref:struct:__anon5d71bd190108
wiki_registry	deps/wiki-registry/wiki-registry.c	/^wiki_registry(const char *url) {$/;"	f	typeref:typename:list_t *
wiki_registry_parse	deps/wiki-registry/wiki-registry.c	/^wiki_registry_parse(const char *html) {$/;"	f	typeref:typename:list_t *
wildcardcmp	deps/debug/package.json	/^    "wildcardcmp": "0.0.0"$/;"	s	object:dependencies
wildcardcmp	deps/wildcardcmp/wildcardcmp.c	/^wildcardcmp(const char *pattern, const char *string) {$/;"	f	typeref:typename:int
write_dependency	src/clib-install.c	/^static int write_dependency(clib_package_t *pkg, char *prefix) {$/;"	f	typeref:typename:int	file:
write_dependency_with_package_name	src/clib-install.c	/^static int write_dependency_with_package_name(clib_package_t *pkg, char *prefix,$/;"	f	typeref:typename:int	file:
write_dependency_with_package_name	src/clib-update.c	/^static int write_dependency_with_package_name(clib_package_t *pkg, char *prefix,$/;"	f	typeref:typename:int	file:
write_package_file	src/clib-init.c	/^static int write_package_file(const char *manifest, JSON_Value *pkg) {$/;"	f	typeref:typename:int	file:
write_to_file	src/clib-init.c	/^static inline size_t write_to_file(const char *manifest, const char *str,$/;"	f	typeref:typename:size_t	file:
